{"version":3,"sources":["./src/app/_components/alignment-cube/index.ts","./src/app/_components/navbar/navbar.component.ts","./src/app/_components/navbar/navbar.component.html","./src/app/models/MappingType.ts","./src/app/pages/gsb-page/gsb-page.component.ts","./src/app/pages/gsb-page/gsb-page.component.html","./src/app/_components/gold-standard-builder/builder/mapping-table/mapping-table.component.ts","./src/app/_components/gold-standard-builder/builder/mapping-table/mapping-table.component.html","./src/app/_components/alignment-cube/ui/index.ts","./src/app/_components/gold-standard-builder/gold-standard-builder.component.ts","./src/app/_components/gold-standard-builder/gold-standard-builder.component.html","./src/app/_classes/alignment/index.ts","./src/assets/settings.ts","./src/app/pages/alignment-viewer-page/alignment-viewer-page.component.ts","./src/app/pages/alignment-viewer-page/alignment-viewer-page.component.html","./src/app/models/ViewModeEnum.ts","./src/environments/environment.ts","./src/app/_classes/threeJsHelper/DataCubeCreator.ts","./src/app/_components/alignment-cube/ui/ui-sidebar-left/ui-sidebar-left.component.ts","./src/app/_components/alignment-cube/ui/ui-sidebar-left/ui-sidebar-left.component.html","./src/app/_classes/alignment/Alignment.ts","./src/app/_components/gold-standard-builder/db-selecector/db-selecector.component.ts","./src/app/_components/gold-standard-builder/db-selecector/db-selecector.component.html","./src/app/_components/alignment-cube/ui/ui-sidebar-left/index.ts","./src/app/_classes/threeJsHelper/ThreeJsUtil.ts","./src/app/_components/json-viewer/json-viewer.component.ts","./src/app/_components/json-viewer/json-viewer.component.html","./src/app/_services/index.ts","./src/app/_components/alignment-cube/alignment-selector/alignment-selector.component.ts","./src/app/_components/alignment-cube/alignment-selector/alignment-selector.component.html","./src/app/_classes/alignment/alignment-container.ts","./src/app/_components/gold-standard-builder/builder/builder.component.ts","./src/app/_components/gold-standard-builder/builder/builder.component.html","./src/app/_components/databases/db-information/db-information.component.ts","./src/app/_components/databases/db-information/db-information.component.html","./src/app/_components/alignment-cube/ui/ui-infobar-top/ui-infobar-top.component.ts","./src/app/_components/alignment-cube/ui/ui-infobar-top/ui-infobar-top.component.html","./src/app/_components/apis/api-information/api-information.component.ts","./src/app/_components/apis/api-information/api-information.component.html","./src/app/_services/path-formatter.service.ts","./src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-editor/mapping-editor.component.ts","./src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-editor/mapping-editor.component.html","./src/app/pages/data-cube-page/data-cube-page.component.ts","./src/app/pages/data-cube-page/data-cube-page.component.html","./src/app/_components/gold-standard-builder/final-alignmnet/final-alignment.component.ts","./src/app/_components/gold-standard-builder/final-alignmnet/final-alignment.component.html","./src/app/_components/alignment-cube/alignment-selector/index.ts","./src/app/_components/navbar/index.ts","./src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-view/mapping-view.component.ts","./src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-view/mapping-view.component.html","./src/app/_classes/threeJsHelper/index.ts","./src/app/_services/gsb.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion/mapping-suggestion.component.ts","./src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion/mapping-suggestion.component.html","./src/app/_classes/alignment/Mapping.ts","./src/app/pages/schema-page/schema.component.ts","./src/app/pages/schema-page/schema.component.html","./src/app/_classes/alignment/RelationPath.ts","./src/app/models/index.ts","./src/app/_components/alignment-cube/ui/ui.component.ts","./src/app/_components/alignment-cube/ui/ui.component.html","./src/app/_classes/threeJsHelper/LabelCreator.ts","./src/app/_classes/threeJsHelper/SceneLoader.ts","./src/app/_components/alignment-cube/ui/ui-sidebar-right/ui-sidebar-right.component.ts","./src/app/_components/alignment-cube/ui/ui-sidebar-right/ui-sidebar-right.component.html","./src/app/pages/setting-page/setting-page.component.ts","./src/app/pages/setting-page/setting-page.component.html","./src/app/app.module.ts","./src/app/_components/databases/db-create-form/db-create-form.component.ts","./src/app/_components/databases/db-create-form/db-create-form.component.html","./src/app/pages/start-page/start-page.component.ts","./src/app/pages/start-page/start-page.component.html","./src/app/_components/webservices/webservice-information/webservice-information.component.ts","./src/app/_components/webservices/webservice-information/webservice-information.component.html","./src/app/_components/alignment-cube/ui/ui-sidebar-right/index.ts","./src/app/_components/apis/api-create-form/api-create-form.component.ts","./src/app/_components/apis/api-create-form/api-create-form.component.html","./src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion-tool.component.ts","./src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion-tool.component.html","./src/app/_classes/threeJsHelper/PickHelper.ts","./src/app/pages/test/test.component.ts","./src/app/pages/test/test.component.html","./src/app/_classes/alignment/Metric.ts","./src/app/_components/apis/api-overview/api-overview.component.ts","./src/app/_components/apis/api-overview/api-overview.component.html","./src/app/_classes/threeJsHelper/ResourceTracker.ts","./src/app/_components/alignment-viewer/alignment-viewer.component.ts","./src/app/_components/alignment-viewer/alignment-viewer.component.html","./src/app/_components/webservices/webservices-overview/webservices-overview.component.ts","./src/app/_components/webservices/webservices-overview/webservices-overview.component.html","./src/app/_pipes/highlight.pipe.ts","./src/app/_components/webservices/webservice-create-form/webservice-create-form.component.ts","./src/app/_components/webservices/webservice-create-form/webservice-create-form.component.html","./src/app/_classes/gsb/lines.ts","./src/app/_interfaces/index.ts","./src/app/_components/alignment-cube/ui/ui-infobar-bottom/ui-infobar-bottom.component.ts","./src/app/_components/alignment-cube/ui/ui-infobar-bottom/ui-infobar-bottom.component.html","./src/app/_services/backend-connection.service.ts","./src/app/_classes/Utils.ts","./src/app/app-routing.module.ts","./src/app/_components/alignment-cube/engine/alignment-cube.service.ts","./src/app/_components/databases/db-overview/databases-overview.component.ts","./src/app/_components/databases/db-overview/databases-overview.component.html","./src/app/_components/alignment-cube/ui/ui-infobar-bottom/index.ts","./src/app/_components/alignment-cube/ui/ui-infobar-top/index.ts","./src/app/_components/alignment-cube/alignment-cube.component.ts","./src/app/_components/alignment-cube/alignment-cube.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export * from './alignment-cube.component';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm navbar-light bg-light px-2 z\">\n  <a class=\"navbar-brand\" routerLink=\"start\">ETARA</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"dataCube\">DataCube</a>\n      </li>\n<!--      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"currentTest\">Test</a>\n      </li>-->\n<!--      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"schema\">Schema</a>\n      </li>-->\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"goldStandardBuilder\">GoldStandardBuilder</a>\n      </li>\n<!--      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"webservicesOverview\">Webservices</a>\n      </li>-->\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"settings\">Settings</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","export enum MappingType {\n    LocalToWeb,\n    WebToLocal,\n    Bidirectional\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gsb-page',\n  templateUrl: './gsb-page.component.html',\n  styleUrls: ['./gsb-page.component.scss']\n})\nexport class GsbPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-gold-standard-builder></app-gold-standard-builder>\n\n","import {ChangeDetectorRef, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {LeaderLineAlignment} from '../../../../_classes/gsb/lines';\nimport {GsbService} from '../../../../_services/gsb.service';\nimport {Utils} from '../../../../_classes/Utils';\n\n@Component({\n    selector: 'app-mapping-table',\n    templateUrl: './mapping-table.component.html',\n    styleUrls: ['./mapping-table.component.scss']\n})\nexport class MappingTableComponent {\n\n    showFullPathLocal = false;\n    utils: Utils = new Utils();\n\n    constructor(public gsbService: GsbService, public cdr: ChangeDetectorRef) {\n\n    }\n\n    log(): void {\n        console.log(this.gsbService.currentMappings);\n    }\n}\n","<mat-slide-toggle color=\"primary\" [(ngModel)]=\"gsbService.showFullLocalPath\">\n    show full path\n</mat-slide-toggle>\n<div class=\"mapping-wrapper\" *ngIf=\"gsbService.currentMappings\">\n        <div class=\"mapping\" *ngFor=\"let mapping of gsbService.currentMappings\">\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of mapping.localEntries\">\n                    <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry.path : utils.formatLocalPath(entry.path))\"></p>\n                </div>\n            </div>\n            <div class=\"divider\">\n                <div class=\"relationType\">\n                    <mat-icon *ngIf=\"mapping.type === 0\">east</mat-icon>\n                    <mat-icon *ngIf=\"mapping.type === 1\">west</mat-icon>\n                    <mat-icon *ngIf=\"mapping.type === 2\">sync_alt</mat-icon>\n                </div>\n                <div class=\"action\">\n                    <button mat-icon-button aria-label=\"Clear\" (click)=\"gsbService.removeMapping(mapping)\">\n                        <mat-icon>delete</mat-icon>\n                    </button>\n                </div>\n            </div>\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of mapping.webEntries\">\n                    <p>{{entry.path}}</p>\n                </div>\n            </div>\n        </div>\n</div>\n","export * from './ui.component';\n","import {AfterViewInit, ChangeDetectorRef, Component, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport {BackendConnectionService} from '../../_services/backend-connection.service';\nimport {\n    IApi,\n    IApisOverview,\n    ILocalDatabase,\n    ILocalDatabaseSchema,\n    ILocalDatabaseShortInfo,\n    ILocalDatabasesOverview, IPredicate, IRelation\n} from '../../_interfaces';\nimport {MatDialog} from '@angular/material/dialog';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {IErrorMessage} from '../../_interfaces/settings/IErrorMessage';\nimport {Utils} from '../../_classes/Utils';\nimport {GsbService} from '../../_services/gsb.service';\nimport {MatStepper} from '@angular/material/stepper';\nimport {BuilderComponent} from './builder/builder.component';\n\n@Component({\n    selector: 'app-gold-standard-builder',\n    templateUrl: './gold-standard-builder.component.html',\n    styleUrls: ['./gold-standard-builder.component.scss']\n})\nexport class GoldStandardBuilderComponent implements OnInit {\n    @ViewChild('stepper') stepper: MatStepper;\n    @ViewChild('builder') builder: BuilderComponent;\n\n    utils: Utils = new Utils();\n    selectedIndex: number;\n\n    webDbSelected = false;\n    localDbSelected = false;\n    localSchemaLoaded = false;\n    localSchemaError = false;\n    useIdentifierMap = true;\n    showFullPathLocal = true;\n    showFullPathWeb = false;\n\n    currentLocalDatabase: ILocalDatabase;\n    currentWebDatabase: IApi;\n\n    currentLocalDatabaseSchema: ILocalDatabaseSchema;\n    errorMsg: IErrorMessage;\n\n    localEntityFiltered: any;\n    localSortMethod = '';\n    localEntity: any;\n    localEntityLoaded = false;\n    localPathSearchValue = '';\n    localValueSearchValue = '';\n\n    weblEntityFiltered: any;\n    webSortMethod = '';\n    webEntity: any;\n    weblEntityLoaded = false;\n    webPathSearchValue = '';\n    webValueSearchValue = '';\n\n    databases: Array<ILocalDatabaseShortInfo>;\n    apis: Array<IApi>;\n\n    identifiers: string[];\n    predicates: string[];\n\n\n    localHashIds: Set<string> = new Set<string>();\n    localMappingEntries: Set<any> = new Set<any>();\n    webHashIds: Set<string> = new Set<string>();\n    webMappingEntries: Set<any> = new Set<any>();\n    startId: string;\n    endId: string;\n\n    public dbSelectionForm: FormGroup;\n\n    webEntityModFinished = false;\n\n    constructor(private connection: BackendConnectionService,\n                private dialog: MatDialog,\n                private _fb: FormBuilder,\n                public cdr: ChangeDetectorRef,\n                private _dialog: MatDialog,\n                public gsbService: GsbService) {\n\n        this.dbSelectionForm = _fb.group({\n            localDatabase: ['', Validators.required],\n            webDatabase: ['', Validators.required],\n            identifier: [{value: '', disabled: !this.localSchemaLoaded}, Validators.required],\n            inputType: [{value: '', disabled: !this.localSchemaLoaded}, Validators.required],\n        });\n    }\n\n    ngOnInit(): void {\n        this.connection.getDatabases().then((res: ILocalDatabasesOverview) => {\n            this.databases = res.databases;\n        });\n        this.connection.getApis().then((res: IApisOverview) => {\n            this.apis = res.apis;\n        });\n    }\n\n    changeLocalDatabase(dbName: string): void {\n        this.localDbSelected = false;\n        this.localSchemaLoaded = false;\n        this.localSchemaError = false;\n        this.dbSelectionForm.get('identifier').setValue('');\n        this.dbSelectionForm.get('identifier').disable();\n        this.dbSelectionForm.get('inputType').setValue('');\n        this.dbSelectionForm.get('inputType').disable();\n\n\n        this.loadLocalDatabasesData(dbName);\n        this.loadLocalDatabasesSchema(dbName);\n    }\n\n    changeInputType(inputType: string): void {\n        this.identifiers = this.getIdetifier(inputType);\n        this.predicates = this.getPredicates(inputType);\n        this.dbSelectionForm.get('identifier').enable();\n    }\n\n    loadLocalDatabasesData(dbName: string): void {\n        this.connection.getLocalDatabaseData(dbName).then((res: ILocalDatabase) => {\n            this.currentLocalDatabase = res;\n            this.localDbSelected = true;\n\n            if (this.currentLocalDatabase.identifierMapContent !== '') {\n                this.useIdentifierMap = false;\n            }\n        });\n    }\n\n    loadLocalDatabasesSchema(dbName: string): void {\n        this.connection.getLocalDatabaseSchema(dbName).subscribe(\n            (schema: ILocalDatabaseSchema) => {\n                this.currentLocalDatabaseSchema = schema;\n                this.localSchemaLoaded = true;\n                this.dbSelectionForm.get('inputType').enable();\n            },\n            (error) => {\n                this.errorMsg = (error.error as IErrorMessage);\n                this.localSchemaError = true;\n            }\n        );\n    }\n\n    loadWebDatabasesData(dbName: string): void {\n        this.connection.getWebDatabaseData(dbName).then((res: IApi) => {\n            this.currentWebDatabase = res;\n            this.webDbSelected = true;\n        });\n    }\n\n    debugMode() {\n        this.selectedIndex = 1;\n        this.gsbService.debugMode();\n    }\n\n    mappingSelectionFinished(): void {\n        this.gsbService.generateFinalAlignment();\n        this.stepper.next();\n    }\n\n    changeApiResponse(e): void {\n        this.gsbService.changeWebReducedResponse(e);\n    }\n\n    respChangeFinished(): void {\n        this.webEntityModFinished = true;\n        this.builder.init();\n        this.cdr.detectChanges();\n        this.builder.showLines();\n        this.builder.markNewPaths();\n    }\n\n    selectionChange(index): void {\n        if (!this.gsbService.finishedLoading) {\n            return;\n        }\n        if (index === 1) {\n            Utils.delay(500).then(() => {\n                this.builder.showLines();\n            });\n        } else {\n            this.builder.hideLines();\n        }\n    }\n\n    startGSB() {\n        this.stepper.steps.get(0).completed = true;\n        this.stepper.steps.get(0).editable = false;\n        const identifier = this.dbSelectionForm.get('identifier').value;\n        const inputType = this.dbSelectionForm.get('inputType').value;\n        this.gsbService.startNewAlignment(this.currentLocalDatabase, this.currentWebDatabase, identifier, inputType);\n    }\n\n    nextEntity(): void {\n        this.builder.clearLines();\n        this.webEntityModFinished = false;\n        this.gsbService.nextEntity();\n    }\n\n    getIdetifier(inputType: string): string[] {\n        const identifier = [];\n        for (const value of this.currentLocalDatabaseSchema.identifier) {\n            const predicate = value.predicate;\n            const contains = this.currentLocalDatabaseSchema.structure.some(\n                (entry: IRelation) => (entry.subject === inputType && entry.predicate === predicate)\n            );\n            if (contains) {\n                identifier.push(predicate);\n            }\n        }\n\n        return identifier;\n    }\n\n    getPredicates(inputType: string): string[] {\n        const predicates = [];\n        for (const value of this.currentLocalDatabaseSchema.functionality) {\n            const predicate = value.predicate;\n            const contains = this.currentLocalDatabaseSchema.structure.some(\n                (entry: IRelation) => (entry.subject === inputType && entry.predicate === predicate)\n            );\n            if (contains) {\n                predicates.push(predicate);\n            }\n        }\n\n        return predicates;\n    }\n\n\n}\n","<mat-horizontal-stepper linear #stepper (selectionChange)=\"selectionChange($event.selectedIndex)\"\n                        [selectedIndex]=\"selectedIndex\">\n\n    <!--    Select Database     -->\n    <mat-step>\n        <ng-template matStepLabel>Select Databases</ng-template>\n        <form [formGroup]=\"dbSelectionForm\">\n            <div class=\"container-flex\">\n                <div class=\"container-flex-item\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Select local database</mat-label>\n                        <mat-select formControlName=\"localDatabase\"\n                                    (selectionChange)=\"changeLocalDatabase($event.value)\">\n                            <mat-option *ngFor=\"let entry of databases\"\n                                        value=\"{{entry.label}}\">{{entry.label}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Select class</mat-label>\n                        <mat-select formControlName=\"inputType\" (selectionChange)=\"changeInputType($event.value)\">\n                            <ng-container *ngIf=\"currentLocalDatabaseSchema\">\n                                <mat-option *ngFor=\"let entry of currentLocalDatabaseSchema.classes\"\n                                            value=\"{{entry.class}}\">{{entry.class}}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Select identifier</mat-label>\n                        <mat-select formControlName=\"identifier\">\n                            <ng-container *ngIf=\"currentLocalDatabaseSchema\">\n                                <mat-optgroup label=\"identifier\">\n                                    <ng-container *ngFor=\"let entry of identifiers\">\n                                        <mat-option\n                                                value=\"{{entry}}\">{{entry}}\n                                        </mat-option>\n                                    </ng-container>\n<!--                                    <ng-container *ngFor=\"let entry of currentLocalDatabaseSchema.identifier\">-->\n<!--                                        <mat-option-->\n<!--                                                value=\"{{entry.predicate}}\">{{entry.predicate}}-->\n<!--                                        </mat-option>-->\n<!--                                    </ng-container>-->\n\n                                </mat-optgroup>\n                                <mat-optgroup label=\"predicates\">\n                                    <mat-option *ngFor=\"let entry of predicates\"\n                                                value=\"{{entry}}\">{{entry}}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </ng-container>\n                        </mat-select>\n                    </mat-form-field>\n                    <p *ngIf=\"localSchemaError\">ErrorMsg: {{this.errorMsg.errMsg}}</p>\n\n                </div>\n                <div class=\"container-flex-item\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Select web database</mat-label>\n                        <mat-select formControlName=\"webDatabase\"\n                                    (selectionChange)=\"loadWebDatabasesData($event.value)\">\n                            <!--                    <mat-option value=\"None\">None</mat-option>-->\n                            <mat-option *ngFor=\"let entry of apis\"\n                                        value=\"{{entry.label}}\">{{entry.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n\n        <button mat-raised-button color=\"primary\" matStepperNext (click)=\"startGSB()\"\n                [disabled]=\"!dbSelectionForm.valid\">Start\n        </button>\n<!--        <button mat-raised-button matStepperNext (click)=\"debugMode()\">Debug</button>-->\n    </mat-step>\n\n    <!--    Prepare Api Response      -->\n    <mat-step>\n        <ng-template matStepLabel>Prepare Api Response</ng-template>\n        <div class=\"stepper\">\n            <!--            <button mat-raised-button matStepperPrevious>Back</button>-->\n            <button mat-raised-button matStepperNext color=\"primary\" (click)=\"respChangeFinished()\"\n                    [disabled]=\"!gsbService.finishedLoadingWebEntity\">Save and continue\n            </button>\n        </div>\n\n        <div *ngIf=\"!gsbService.finishedLoadingWebEntity && !gsbService.loadingNextEntityFailed\">\n            <div class=\"center\">\n                <mat-spinner></mat-spinner>\n                <p>Api response loading ... ({{gsbService.loadingTries}} of {{gsbService.maxLoadingTries}}\n                    tries)</p>\n            </div>\n        </div>\n        <div *ngIf=\"gsbService.loadingNextEntityFailed\">\n            <div class=\"center\">\n                <div><mat-icon aria-hidden=\"false\" aria-label=\"error\" inline=\"true\" style=\"font-size: 4rem\">error</mat-icon></div>\n                <p>Unable to retrieve a valid api response. (Tested {{gsbService.loadingTries}} different\n                    entities)</p>\n                <p>You can try again another 50 entities or go back and define another identifier.</p>\n                <button mat-raised-button color=\"primary\" (click)=\"gsbService.nextEntity()\">Try again</button>\n            </div>\n        </div>\n        <div *ngIf=\"gsbService.finishedLoadingWebEntity\">\n            <br>\n            <div>\n                <p>Please delete the parts of the response you don't need. Use the icon on the left of the selected\n                    part.</p>\n            </div>\n            <br>\n            <app-json-viewer [jsonData]=\"gsbService.currentWebEntity.reducedResponse\"\n                             (jsonChangeEvent)=\"changeApiResponse($event)\"></app-json-viewer>\n        </div>\n    </mat-step>\n\n    <!--    Entity Mapping      -->\n    <mat-step>\n        <ng-template matStepLabel>Entity Mapping</ng-template>\n        <div class=\"stepper\">\n            <button mat-raised-button color=\"primary\" matStepperNext (click)=\"gsbService.generateSuggestions()\">Generate\n                Final Alignment\n            </button>\n            <button mat-raised-button color=\"primary\" (click)=\"nextEntity()\">Next Entity</button>\n            <button mat-raised-button matStepperPrevious>Edit API Response</button>\n        </div>\n\n        <div *ngIf=\"!gsbService.finishedLoading\">\n            <div class=\"center\">\n                <div>\n                    <mat-spinner></mat-spinner>\n                    <p>Next entity loading ...</p>\n                </div>\n            </div>\n        </div>\n        <app-builder #builder *ngIf=\"gsbService.finishedLoading\"></app-builder>\n    </mat-step>\n    <!--    <mat-step>-->\n    <!--        <ng-template matStepLabel>Mapping Selection</ng-template>-->\n    <!--        <app-mapping-suggestion-tool #suggestion *ngIf=\"gsbService.suggestionsLoaded\" (finishedEvent)=\"mappingSelectionFinished()\" ></app-mapping-suggestion-tool>-->\n    <!--    </mat-step>-->\n    <mat-step>\n        <ng-template matStepLabel>Final Alignmnet</ng-template>\n        <app-final-alignmnet></app-final-alignmnet>\n    </mat-step>\n\n</mat-horizontal-stepper>\n","export * from './Metric';\nexport * from './Mapping';\nexport * from './RelationPath';\nexport * from './Alignment';\nexport * from './alignment-container';\n","export const settings = {\n    regexRelSearch: /(#(\\w)+)$|(\\/[\\w]+)$/g,\n    regexRelReplace: /[#/]/g,\n    joinSymbol: '🡢',\n\n    regexApiSearch: /(\\.[\\w-\\w]+(\\[\\*\\])*)$/g,\n    regexApiReplace: /[./]/g,\n    regexApiReplaceWildcard: /(\\[\\*\\])*$/g,\n\n    rayCasterWorkingLayer: 1\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alignment-viewer-page',\n  templateUrl: './alignment-viewer-page.component.html',\n  styleUrls: ['./alignment-viewer-page.component.scss']\n})\nexport class AlignmentViewerPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-data-selector></app-data-selector>\n","export enum ViewMode {\n    View3D = 'View3D',\n    View2DAlignment = 'Alignment',\n    View2DApi = 'Api',\n    View2DRelation = 'Relation'\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  version: require('../../package.json').version,\n  baseUrl: 'http://localhost:8080/etara',\n  webserviceManagerEndpoint: '/webserviceManager',\n  apiManagerEndpoint: '/apiManager',\n  apiCallEndpoint: '/apiManager/call',\n  apiToFlatJson: '/apiManager/flatJson',\n  jsonDiffEndpoint: '/apiManager/jsonDiff',\n  dbManagerEndpoint: '/dbManager',\n  dbSchemaEndpoint: '/dbManager/schema',\n  dbKnowledgeBaseEndpoint: '/dbManager/knowledge',\n  gsbSuggestions: '/gsb/suggestions',\n  gsbFinalAlignment: '/gsb/saveFinalAlignment',\n\n  gsbEndpoint: '/gsb',\n  webservicesEndpoint: '/webservices'\n};\n","import {AlignmentCubeService} from '../../_components/alignment-cube/engine/alignment-cube.service';\nimport {ResourceTracker} from './ResourceTracker';\nimport * as THREE from 'three';\nimport {AlignmentContainer, RelationPath, Mapping, Alignment} from '../alignment';\nimport {ThreeJsUtil} from './ThreeJsUtil';\nimport {ViewMode} from '../../models';\nimport {CSS2DObject} from 'three/examples/jsm/renderers/CSS2DRenderer';\nimport {settings} from '../../../assets/settings';\nimport {Mesh} from 'three';\n\nexport class DataCubeCreator {\n    private alignmentCubeService: AlignmentCubeService;\n\n    private cubeTracker: ResourceTracker;\n\n    // references to alignmentCubeService variables\n    private scene: THREE.Scene;\n    private alignmentModel: AlignmentContainer;\n\n    constructor(alignmentCubeService: AlignmentCubeService) {\n        this.alignmentCubeService = alignmentCubeService;\n        this.alignmentModel = alignmentCubeService.alignmentContainer;\n        this.scene = alignmentCubeService.scene;\n\n        this.cubeTracker = new ResourceTracker();\n    }\n\n\n    /**\n     * Adds the dataCubes to the scene. ViewMode determines which will be created.\n     */\n    public addDataCubes(): void {\n        const viewMode = this.alignmentCubeService.viewMode;\n\n        this.alignmentModel.alignments.forEach((alignment, index) => {\n            // Check if only the specified alignment should be generated\n            if (!(viewMode !== ViewMode.View2DAlignment || (this.alignmentCubeService.selectedAlignmentIndex === index))) {\n                return;\n            }\n\n            alignment.mappings.forEach((mapping: Mapping) => {\n                // Each Mapping can have multiple api paths\n                mapping.apiPaths.forEach((apiPath) => {\n                    const indexApi = this.alignmentModel.apiLabels.findIndex((value) => value === apiPath);\n\n                    // Check if only the specified api path should be generated\n                    if (!(viewMode !== ViewMode.View2DApi || (this.alignmentCubeService.selectedApiPathIndex === indexApi))) {\n                        return;\n                    }\n                    // Each Mapping can have multiple relation paths\n                    mapping.relationPaths.forEach((rel) => {\n                        const indexRel = this.alignmentModel.getRelationPathIndex(rel.paths);\n                        // Check if only the specified relationPath should be generated\n                        if (!(viewMode !== ViewMode.View2DRelation\n                            || (this.alignmentCubeService.selectedRelationPathLabelIndex === indexRel))) {\n                            return;\n                        }\n\n                        const cube = this.createDataCube(alignment, mapping, apiPath, rel, index);\n\n                        this.scene.add(cube);\n                        this.cubeTracker.track(cube);\n\n                    });\n                });\n            });\n        });\n    }\n\n    /**\n     * Generates a label, with all information about the mapping.\n     * @param dataSetName\n     * @param apiPath\n     * @param relationPaths\n     * @param metricName\n     * @param metricValue\n     * @private\n     */\n    private makeDataCubeLabel(dataSetName: string, apiPath: string, relationPaths: string[], metricName: string, metricValue): CSS2DObject {\n        const divElement = document.createElement('div');\n        const divElementDataSetName = document.createElement('div');\n        divElementDataSetName.textContent = 'alignment: ' + dataSetName;\n        const divElementApi = document.createElement('div');\n        divElementApi.textContent = 'api_path: ' + apiPath;\n        if (this.alignmentCubeService.showFullApiPath) {\n            divElementApi.textContent = 'api_path: ' + apiPath;\n        } else {\n            divElementApi.textContent = 'api_path: ' + apiPath.match(settings.regexApiSearch)[0].replace(settings.regexApiReplace, '');\n        }\n        const divElementRel = document.createElement('div');\n        divElementRel.textContent = 'relation_path:';\n        const ulElement = document.createElement('ul');\n        for (const path of relationPaths) {\n            const liElement = document.createElement('li');\n            if (this.alignmentCubeService.showFullRelationPath) {\n                liElement.textContent = path;\n            } else {\n                liElement.textContent = path.match(settings.regexRelSearch)[0].replace(settings.regexRelReplace, '');\n            }\n            ulElement.appendChild(liElement);\n        }\n        const divElementMetric = document.createElement('div');\n        divElementMetric.textContent = `${metricName}: ${metricValue}`;\n        divElementRel.appendChild(ulElement);\n\n        divElement.className = 'label';\n        divElement.style.marginTop = '-0.5em';\n        divElement.appendChild(divElementDataSetName);\n        divElement.appendChild(divElementApi);\n        divElement.appendChild(divElementRel);\n        divElement.appendChild(divElementMetric);\n        divElement.style.zIndex = '10';\n        const meshLabel = new CSS2DObject(divElement);\n\n        meshLabel.traverse((object1) => {\n            object1.visible = false;\n        });\n\n        return meshLabel;\n    }\n\n    /**\n     * Creates a cube for the given mapping and specified api/relation path.\n     * @param alignment\n     * @param mapping\n     * @param apiPath\n     * @param relPath\n     * @param zIndex\n     * @private\n     */\n    private createDataCube(alignment: Alignment, mapping: Mapping, apiPath: string, relPath: RelationPath, zIndex): Mesh {\n        const relationPath = relPath.paths;\n        const indexX = this.alignmentModel.apiLabels.indexOf(apiPath) + 1;\n        const indexY = this.alignmentModel.getRelationPathIndex(relationPath) + 1;\n\n        const met = mapping.metrics.find(metric => metric.name === this.alignmentCubeService.selectedMetric);\n        if (met === undefined) {\n            return;\n        }\n        // value range between 0 and 1\n        const size = Math.max(0, Math.min(met.value, 1));\n        const text = String(size);\n        let color: THREE.Color;\n        // color.setHex(Math.random() * 0xffffff);\n        // color = this.alignmentModel.getColorForMapping(mapping.apiPath, mapping.relationPaths.join());\n        color = this.alignmentModel.getScaleColorForMapping(apiPath, relationPath.join(), size);\n\n        if (size > 0) {\n            const cube = ThreeJsUtil.createCube(size, color, indexX, indexY, zIndex);\n            // make visible to raycaster witch works on layer 1\n            cube.layers.enable(settings.rayCasterWorkingLayer);\n\n            const label = this.makeDataCubeLabel(\n                alignment.name,\n                apiPath,\n                relationPath,\n                this.alignmentCubeService.selectedMetric,\n                size\n            );\n            label.position.set(0, 1.5, 0);\n            cube.add(label);\n            return cube;\n        }\n        return null;\n    }\n\n\n    /**\n     * Delete all cubes created by this\n     */\n    public disposeCubes(): void{\n        this.cubeTracker.dispose();\n    }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AlignmentCubeService} from '../../engine/alignment-cube.service';\nimport {FormBuilder, FormControl} from '@angular/forms';\nimport {ViewMode} from '../../../../models';\n\n@Component({\n    selector: 'app-ui-sidebar-left',\n    templateUrl: './ui-sidebar-left.component.html',\n    styleUrls: [ './ui-sidebar-left.component.scss']\n})\n\nexport class UiSidebarLeftComponent implements OnInit {\n\n    public ViewModeEnum = ViewMode;\n\n    visible = true;\n\n    selectedAlignmentControl: FormControl;\n    selectedApiControl: FormControl;\n    selectedRelationControl: FormControl;\n\n    public constructor(\n        private fb: FormBuilder,\n        public engineService: AlignmentCubeService) {\n    }\n\n    public ngOnInit(): void {\n        this.selectedAlignmentControl = new FormControl(0);\n        this.selectedApiControl = new FormControl(0);\n        this.selectedRelationControl = new FormControl(0);\n    }\n\n    public changeSelectedAlignment() {\n        this.engineService.setSelectedDataSet(this.selectedAlignmentControl.value);\n    }\n\n    public changeSelectedApi() {\n        this.engineService.setSelectedApiLabel(this.selectedApiControl.value);\n    }\n\n    public changeSelectedRelationPath() {\n        this.engineService.setSelectedRelationPathLabel(this.selectedRelationControl.value);\n    }\n}\n","<div class=\"card\" *ngIf=\"false\">\n  <div class=\"card-header\">\n    Datasets\n  </div>\n  <div class=\"card-body\">\n    <mat-checkbox [checked]=\"true\" *ngFor=\"let alignment of engineService.alignmentContainer.alignments, let i = index\">\n      {{alignment.name}}\n    </mat-checkbox>\n  </div>\n</div>\n\n<div class=\"card\" *ngIf=\"engineService.viewMode === ViewModeEnum.View2DAlignment\">\n  <div class=\"card-header\">\n    <div class=\"d-flex flex-row justify-content-between\">\n      <div class=\"card-title\">Datasets</div>\n      <button class=\"btn-close\" (click)=\"visible= !visible\"></button>\n    </div>\n  </div>\n  <div class=\"card-body\" *ngIf=\"visible\">\n    <mat-radio-group [formControl]=\"selectedAlignmentControl\" (change)=\"changeSelectedAlignment()\">\n      <div class=\"d-flex flex-column justify-content-between\">\n        <mat-radio-button *ngFor=\"let alignment of engineService.alignmentContainer.alignments, let i = index\" [value]=\"i\">\n          {{alignment.name}}\n        </mat-radio-button>\n      </div>\n    </mat-radio-group>\n  </div>\n</div>\n\n<div class=\"card\" *ngIf=\"engineService.viewMode === ViewModeEnum.View2DApi\">\n  <div class=\"card-header\">\n    <div class=\"d-flex flex-row justify-content-between\">\n      <div class=\"card-title\">Api Paths</div>\n      <button class=\"btn-close\" (click)=\"visible= !visible\"></button>\n    </div>\n  </div>\n  <div class=\"card-body\" *ngIf=\"visible\">\n    <mat-radio-group [formControl]=\"selectedApiControl\" (change)=\"changeSelectedApi()\">\n      <div class=\"d-flex flex-column justify-content-between\">\n        <mat-radio-button *ngFor=\"let label of engineService.alignmentContainer.apiLabels, let i = index\" [value]=\"i\">\n          {{label}}\n        </mat-radio-button>\n      </div>\n    </mat-radio-group>\n  </div>\n</div>\n\n<div class=\"card\" *ngIf=\"engineService.viewMode === ViewModeEnum.View2DRelation\">\n  <div class=\"card-header\">\n    <div class=\"d-flex flex-row justify-content-between\">\n      <div class=\"card-title\">Relation Paths</div>\n      <button class=\"btn-close\" (click)=\"visible= !visible\"></button>\n    </div>\n  </div>\n  <div class=\"card-body\" *ngIf=\"visible\">\n    <mat-radio-group [formControl]=\"selectedRelationControl\" (change)=\"changeSelectedRelationPath()\">\n      <div class=\"d-flex flex-column justify-content-between\">\n        <mat-radio-button class=\"p-1\" *ngFor=\"let relation of engineService.alignmentContainer.relationPathLabels, let i = index\" [value]=\"i\">\n          {{relation.join('->')}}\n        </mat-radio-button>\n      </div>\n    </mat-radio-group>\n  </div>\n</div>\n\n<div class=\"card\" *ngIf=\"false\">\n  <div class=\"card-header\">\n    <div class=\"d-flex flex-row justify-content-between\">\n      <div class=\"card-title\">Helpers</div>\n      <button class=\"btn-close\" (click)=\"visible= !visible\"></button>\n    </div>\n  </div>\n  <div class=\"card-body\" *ngIf=\"visible\">\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.resetOrbitControls()\">Reset OrbitControls</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.clearScene()\">Clear Scene</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.reloadScene()\">Reload Scene</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.removeAxisLabels()\">Clear Labels</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.setOrbitControlPosition()\">Reset Orbit Center</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.changeCamera()\">Switch Camera</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.toggleGridHelper()\">Toggle GridHelper</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.toggleAxisHelper()\">Toggle AxisHelper</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.toggleCameraHelper()\">Toggle CameraHelper</button>\n    </div>\n  </div>\n</div>\n","import {IAlignment} from '../../_interfaces';\nimport {Mapping} from './Mapping';\nimport {Metric} from './Metric';\nimport {RelationPath} from './RelationPath';\n\nexport class Alignment {\n    private readonly _mappings: Mapping[];\n    private _name: string;\n    private _metricsNames: Set<string>;\n\n    constructor() {\n        this._mappings = [];\n        this._metricsNames = new Set();\n    }\n\n    public addMapping(mapping: Mapping): void {\n        this._mappings.push(mapping);\n    }\n\n    public addAlignment(iAlginment: IAlignment) {\n        iAlginment.alignments.forEach(mapping => {\n            const newMetrics: Metric[] = [];\n            // tslint:disable-next-line:forin\n            for (const metricsKey in mapping.metrics) {\n                newMetrics.push(new Metric(metricsKey, mapping.metrics[metricsKey]));\n                this._metricsNames.add(metricsKey);\n            }\n            const relationPath: RelationPath[] = [];\n            mapping.relation_path.forEach(paths => {\n                relationPath.push(new RelationPath(paths.path));\n            });\n\n            const newMapping = new Mapping(mapping.api_path, relationPath, newMetrics);\n            this._mappings.push(newMapping);\n        });\n    }\n\n    public compareTo(a: Alignment): number{\n        return this.name.localeCompare(a.name);\n    }\n\n    get mappings(): Mapping[] {\n        return this._mappings;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    get metricsNames(): Set<string> {\n        return this._metricsNames;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-db-selecector',\n  templateUrl: './db-selecector.component.html',\n  styleUrls: ['./db-selecector.component.scss']\n})\nexport class DbSelecectorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>db-selecector works!</p>\n","export * from './ui-sidebar-left.component';\n","import * as THREE from 'three';\nimport {Color, LineSegments} from 'three';\n\nexport class ThreeJsUtil {\n    /**\n     * Creates a line between point1 and point2\n     * @param point1 - start point\n     * @param point2 - end point\n     * @param color - color of the line\n     */\n    public static createLine(point1: THREE.Vector3, point2: THREE.Vector3, color: number | Color = 0xb2b2b2): THREE.Line {\n        const points = [];\n        points.push(point1);\n        points.push(point2);\n        const col = new Color(color);\n\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\n        const material = new THREE.LineBasicMaterial({color: col});\n        return new THREE.Line(geometry, material);\n    }\n\n\n    /**\n     * Create a cube with no areas, only edges.\n     */\n    public static createOutlineCube(width: number, height: number, depth: number): LineSegments {\n        const g = new THREE.BoxGeometry(width, height, depth);\n        const edges = new THREE.EdgesGeometry(g);\n        const line = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({color: 0x11ffff}));\n        line.position.set(width / 2 + 0.5, height / 2 + 0.5, depth / 2 - 0.5);\n        return line;\n    }\n\n\n    /**\n     * Create a basic cube.\n     * @param scale\n     * @param color\n     * @param x - x position\n     * @param y - y position\n     * @param z - z position\n     */\n    public static createCube(scale: number, color: THREE.Color | Color | number, x: number, y: number, z: number): THREE.Mesh {\n        const geometry = new THREE.BoxGeometry(scale, scale, scale);\n        const material = new THREE.MeshStandardMaterial({color});\n        const cube = new THREE.Mesh(geometry, material);\n\n        cube.position.x = x;\n        cube.position.y = y;\n        cube.position.z = z;\n\n        return cube;\n    }\n\n    /**\n     * @param baseWidth\n     * @param content - label text\n     * @param style - background color\n     * @private\n     */\n    public static createHTMLCanvasLabel(baseWidth: number, fontSize: number, content: string, style: string = 'gray'): HTMLCanvasElement {\n        const borderSize = 2;\n        const ctx = document.createElement('canvas').getContext('2d');\n        const font = `${fontSize}px bold sans-serif`;\n        ctx.font = font;\n        // measure how long the content will be\n        const textWidth = ctx.measureText(content).width;\n\n        const doubleBorderSize = borderSize * 2;\n        const width = baseWidth + doubleBorderSize;\n        const height = fontSize + doubleBorderSize;\n        ctx.canvas.width = width;\n        ctx.canvas.height = height;\n\n        // need to set font again after resizing canvas\n        ctx.font = font;\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n\n        ctx.fillStyle = style;\n        ctx.fillRect(0, 0, width, height);\n\n        // scale to fit but don't stretch\n        const scaleFactor = Math.min(1, baseWidth / textWidth);\n        ctx.translate(width / 2, height / 2);\n        ctx.scale(scaleFactor, 1);\n        ctx.fillStyle = 'white';\n        ctx.fillText(content, 0, 0);\n\n        return ctx.canvas;\n    }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\n\n@Component({\n    selector: 'app-json-viewer',\n    templateUrl: './json-viewer.component.html',\n    styleUrls: ['./json-viewer.component.scss']\n})\nexport class JsonViewerComponent implements OnInit {\n\n    public editorOptionsConfig: JsonEditorOptions;\n    public editorOptionsReturnTemplate: JsonEditorOptions;\n\n    @Input() jsonData = '';\n\n    @Output() jsonChangeEvent = new EventEmitter<any>();\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.editorOptionsConfig = new JsonEditorOptions();\n        this.editorOptionsConfig.mode = 'tree';\n        this.editorOptionsConfig.modes = ['code', 'tree'];\n        this.editorOptionsConfig.enableTransform = false;\n\n        // @ts-ignore\n        // remove unneeded actions from context menu\n        this.editorOptionsConfig.onCreateMenu = (items, node) => {\n            items = items.filter((item) => {\n                return item.text === 'Remove';\n            });\n            return items;\n        };\n    }\n\n    saveChanges(e): void {\n        this.jsonData = e;\n        this.jsonChangeEvent.emit(e);\n    }\n}\n","<json-editor [options]=\"editorOptionsConfig\" [data]=\"jsonData\" (change)=\"saveChanges($event)\"></json-editor>\n","export * from './path-formatter.service';\n","import {Component, ElementRef, OnInit, Output, ViewChild, EventEmitter} from '@angular/core';\nimport {IAlignment} from '../../../_interfaces';\nimport Ajv from 'ajv';\nimport * as alignmentSchema from '../../../../assets/jsonSchema/alignment.schema.json';\n\n@Component({\n    selector: 'app-data-selector',\n    templateUrl: './alignment-selector.component.html',\n    styleUrls: ['./alignment-selector.component.scss']\n})\nexport class AlignmentSelectorComponent implements OnInit {\n    @Output() newAlignmentAdded = new EventEmitter<IAlignment>();\n\n    alignments: IAlignment[] = [];\n    private ajv;\n\n    @ViewChild('fileSelector', {static: false}) fileSelector: ElementRef;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.ajv = new Ajv({allErrors: true});\n        this.ajv.addSchema((alignmentSchema as any).default, 'mySchema');\n    }\n\n    readFiles(): void {\n        const fileSelector = this.fileSelector.nativeElement;\n        fileSelector.onchange = () => {\n            for (const file of fileSelector.files) {\n                const reader = new FileReader();\n                reader.onload = () => {\n                    try {\n                        const fileJson = JSON.parse(reader.result.toString());\n                        const check = this.parseAndLog(fileJson);\n                        if (!check) {\n                            let errorMessage = 'JSONSchemaError \\n';\n                            for (const error of this.ajv.errors) {\n                                errorMessage += error.message + '\\n';\n                            }\n                            alert(errorMessage);\n                        } else {\n                            const alignment: IAlignment = JSON.parse(reader.result.toString());\n                            this.alignments.push(alignment);\n                            this.addAlignment(alignment);\n                        }\n                    } catch (e) {\n                        alert(e);\n                    }\n                };\n                reader.readAsText(file);\n            }\n        };\n        fileSelector.click();\n    }\n\n    addAlignment(alignment: IAlignment): void {\n        this.newAlignmentAdded.emit(alignment);\n    }\n\n    private parseAndLog(json): boolean {\n        return this.ajv.validate('mySchema', json);\n    }\n}\n","<div class=\"card m-1\">\n  <div class=\"card-header\">\n    <div class=\"card-title\">\n      Choose the Data\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <input type=\"file\" #fileSelector  id=\"fileSelector\" class=\"form-control\" multiple=\"multiple\" style=\"display: none\" accept=\"application/json\" >\n    <button mat-raised-button color=\"primary\" (click)=\"readFiles()\">\n      <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">folder</mat-icon>\n      Add next file\n    </button>\n\n\n    <br>\n    <br>\n    <table class=\"table table-striped\">\n      <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">name</th>\n        <th scope=\"col\">system</th>\n        <th scope=\"col\">entries</th>\n      </tr>\n      </thead>\n      <tbody>\n        <tr  *ngFor=\"let file of alignments\">\n          <th scope=\"row\"></th>\n          <td>{{file.name}}</td>\n          <td>{{file.system}}</td>\n          <td>{{file.alignments.length}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n\n","import {IAlignment} from '../../_interfaces';\nimport {Alignment} from './Alignment';\nimport {Mapping} from './Mapping';\nimport {Color} from 'three';\nimport * as d3 from 'd3';\n\nexport class AlignmentContainer {\n\n    private _alignments: Alignment[];\n    private _apiLabels: string[];\n    private _relationPathLabels: string[][];\n    private _metricsNames: Set<string>;\n\n    private _colorMapping;\n    private _colorScaleMapping;\n\n    constructor() {\n        this._alignments = [];\n        this._relationPathLabels = [];\n        this._apiLabels = [];\n        this._metricsNames = new Set();\n        this._colorMapping = new Map();\n        this._colorScaleMapping = new Map();\n    }\n\n    public addAlignment(ac: IAlignment): boolean {\n        const alignment = new Alignment();\n        alignment.name = ac.name;\n\n        alignment.addAlignment(ac);\n\n        alignment.mappings.forEach((mapping: Mapping, index) => {\n            let newApi = false;\n            let newRelation = false;\n\n            mapping.apiPaths.forEach((apiPath) => {\n                mapping.relationPaths.forEach((rel) => {\n                    const relationPaths = rel.paths;\n                    const relationPathJoin = relationPaths.join();\n                    if (!this.apiLabels.some(s => s === apiPath)) {\n                        this.apiLabels.push(apiPath);\n                        newApi = true;\n                    }\n                    if (!this._relationPathLabels.some(s => this.arrayEquals(s, relationPaths))) {\n                        this._relationPathLabels.push(relationPaths);\n                        newRelation = true;\n                    }\n\n                    const random = Math.random();\n                    const color = d3.interpolateSinebow(random);\n                    const colorScale = d3.scaleSequential(t => d3.hsl(random * 360, t, 0.5).toString());\n                    // const colorScale = d3.scaleSequential(t => d3.hsl(random * 360, t, 0.5).toString());\n\n                    if (newApi || newRelation) {\n                        // obviously no mapping\n                        // const color = new Color(Math.random() * 0xFFFFFF);\n\n                        if (newApi) {\n                            const newRelationMap = new Map();\n                            newRelationMap.set(relationPaths.join(), new Color(color));\n                            this.colorMapping.set(apiPath, newRelationMap);\n\n                            const newRelationScaleMap = new Map();\n                            newRelationScaleMap.set(relationPaths.join(), colorScale);\n                            this.colorScaleMapping.set(apiPath, newRelationScaleMap);\n                        } else {\n                            const relationMap = this.colorMapping.get(apiPath);\n                            relationMap.set(relationPaths.join(), new Color(color));\n\n                            const relationScaleMap = this.colorScaleMapping.get(apiPath);\n                            relationScaleMap.set(relationPaths.join(), colorScale);\n                        }\n                    } else {\n                        // check if mapping exist\n                        const relationPathMap = this.colorMapping.get(apiPath);\n                        const relationPathScaleMap = this.colorScaleMapping.get(apiPath);\n                        if (relationPathMap !== undefined) {\n                            const mapColor = relationPathMap.get(relationPaths.join());\n                            const mapScaleColor = relationPathMap.get(relationPaths.join());\n                            if (mapColor === undefined) {\n                                relationPathMap.set(relationPaths.join(), new Color(color));\n                                relationPathScaleMap.set(relationPaths.join(), colorScale);\n                            }\n                        } else {\n                            const newRelationMap = new Map();\n                            const newRelationScaleMap = new Map();\n                            newRelationMap.set(relationPaths.join(), new Color(color));\n                            newRelationScaleMap.set(relationPaths.join(), colorScale);\n                            this.colorMapping.set(apiPath, newRelationMap);\n                            this.colorScaleMapping.set(apiPath, newRelationScaleMap);\n                        }\n                    }\n                });\n            });\n        });\n\n        // Add all metric keys\n        for (const elem of alignment.metricsNames) {\n            this._metricsNames.add(elem);\n        }\n\n        this.alignments.push(alignment);\n        return true;\n    }\n\n    public sortApiLabels(): void {\n        this.apiLabels.sort((a: string, b: string) => a.localeCompare(b));\n    }\n\n    public sortRelationLabels(): void {\n        this.relationPathLabels.sort((a, b) => a.join().localeCompare(b.join()));\n    }\n\n    public arrayEquals(a: Array<any>, b: Array<any>): boolean {\n        return Array.isArray(a) &&\n            Array.isArray(b) &&\n            a.length === b.length &&\n            a.every((val, index) => val === b[index]);\n    }\n\n    public getRelationPathIndex(searchPaths: string[]): number {\n        let searchIndex = -1;\n        this._relationPathLabels.some((relationPaths, index) => {\n            if (this.arrayEquals(relationPaths, searchPaths)) {\n                searchIndex = index;\n                return true;\n            }\n        });\n        return searchIndex;\n    }\n\n    public getColorForMapping(apiPath: string, relationPath: string): Color {\n        const relationMap = this.colorMapping.get(apiPath);\n        return relationMap.get(relationPath);\n    }\n\n    public getScaleColorForMapping(apiPath: string, relationPath: string, value: number): Color {\n        const relationMap = this.colorScaleMapping.get(apiPath);\n        const scale = relationMap.get(relationPath);\n        const color = new Color(scale(value));\n        return color;\n    }\n\n    public get alignments(): Alignment[] {\n        return this._alignments;\n    }\n\n    public get apiLabels(): string[] {\n        return this._apiLabels;\n    }\n\n    public get relationPathLabels(): string[][] {\n        return this._relationPathLabels;\n    }\n\n    get colorScaleMapping() {\n        return this._colorScaleMapping;\n    }\n\n    get colorMapping(): Map<string, Map<string, Color>> {\n        return this._colorMapping;\n    }\n\n    get metricsNames(): Set<string> {\n        return this._metricsNames;\n    }\n}\n","import {ChangeDetectorRef, Component, OnInit, Renderer2} from '@angular/core';\nimport {Utils} from '../../../_classes/Utils';\nimport {IApi, ILocalDatabase, ILocalDatabaseSchema, ILocalDatabaseShortInfo} from '../../../_interfaces';\nimport {IErrorMessage} from '../../../_interfaces/settings/IErrorMessage';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {GsbService} from '../../../_services/gsb.service';\nimport {MappingType} from '../../../models';\nimport * as _ from 'lodash';\nimport {MappingTableComponent} from './mapping-table/mapping-table.component';\nimport {LeaderLineAlignment, LeaderLineMapping} from '../../../_classes/gsb/lines';\n\n@Component({\n    selector: 'app-builder',\n    templateUrl: './builder.component.html',\n    styleUrls: ['./builder.component.scss']\n})\nexport class BuilderComponent implements OnInit {\n    private _currentLeaderLineAlignment: LeaderLineAlignment;\n\n    utils: Utils = new Utils();\n\n    showFullPathLocal = true;\n    showFullPathWeb = false;\n\n    currentLocalDatabase: ILocalDatabase;\n    currentWebDatabase: IApi;\n\n    currentLocalDatabaseSchema: ILocalDatabaseSchema;\n    errorMsg: IErrorMessage;\n\n    selectedEntity: number;\n\n    localEntityFiltered: any;\n    localSortByPathMethod = '';\n    localSortByValueMethod = '';\n    localEntity: any;\n    localEntityLoaded = false;\n    localPathSearchValue = '';\n    localValueSearchValue = '';\n\n    weblEntityFiltered: any;\n    webSortByPathMethod = '';\n    webSortByValueMethod = '';\n    webEntity: any;\n    weblEntityLoaded = false;\n    webPathSearchValue = '';\n    webValueSearchValue = '';\n\n    databases: Array<ILocalDatabaseShortInfo>;\n    apis: Array<IApi>;\n\n    localHashIds: Set<string> = new Set<string>();\n    localMappingEntries: Set<any> = new Set<any>();\n    webHashIds: Set<string> = new Set<string>();\n    webMappingEntries: Set<any> = new Set<any>();\n    startId: string;\n    endId: string;\n\n    constructor(private connection: BackendConnectionService,\n                private dialog: MatDialog,\n                private _fb: FormBuilder,\n                public cdr: ChangeDetectorRef,\n                private _dialog: MatDialog,\n                public gsbService: GsbService,\n                private renderer: Renderer2) {\n    }\n\n    ngOnInit(): void {\n        this.init();\n        this._currentLeaderLineAlignment = LeaderLineAlignment.build(this.gsbService.currentAlignment, this.renderer);\n    }\n\n    clickLocalMappingEntry(localEntry: any) {\n        const triggerID = localEntry.hash;\n        const element: HTMLElement = document.getElementById(triggerID);\n        if (this.localMappingEntries.has(localEntry)) {\n            this.localMappingEntries.delete(localEntry);\n            this.renderer.removeClass(element, 'clicked');\n        } else {\n            this.localMappingEntries.add(localEntry);\n            this.renderer.addClass(element, 'clicked');\n        }\n    }\n\n    clickWebMappingEntry(webEntry: any) {\n        const triggerID = webEntry.hash;\n        const element: HTMLElement = document.getElementById(triggerID);\n        if (this.webMappingEntries.has(webEntry)) {\n            this.webMappingEntries.delete(webEntry);\n            this.renderer.removeClass(element, 'clicked');\n        } else {\n            this.webMappingEntries.add(webEntry);\n            this.renderer.addClass(element, 'clicked');\n        }\n    }\n\n    addMapping(type: MappingType): void {\n        _.defer(() => {\n            if (this.localMappingEntries.size !== 0 && this.webMappingEntries.size !== 0) {\n\n                for (const entry of this.localMappingEntries) {\n                    const localElem: HTMLElement = document.getElementById(entry.hash);\n                    this.renderer.addClass(localElem, 'used');\n                    this.renderer.removeClass(localElem, 'clicked');\n                }\n                for (const entry of this.webMappingEntries) {\n                    const webElem: HTMLElement = document.getElementById(entry.hash);\n                    this.renderer.addClass(webElem, 'used');\n                    this.renderer.removeClass(webElem, 'clicked');\n                }\n\n                const mappingObj = {\n                    type,\n                    localEntries: Array.from(this.localMappingEntries),\n                    webEntries: Array.from(this.webMappingEntries)\n                };\n                this.gsbService.addMapping(mappingObj);\n                const newMapping: LeaderLineMapping = LeaderLineMapping.build(mappingObj);\n                this._currentLeaderLineAlignment.addMapping(newMapping, true);\n                this.localMappingEntries.clear();\n                this.webMappingEntries.clear();\n            }\n        });\n    }\n\n    updateLines(): void {\n        this._currentLeaderLineAlignment.updateLines();\n    }\n\n    // Sort Web\n\n    sortByPathWeb(): void {\n        switch (this.webSortByPathMethod) {\n            case 'alphaAsc':\n                this.sortByPathWebAsc();\n                break;\n            case 'alphaDesc':\n                this.sortByPathWebDesc();\n                break;\n            default:\n                this.weblEntityFiltered.dictionary = _.cloneDeep(this.gsbService.currentWebEntity.dictionary);\n        }\n        this.updateLines();\n    }\n\n    sortByPathWebAsc() {\n        this.weblEntityFiltered.dictionary.sort((a, b) => a.path.localeCompare(b.path));\n    }\n\n    sortByPathWebDesc() {\n        this.weblEntityFiltered.dictionary.sort((a, b) => b.path.localeCompare(a.path));\n    }\n\n    sortByValueWeb(): void {\n        switch (this.webSortByValueMethod) {\n            case 'alphaAsc':\n                this.sortByValueWebAsc();\n                break;\n            case 'alphaDesc':\n                this.sortByValueWebDesc();\n                break;\n            default:\n                // tslint:disable-next-line:max-line-length\n                this.localEntityFiltered.valueList[0].fullKnowledge = _.cloneDeep(this.gsbService.currentLocalEntity.valueList[0].fullKnowledge);\n        }\n        this.updateLines();\n    }\n\n    sortByValueWebAsc() {\n        this.weblEntityFiltered.dictionary.sort((a, b) => a.value.localeCompare(b.value));\n    }\n\n    sortByValueWebDesc() {\n        this.weblEntityFiltered.dictionary.sort((a, b) => b.value.localeCompare(a.value));\n    }\n\n    // Sort Local\n\n    sortByPathLocal(): void {\n        switch (this.localSortByPathMethod) {\n            case 'alphaAsc':\n                this.sortByPathLocalAsc();\n                break;\n            case 'alphaDesc':\n                this.sortByPathLocalDesc();\n                break;\n            default:\n                // tslint:disable-next-line:max-line-length\n                this.localEntityFiltered.valueList[0].fullKnowledge = _.cloneDeep(this.gsbService.currentLocalEntity.valueList[0].fullKnowledge);\n        }\n        this.updateLines();\n    }\n\n    sortByPathLocalAsc() {\n        this.localEntityFiltered.valueList[0].fullKnowledge.sort((a, b) => {\n            const ap = this.utils.formatLocalPath(a.path);\n            const bp = this.utils.formatLocalPath(b.path);\n            return ap.localeCompare(bp);\n        });\n    }\n\n    sortByPathLocalDesc() {\n        this.localEntityFiltered.valueList[0].fullKnowledge.sort((a, b) => {\n            const ap = this.utils.formatLocalPath(a.path);\n            const bp = this.utils.formatLocalPath(b.path);\n            return bp.localeCompare(ap);\n        });\n    }\n\n    sortByValueLocal(): void {\n        switch (this.localSortByValueMethod) {\n            case 'alphaAsc':\n                this.sortByValueLocalAsc();\n                break;\n            case 'alphaDesc':\n                this.sortByValueLocalDesc();\n                break;\n            default:\n                // tslint:disable-next-line:max-line-length\n                this.localEntityFiltered.valueList[0].fullKnowledge = _.cloneDeep(this.gsbService.currentLocalEntity.valueList[0].fullKnowledge);\n        }\n        this.updateLines();\n    }\n\n    sortByValueLocalAsc() {\n        this.localEntityFiltered.valueList[0].fullKnowledge.sort((b, a) => {\n            return a.value.localeCompare(b.value);\n        });\n    }\n\n    sortByValueLocalDesc() {\n        this.localEntityFiltered.valueList[0].fullKnowledge.sort((a, b) => {\n            return a.value.localeCompare(b.value);\n        });\n    }\n\n    changeLocalValueSearchValue(value: string, event): void {\n        event.stopPropagation();\n        this.localValueSearchValue = value;\n        this.updateLines();\n    }\n\n    changeWebValueSearchValue(value: string, event): void {\n        this.webValueSearchValue = value;\n        this.updateLines();\n        event.stopPropagation();\n    }\n\n    changeLocalPathSearchValue(value: string, event): void {\n        this.localPathSearchValue = value;\n        this.updateLines();\n        event.stopPropagation();\n    }\n\n    changeWebPathSearchValue(value: string, event): void {\n        event.stopPropagation();\n        this.webPathSearchValue = value;\n        this.updateLines();\n    }\n\n    searchMethod(a: string, b: string): boolean {\n        const al = a.toLowerCase();\n        const bl = b.toLowerCase();\n\n\n        return (al.includes(bl) || bl.includes(al));\n    }\n\n    init() {\n        this.webEntity = this.gsbService.currentWebEntity;\n        this.localEntity = this.gsbService.currentLocalEntity;\n        this.weblEntityFiltered = _.cloneDeep(this.webEntity);\n        this.localEntityFiltered = _.cloneDeep(this.localEntity);\n\n        this.currentLocalDatabase = this.gsbService.localDatabase;\n        this.currentWebDatabase = this.gsbService.webDatabase;\n    }\n\n    public markNewPaths(): void {\n        for (const localEntry of this.localEntity.valueList[0].fullKnowledge) {\n            if (!this.gsbService.localKnownPathStore.has(localEntry.path)) {\n                const localElem: HTMLElement = document.getElementById(localEntry.hash);\n                this.renderer.addClass(localElem, 'unknown');\n            }\n        }\n\n        for (const webEntry of this.webEntity.dictionary) {\n            if (!this.gsbService.webKnownPathStore.has(webEntry.path)) {\n                const webElem: HTMLElement = document.getElementById(webEntry.hash);\n                this.renderer.addClass(webElem, 'unknown');\n            }\n        }\n    }\n\n    openMappingTable(): void {\n        const dialogConfig = new MatDialogConfig();\n\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.minHeight = '70vh';\n        dialogConfig.maxWidth = '90vw';\n        dialogConfig.minWidth = '70vw';\n        const dialogRef = this._dialog.open(MappingTableComponent, dialogConfig).afterClosed().toPromise().then(() => {\n            this._currentLeaderLineAlignment.deleteLines();\n            this._currentLeaderLineAlignment = LeaderLineAlignment.build(this.gsbService.currentAlignment, this.renderer);\n            this.clearUsedClass();\n            this.markUsedElems();\n            this._currentLeaderLineAlignment.drawLines();\n            this.updateLines();\n        });\n    }\n\n    clearUsedClass(): void {\n\n        for (const localEntry of this.localEntity.valueList[0].fullKnowledge) {\n            const localElem: HTMLElement = document.getElementById(localEntry.hash);\n            this.renderer.removeClass(localElem, 'used');\n        }\n\n        for (const webEntry of this.webEntity.dictionary) {\n            const webElem: HTMLElement = document.getElementById(webEntry.hash);\n            this.renderer.removeClass(webElem, 'used');\n        }\n    }\n\n    markUsedElems(): void {\n        for (const mapping of this.gsbService.currentMappings) {\n            for (const localEntry of mapping.localEntries) {\n                const localElem: HTMLElement = document.getElementById(localEntry.hash);\n                this.renderer.addClass(localElem, 'used');\n            }\n\n            for (const webEntry of mapping.webEntries) {\n                const webElem: HTMLElement = document.getElementById(webEntry.hash);\n                this.renderer.addClass(webElem, 'used');\n            }\n        }\n    }\n\n    public hideLines(): void {\n        console.log('hide lines');\n        this._currentLeaderLineAlignment.hideLines();\n    }\n\n    public showLines(): void {\n        this._currentLeaderLineAlignment.showLines();\n    }\n\n    selectionChange(index): void {\n        if (index === 1) {\n            Utils.delay(1000).then(() => {\n                this._currentLeaderLineAlignment.showLines();\n            });\n        } else {\n            this._currentLeaderLineAlignment.hideLines();\n        }\n    }\n\n    entityChange(i): void {\n        this.webMappingEntries.clear();\n        this.localMappingEntries.clear();\n\n        this._currentLeaderLineAlignment.deleteLines();\n        this.gsbService.changeCurrentAlignment(i);\n        this.init();\n        this.cdr.detectChanges();\n        Utils.delay(1000).then(() => {\n            console.log('redraw now');\n            this._currentLeaderLineAlignment = LeaderLineAlignment.build(this.gsbService.currentAlignment, this.renderer);\n            console.log(this._currentLeaderLineAlignment.mappings);\n            this._currentLeaderLineAlignment.drawLines();\n            this.clearUsedClass();\n            this.markUsedElems();\n            this.markNewPaths();\n        });\n        console.log('change finished');\n    }\n\n    clearLines(): void {\n        this._currentLeaderLineAlignment.deleteLines();\n    }\n}\n","<div class=\"builder-container\">\n    <div class=\"builder-header\">\n        <div class=\"header-side\">\n            <div class=\"content-header\">\n                <h2>Local DB: {{currentLocalDatabase.label}}</h2>\n                <mat-slide-toggle color=\"primary\" [(ngModel)]=\"gsbService.showFullLocalPath\">\n                    show full path\n                </mat-slide-toggle>\n            </div>\n            <div class=\"content-header\">\n                <mat-form-field class=\"example-form-field searchbar\" appearance=\"fill\">\n                    <mat-label>Search Path</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"localPathSearchValue\"\n                           (ngModelChange)=\"updateLines()\">\n                    <button mat-button *ngIf=\"localPathSearchValue\" matSuffix mat-icon-button\n                            aria-label=\"Clear\"\n                            (click)=\"changeLocalPathSearchValue('', $event)\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <button matSuffix mat-icon-button>\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Sort Path</mat-label>\n                    <mat-select (selectionChange)=\"sortByPathLocal()\" [(ngModel)]=\"localSortByPathMethod\">\n                        <mat-option value=\"\">No Sort</mat-option>\n                        <mat-option value=\"alphaAsc\">Alphabetical (Asc)</mat-option>\n                        <mat-option value=\"alphaDesc\">Alphabetical (Desc)\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"content-header\">\n                <mat-form-field class=\"example-form-field searchbar\" appearance=\"fill\">\n                    <mat-label>Search Value</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"localValueSearchValue\"\n                           (ngModelChange)=\"updateLines()\">\n                    <button mat-button *ngIf=\"localValueSearchValue\" matSuffix mat-icon-button\n                            aria-label=\"Clear\"\n                            (click)=\"changeLocalValueSearchValue('', $event)\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <button matSuffix mat-icon-button>\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Sort Value</mat-label>\n                    <mat-select (selectionChange)=\"sortByValueLocal()\" [(ngModel)]=\"localSortByValueMethod\">\n                        <mat-option value=\"\">No Sort</mat-option>\n                        <mat-option value=\"alphaAsc\">Alphabetical (Asc)</mat-option>\n                        <mat-option value=\"alphaDesc\">Alphabetical (Desc)\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"filler-div\">\n            <mat-form-field color=\"primary\" >\n                <mat-label>Entity</mat-label>\n                <mat-select [value]=\"gsbService.currentIndex\" (selectionChange)=\"entityChange($event.value)\">\n                    <mat-option *ngFor=\"let alignment of gsbService.entityAlignments; let i = index\"\n                                [value]=\"i\">\n                        {{alignment.localEntity.valueList[0].subject}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <button mat-raised-button color=\"primary\" (click)=\"openMappingTable()\">Show Mappings</button>\n<!--            <button mat-raised-button color=\"primary\" (click)=\"markNewPaths()\">Show New Paths</button>-->\n\n            <div class=\"controls\">\n                <p>Add new Mapping</p>\n                <div class=\"controls-mapping\">\n                    <button mat-raised-button color=\"primary\" (click)=\"addMapping(1)\">\n                        <mat-icon>west</mat-icon>\n                    </button>\n                    <button mat-raised-button color=\"primary\" (click)=\"addMapping(2)\">\n                        <mat-icon>sync_alt</mat-icon>\n                    </button>\n                    <button mat-raised-button color=\"primary\" (click)=\"addMapping(0)\">\n                        <mat-icon>east</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"header-side\">\n            <div class=\"content-header\">\n                <h2>Web DB: {{currentWebDatabase.label}} ({{currentWebDatabase.name}})</h2>\n            </div>\n            <!--                        <button mat-raised-button (click)=\"sortWebAsc()\">sort Asc</button>-->\n            <!--                        <button mat-raised-button (click)=\"sortWebDesc()\">sort Desc</button>-->\n            <div class=\"content-header\">\n                <mat-form-field class=\"example-form-field searchbar\" appearance=\"fill\">\n                    <mat-label>Search Path</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"webPathSearchValue\"\n                           (ngModelChange)=\"updateLines()\">\n                    <button mat-button *ngIf=\"webPathSearchValue\" matSuffix mat-icon-button\n                            aria-label=\"Clear\"\n                            (click)=\"webPathSearchValue=''; updateLines()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <button matSuffix mat-icon-button>\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"center\">\n                    <mat-label>Sort Path</mat-label>\n                    <mat-select (selectionChange)=\"sortByPathWeb()\" [(ngModel)]=\"webSortByPathMethod\">\n                        <mat-option value=\"\">No Sort</mat-option>\n                        <mat-option value=\"alphaAsc\">Alphabetical (Asc)</mat-option>\n                        <mat-option value=\"alphaDesc\">Alphabetical (Desc)\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"content-header\">\n                <mat-form-field class=\"example-form-field searchbar\" appearance=\"fill\">\n                    <mat-label>Search Value</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"webValueSearchValue\"\n                           (ngModelChange)=\"updateLines()\">\n                    <button mat-button *ngIf=\"webValueSearchValue\" matSuffix mat-icon-button\n                            aria-label=\"Clear\"\n                            (click)=\"webValueSearchValue=''; updateLines()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <button matSuffix mat-icon-button>\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Sort Values</mat-label>\n                    <mat-select (selectionChange)=\"sortByValueWeb()\" [(ngModel)]=\"webSortByValueMethod\">\n                        <mat-option value=\"\">No Sort</mat-option>\n                        <mat-option value=\"alphaAsc\">Alphabetical (Asc)</mat-option>\n                        <mat-option value=\"alphaDesc\">Alphabetical (Desc)\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n    </div>\n    <div class=\"builder-body\">\n        <div class=\"entries-wrapper\">\n            <div *ngIf=\"!gsbService.finishedLoadingLocalEntity\">\n                <mat-spinner></mat-spinner>\n                ... loading\n            </div>\n            <div *ngIf=\"localEntity\">\n                <div *ngFor=\"let entry of localEntityFiltered.valueList[0].fullKnowledge\">\n                    <div class=\"entry\" [id]=\"entry.hash\" (click)=\"clickLocalMappingEntry(entry)\"\n                         [ngClass]=\"{\n                            'hide': !searchMethod(entry.path, this.localPathSearchValue) || !searchMethod(entry.value, this.localValueSearchValue),\n                            'unknown': !this.gsbService.localKnownPathStore.has(entry.path)\n                            }\">\n                        <div class=\"path\">\n                            <button mat-button aria-label=\"Clear\"\n                                    (click)=\"changeWebPathSearchValue(utils.formatLocalPath(entry.path), $event)\">\n                                <mat-icon>search</mat-icon>\n                            </button>\n                            <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry.path : utils.formatLocalPath(entry.path)) | highlight: localPathSearchValue\"></p>\n                        </div>\n\n                        <div class=\"value\">\n                            <p [innerHtml]=\"entry.value | highlight: localValueSearchValue\"></p>\n                            <button mat-button aria-label=\"Clear\"\n                                    (click)=\"changeWebValueSearchValue(entry.value, $event)\">\n                                <mat-icon>search</mat-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"entries-wrapper\">\n            <div *ngIf=\"!gsbService.finishedLoadingWebEntity\">\n                <mat-spinner></mat-spinner>\n                ... loading\n            </div>\n            <div *ngIf=\"webEntity\">\n                <div *ngFor=\"let entry of weblEntityFiltered.dictionary\">\n                    <div class=\"entry\" [id]=\"entry.hash\" (click)=\"clickWebMappingEntry(entry)\"\n                         [ngClass]=\"{'hide': !searchMethod(entry.path, this.webPathSearchValue) || !searchMethod(entry.value, this.webValueSearchValue),\n                         'unknown': !this.gsbService.webKnownPathStore.has(entry.path)\n                         }\">\n                        <div class=\"path\">\n                            <button mat-button aria-label=\"Clear\"\n                                    (click)=\"changeLocalPathSearchValue(entry.path, $event)\">\n                                <mat-icon>search</mat-icon>\n                            </button>\n                            <p [innerHtml]=\"entry.path | highlight: webPathSearchValue\"></p>\n                        </div>\n                        <div class=\"value\">\n                            <p [innerHtml]=\"entry.value | highlight: webValueSearchValue\"></p>\n                            <button mat-button aria-label=\"Clear\"\n                                    (click)=\"changeLocalValueSearchValue(entry.value, $event)\">\n                                <mat-icon>search</mat-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {IApi, ILocalDatabaseShortInfo} from '../../../_interfaces';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\nimport {log} from 'util';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-db-information',\n    templateUrl: './db-information.component.html',\n    styleUrls: ['./db-information.component.scss']\n})\nexport class DbInformationComponent implements OnInit {\n\n    dbConfiguration: ILocalDatabaseShortInfo;\n\n    public editorOptionsConfig: JsonEditorOptions;\n\n    @ViewChild(JsonEditorComponent)\n    editor: JsonEditorComponent;\n\n    constructor(\n        private connection: BackendConnectionService,\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_DIALOG_DATA) public data: ILocalDatabaseShortInfo) {\n        this.dbConfiguration = data;\n    }\n\n    ngOnInit(): void {\n        this.editorOptionsConfig = new JsonEditorOptions();\n        this.editorOptionsConfig.mode = 'code';\n        this.editorOptionsConfig.modes = ['code'];\n\n        this.connection.getLocalDatabaseData(this.data.label).then((res: ILocalDatabaseShortInfo) => {\n            this.dbConfiguration.label = res.label;\n            this.dbConfiguration.identifierMap = res.identifierMap;\n            this.dbConfiguration.path = res.path;\n        });\n    }\n\n\n    onJSONChange(): void {\n        this.dbConfiguration = this.editor.get() as any;\n    }\n\n    openSnackBar(message: string) {\n        this._snackBar.open(message, '', {duration: 2000});\n    }\n\n    save(): void {\n        const dbConfigurationChanged = this.editor.get();\n        this.connection.updateDatabase(this.dbConfiguration, dbConfigurationChanged).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to save changes');\n            }\n        );\n    }\n\n    delete(): void {\n        this.connection.deleteDatabase(this.dbConfiguration.label).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to delete');\n            }\n        );\n    }\n}\n","<p>\n    <b>Database:</b> {{dbConfiguration.label}}\n</p>\n<mat-tab-group class=\"group-container\" (selectedIndexChange)=\"onJSONChange()\">\n    <!--    Temporarily deactivated     -->\n    <mat-tab *ngIf=\"false\" label=\"Configuration Form\">\n        <div class=\"form-container\">\n            <mat-form-field>\n                <mat-label>label</mat-label>\n                <input matInput [(ngModel)]=\"dbConfiguration.label\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>identifierMap</mat-label>\n                <input matInput [(ngModel)]=\"dbConfiguration.identifierMap\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>path</mat-label>\n                <input matInput [(ngModel)]=\"dbConfiguration.path\">\n            </mat-form-field>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Configuration File\">\n        <ng-container *ngIf=\"dbConfiguration\">\n            <json-editor [options]=\"editorOptionsConfig\" [data]=\"dbConfiguration\"></json-editor>\n        </ng-container>\n    </mat-tab>\n</mat-tab-group>\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"\" (click)=\"save()\">Save</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"\" (click)=\"delete()\">Delete</button>\n</mat-dialog-actions>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AlignmentCubeService} from '../../engine/alignment-cube.service';\nimport {ViewMode} from '../../../../models';\n\n@Component({\n  selector: 'app-ui-infobar-top',\n  templateUrl: './ui-infobar-top.component.html'\n})\nexport class UiInfobarTopComponent implements OnInit {\n\n  // @Input() engineService: AlignmentCubeService;\n\n  public constructor(public engineService: AlignmentCubeService) {\n  }\n\n  public ngOnInit(): void {\n  }\n\n  changeViewMode(): void{\n    switch (this.engineService.viewMode) {\n      case ViewMode.View2DAlignment:\n        this.engineService.changeViewMode(ViewMode.View2DApi);\n        break;\n\n      case ViewMode.View2DApi:\n        this.engineService.changeViewMode(ViewMode.View2DRelation);\n        break;\n\n      case ViewMode.View2DRelation:\n        this.engineService.changeViewMode(ViewMode.View3D);\n        break;\n\n      case ViewMode.View3D:\n        this.engineService.changeViewMode(ViewMode.View2DAlignment);\n        break;\n\n    }\n  }\n\n}\n","<button mat-raised-button color=\"primary\" (click)=\"changeViewMode()\" >\n    <mat-icon>cameraswitch</mat-icon> {{engineService.viewMode}}\n</button>\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {IApi, IWebserviceDetails} from '../../../_interfaces';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\n\n@Component({\n    selector: 'app-api-information',\n    templateUrl: './api-information.component.html',\n    styleUrls: ['./api-information.component.scss']\n})\nexport class ApiInformationComponent implements OnInit {\n\n    apiConfiguration: IApi;\n\n    public editorOptionsConfig: JsonEditorOptions;\n\n    @ViewChild(JsonEditorComponent)\n    editor: JsonEditorComponent;\n\n    constructor(\n        private connection: BackendConnectionService,\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_DIALOG_DATA) public data: IApi) {\n        this.apiConfiguration = data;\n    }\n\n    openSnackBar(message: string) {\n        this._snackBar.open(message, '', {duration: 2000});\n    }\n\n    ngOnInit(): void {\n        this.editorOptionsConfig = new JsonEditorOptions();\n        this.editorOptionsConfig.mode = 'code';\n        this.editorOptionsConfig.modes = ['code'];\n    }\n\n    save(): void {\n        const apiConfigurationChanged = this.editor.get();\n        this.connection.updateApi(this.apiConfiguration, apiConfigurationChanged).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to save changes');\n            }\n        );\n    }\n\n    onJSONChange(): void {\n        this.apiConfiguration = this.editor.get() as any;\n    }\n\n    delete(): void {\n        this.connection.deleteApi(this.apiConfiguration.label).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to delete');\n            }\n        );\n    }\n\n}\n","<p>\n    <b>Api:</b> {{apiConfiguration.label}}\n</p>\n<mat-tab-group class=\"group-container\" (selectedIndexChange)=\"onJSONChange()\">\n    <!--    Temporarily deactivated     -->\n    <mat-tab *ngIf=\"false\" label=\"Configuration Form\">\n        <div class=\"form-container\">\n            <mat-form-field>\n                <mat-label>name</mat-label>\n                <input matInput [(ngModel)]=\"apiConfiguration.name\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>format</mat-label>\n                <input matInput [(ngModel)]=\"apiConfiguration.format\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>label</mat-label>\n                <input matInput [(ngModel)]=\"apiConfiguration.label\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>url</mat-label>\n                <input matInput [(ngModel)]=\"apiConfiguration.url\">\n            </mat-form-field>\n            <p>Parameter</p>\n            <ng-container *ngFor=\"let parameter of apiConfiguration.parameters\">\n                <mat-form-field>\n                    <mat-label>name</mat-label>\n                    <input matInput [(ngModel)]=\"parameter.name\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>filter</mat-label>\n                    <input matInput [(ngModel)]=\"parameter.filter\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>type</mat-label>\n                    <input matInput [(ngModel)]=\"parameter.type\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>status</mat-label>\n                    <input matInput [(ngModel)]=\"parameter.status\">\n                </mat-form-field>\n            </ng-container>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Configuration File\">\n        <ng-container *ngIf=\"apiConfiguration\">\n            <json-editor [options]=\"editorOptionsConfig\" [data]=\"apiConfiguration\"></json-editor>\n        </ng-container>\n    </mat-tab>\n</mat-tab-group>\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"\" (click)=\"save()\">Save</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"\" (click)=\"delete()\">Delete</button>\n</mat-dialog-actions>\n","import {Injectable} from '@angular/core';\nimport {settings} from '../../assets/settings';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PathFormatterService {\n\n    private apiPathFull = true;\n    private apiWithWildcard = false;\n    private relationPathFull = true;\n\n    constructor() {\n    }\n\n    public formatApiPath(path: string): string {\n        const context: string[] = path.match(settings.regexApiSearch);\n        if (context == null){\n            return path;\n        }\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexApiReplace, '');\n        }\n        // remove wildcards\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexApiReplaceWildcard, '');\n        }\n        return context.join();\n    }\n\n    public formatRelationPath(path: string): string {\n        const context: string[] = path.match(settings.regexRelSearch);\n        if (context == null){\n            return path;\n        }\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexRelReplace, '');\n        }\n        return context.join();\n    }\n\n    public joinRelPaths(paths: string[]): string {\n        return paths.join(settings.joinSymbol);\n    }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {IMappingSuggestion, ISuggestionEntry} from '../../../../_interfaces/gsb/suggestion';\nimport {GsbService} from '../../../../_services/gsb.service';\n\n@Component({\n  selector: 'app-mapping-editor',\n  templateUrl: './mapping-editor.component.html',\n  styleUrls: ['./mapping-editor.component.scss']\n})\nexport class MappingEditorComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA, ) public data: any, public gsbService: GsbService) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteSuggestion() {\n    this.gsbService.suggestionContainer.suggestions.splice(this.data.index, 1);\n  }\n}\n","<app-mapping-suggestion [suggestionMapping]=\"data.entry\"></app-mapping-suggestion>\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"\">Close</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"\" (click)=\"deleteSuggestion()\">Delete</button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-data-cube-page',\n  templateUrl: './data-cube-page.component.html',\n  styleUrls: ['./data-cube-page.component.scss']\n})\nexport class DataCubePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-alignment-cube></app-alignment-cube>\n","import {ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Utils} from '../../../_classes/Utils';\nimport {GsbService} from '../../../_services/gsb.service';\nimport {IAlignment} from '../../../_interfaces';\nimport {IFinalAlignment, IMappingSuggestion} from '../../../_interfaces/gsb/suggestion';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {MappingTableComponent} from '../builder/mapping-table/mapping-table.component';\nimport {LeaderLineAlignment} from '../../../_classes/gsb/lines';\nimport {MappingEditorComponent} from '../mapping-suggestion-tool/mapping-editor/mapping-editor.component';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-final-alignmnet',\n    templateUrl: './final-alignment.component.html',\n    styleUrls: ['./final-alignment.component.scss']\n})\nexport class FinalAlignmentComponent implements OnInit {\n\n    utils: Utils = new Utils();\n\n    @Input() finalAlignment: IFinalAlignment;\n\n    constructor(public gsbService: GsbService, public cdr: ChangeDetectorRef, private _dialog: MatDialog, private _snackBar: MatSnackBar) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    openMappingEditor(entry: IMappingSuggestion, index: number): void {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data = {entry, index};\n\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.minHeight = '70vh';\n        dialogConfig.maxWidth = '90vw';\n        dialogConfig.minWidth = '70vw';\n        const dialogRef = this._dialog.open(MappingEditorComponent, dialogConfig);\n    }\n\n    saveFinalAlignment(): void {\n        this.gsbService.generateFinalAlignment();\n        this.gsbService.saveFinalAlignment().then((resp) => {\n                this._snackBar.open('Saved!!!', 'Close');\n            },\n            (err) => {\n                this._snackBar.open('Failed to save!!!', 'Close');\n            }\n        );\n    }\n\n}\n","<h1>Final Alignment</h1>\n<div class=\"stepper\">\n    <button mat-raised-button color=\"primary\" (click)=\"saveFinalAlignment()\">Save</button>\n</div>\n\n<div class=\"mapping-wrapper\" *ngIf=\"gsbService.suggestionContainer\">\n    <ng-container *ngFor=\"let suggestionMapping of gsbService.suggestionContainer.suggestions; let i=index\">\n\n        <div class=\"mapping\" *ngIf=\"suggestionMapping.general.selected\">\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of suggestionMapping.general.localEntries\">\n                    <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n                </div>\n            </div>\n            <div class=\"divider\">\n                <div class=\"relationType\">\n                    <mat-icon *ngIf=\"suggestionMapping.general.type === 0\">east</mat-icon>\n                    <mat-icon *ngIf=\"suggestionMapping.general.type === 1\">west</mat-icon>\n                    <mat-icon *ngIf=\"suggestionMapping.general.type === 2\">sync_alt</mat-icon>\n                </div>\n            </div>\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of suggestionMapping.general.webEntries\">\n                    <p>{{entry}}</p>\n                </div>\n            </div>\n            <div class=\"edit\">\n                <button mat-button aria-label=\"edit\" (click)=\"openMappingEditor(suggestionMapping, i)\">\n                    <mat-icon>edit</mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <ng-container *ngFor=\"let suggestionEntry of suggestionMapping.suggestions\">\n            <div class=\"mapping\" *ngIf=\"suggestionEntry.selected\">\n                <div class=\"relation-container\">\n                    <div class=\"entry\" *ngFor=\"let entry of suggestionEntry.template.localEntries\">\n                        <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n                    </div>\n                </div>\n                <div class=\"divider\">\n                    <div class=\"relationType\">\n                        <mat-icon *ngIf=\"suggestionEntry.template.type === 0\">east</mat-icon>\n                        <mat-icon *ngIf=\"suggestionEntry.template.type === 1\">west</mat-icon>\n                        <mat-icon *ngIf=\"suggestionEntry.template.type === 2\">sync_alt</mat-icon>\n                    </div>\n                </div>\n                <div class=\"relation-container\">\n                    <div class=\"entry\" *ngFor=\"let entry of suggestionEntry.template.webEntries\">\n                        <p>{{entry}}</p>\n                    </div>\n                </div>\n                <div class=\"edit\">\n                    <button mat-button aria-label=\"edit\" (click)=\"openMappingEditor(suggestionMapping, i)\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n    </ng-container>\n</div>\n<div class=\"stepper\">\n    <div></div>\n    <button mat-raised-button color=\"primary\" (click)=\"saveFinalAlignment()\">Save</button>\n    <div></div>\n</div>\n\n\n<!--<div class=\"mapping-wrapper\" *ngIf=\"gsbService.finishedFinalAlignment\">\n    <div class=\"mapping\" *ngFor=\"let mapping of gsbService.finalAlignment.mappings\">\n        <div class=\"relation-container\">\n            <div class=\"entry\" *ngFor=\"let entry of mapping.localEntries\">\n                <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n            </div>\n        </div>\n        <div class=\"divider\">\n            <div class=\"relationType\">\n                <mat-icon *ngIf=\"mapping.type === 0\">east</mat-icon>\n                <mat-icon *ngIf=\"mapping.type === 1\">west</mat-icon>\n                <mat-icon *ngIf=\"mapping.type === 2\">sync_alt</mat-icon>\n            </div>\n            <div class=\"action\">\n\n            </div>\n        </div>\n        <div class=\"relation-container\">\n            <div class=\"entry\" *ngFor=\"let entry of mapping.webEntries\">\n                <p>{{entry}}</p>\n            </div>\n        </div>\n    </div>\n</div>-->\n","export * from './alignment-selector.component';\n","export * from './navbar.component';\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {ISuggestionEntry} from '../../../../_interfaces/gsb/suggestion';\nimport {GsbService} from '../../../../_services/gsb.service';\nimport {Utils} from '../../../../_classes/Utils';\n\n@Component({\n  selector: 'app-mapping-view',\n  templateUrl: './mapping-view.component.html',\n  styleUrls: ['./mapping-view.component.scss']\n})\nexport class MappingViewComponent implements OnInit {\n  public utils = new Utils();\n\n  constructor(@Inject(MAT_DIALOG_DATA, ) public data: ISuggestionEntry, public gsbService: GsbService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"suggestions-wrapper\">\n    <h1>Template</h1>\n    <div class=\"mapping-wrapper\">\n        <div class=\"mapping\">\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of data.template.localEntries\">\n                    <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n                </div>\n            </div>\n            <div class=\"divider\">\n                <div class=\"relationType\">\n                    <mat-icon *ngIf=\"data.template.type === 0\">east</mat-icon>\n                    <mat-icon *ngIf=\"data.template.type === 1\">west</mat-icon>\n                    <mat-icon *ngIf=\"data.template.type === 2\">sync_alt</mat-icon>\n                </div>\n            </div>\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of data.template.webEntries\">\n                    <p>{{entry}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <br>\n    <h1>Values</h1>\n    <div class=\"mapping-wrapper\" *ngFor=\"let mapping of data.mappings; let index=index\">\n        <div class=\"mapping\">\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of mapping.localEntries\">\n                    <p [innerHtml]=\"entry.value\"></p>\n                </div>\n            </div>\n            <div class=\"divider\">\n                <div class=\"relationType\">\n                    <mat-icon *ngIf=\"mapping.type === 0\">east</mat-icon>\n                    <mat-icon *ngIf=\"mapping.type === 1\">west</mat-icon>\n                    <mat-icon *ngIf=\"mapping.type === 2\">sync_alt</mat-icon>\n                </div>\n            </div>\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of mapping.webEntries\">\n                    <p>{{entry.value}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","export * from './SceneLoader';\nexport * from './PickHelper';\nexport * from './ResourceTracker';\nexport * from './ThreeJsUtil';\n","import {Injectable} from '@angular/core';\nimport {BackendConnectionService} from './backend-connection.service';\nimport {GSBAlignment, GSBMapping} from '../_interfaces/gsb/alignment';\nimport {IApi, ILocalDatabase} from '../_interfaces';\nimport * as testWebEntity from '../../assets/data/testEntities/apiEntity.json';\nimport * as testLocalEntity from '../../assets/data/testEntities/localEntity.json';\nimport * as testLocalDB from '../../assets/data/testEntities/localDb.json';\nimport * as testWebDB from '../../assets/data/testEntities/webDb.json';\nimport * as testSuggestion from '../../assets/data/testEntities/exampleSuggestion.json';\nimport {Utils} from '../_classes/Utils';\nimport {IFinalAlignment, ISuggestionContainer} from '../_interfaces/gsb/suggestion';\nimport {error} from 'protractor';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GsbService {\n\n    private _gsbInstance;\n    private _finalAlignment: IFinalAlignment;\n    private _suggestionContainer: ISuggestionContainer;\n\n    private _entityAlignments: GSBAlignment[] = [];\n    private _currentAlignment: GSBAlignment;\n    private _currentIndex: number;\n\n    private _localDatabase: ILocalDatabase;\n    private _webDatabase: IApi;\n    private _selectedLocalIdentifier: string;\n    private _selectedInputType: string;\n\n    private _regexApiStore = [];\n    private _localKnownPathStore: Set<string>;\n    private _webKnownPathStore: Set<string>;\n\n    private _currentLocalEntity;\n    private _currentWebEntity;\n\n    private utils: Utils = new Utils();\n\n    public showFullLocalPath = false;\n    public loadingTries = 1;\n    public maxLoadingTries = 50;\n\n    public finishedLoadingLocalEntity = false;\n    public finishedLoadingWebEntity = false;\n    private finishedNewEntity = false;\n    public suggestionsLoaded = false;\n    public finishedFinalAlignment = false;\n\n    public loadingNextEntityFailed = false;\n\n    constructor(private connection: BackendConnectionService) {\n    }\n\n    public startNewAlignment(localDb: ILocalDatabase, webDb: IApi, identifier: string, inputType: string): void {\n        this._entityAlignments = [];\n        this._localDatabase = localDb;\n        this._webDatabase = webDb;\n        this._selectedLocalIdentifier = identifier;\n        this._selectedInputType = inputType;\n        this._localKnownPathStore = new Set();\n        this._webKnownPathStore = new Set();\n        this.nextEntity().then(r => this.saveLocalKnownPaths());\n    }\n\n    public removeMapping(mapping: GSBMapping): void {\n        const i = this.currentMappings.indexOf(mapping);\n        this.currentMappings.splice(i, 1);\n    }\n\n    public addMapping(mapping: GSBMapping): void {\n        this.currentMappings.push(mapping);\n    }\n\n    public changeCurrentAlignment(i: number): void {\n        if (i < 0 && i >= this.entityAlignments.length) {\n            return;\n        }\n        this._currentAlignment = this.entityAlignments[i];\n        this._currentLocalEntity = this._currentAlignment.localEntity;\n        this._currentWebEntity = this._currentAlignment.webEntity;\n        this._currentIndex = i;\n    }\n\n    public async nextEntity(): Promise<void> {\n        this.saveLocalKnownPaths();\n        this.finishedNewEntity = false;\n        this.finishedLoadingLocalEntity = false;\n        this.finishedLoadingWebEntity = false;\n        this.loadingNextEntityFailed = false;\n        // if (this._currentAlignment !== undefined) {\n        //     this._entityAlignments.push(this._currentAlignment);\n        // }\n        this.loadingTries = 1;\n        const list = [];\n        while (this.loadingTries <= this.maxLoadingTries && !this.finishedLoadingWebEntity) {\n            await this.loadLocalEntity();\n            list.push(this._currentLocalEntity.valueList[0].subject);\n            await this.loadWebEntity(this._currentLocalEntity.valueList[0].subject);\n            this.loadingTries++;\n        }\n        if (this.loadingTries > this.maxLoadingTries) {\n            this.loadingNextEntityFailed = true;\n            console.log([...new Set(list)]);\n            return;\n        }\n\n        this._currentAlignment = {mappings: [], localEntity: this.currentLocalEntity, webEntity: this.currentWebEntity};\n        this._entityAlignments.push(this._currentAlignment);\n        this._currentIndex = this._entityAlignments.length - 1;\n        this.finishedNewEntity = true;\n    }\n\n    private async loadLocalEntity(): Promise<void> {\n        const identifier = this._selectedLocalIdentifier;\n        const inputType = this._selectedInputType;\n        this._currentLocalEntity = await this.connection.getLocalEntity(this.localDatabase.label, identifier, inputType, 1).toPromise();\n        this.utils.addHashToLocalEntity(this._currentLocalEntity);\n        this.finishedLoadingLocalEntity = true;\n    }\n\n    private async loadWebEntity(value: string): Promise<void> {\n        await this.connection.getWebEntity(this.webDatabase.label, value, this._regexApiStore).toPromise().then(\n            resp => {\n                this._currentWebEntity = resp;\n                this.utils.addHashToWebEntity(this._currentWebEntity);\n                this.finishedLoadingWebEntity = true;\n            },\n            err => {\n                console.log(err);\n            }\n        );\n\n    }\n\n    public debugMode() {\n        this._currentWebEntity = (testWebEntity as any).default;\n        this._currentLocalEntity = (testLocalEntity as any).default;\n        this._localDatabase = (testLocalDB as any).default;\n        this._webDatabase = (testWebDB as any).default;\n        this.utils.addHashToWebEntity(this._currentWebEntity);\n\n        this._currentAlignment = {mappings: [], localEntity: this.currentLocalEntity, webEntity: this.currentWebEntity};\n        this.entityAlignments.push(this._currentAlignment);\n\n        this._suggestionContainer = (testSuggestion as any).default;\n        this.suggestionsLoaded = true;\n\n        this.finishedLoadingLocalEntity = true;\n        this.finishedLoadingWebEntity = true;\n        this.finishedNewEntity = true;\n    }\n\n    async changeWebReducedResponse(value): Promise<void> {\n        this._currentWebEntity.reducedResponse = value;\n        this.connection.postToFlatJson(value).toPromise().then((resp) => {\n            this._currentWebEntity.dictionary = resp.dictionary;\n            this.utils.addHashToWebEntity(this._currentWebEntity);\n        });\n\n        const diff = this.connection.postJsonDiff(this._currentWebEntity.originalResponse, value).toPromise().then(\n            (resp) => {\n                this._regexApiStore = [...new Set(resp.regex)];\n            }\n        );\n    }\n\n    generateSuggestions(): void {\n        this.suggestionsLoaded = false;\n        const mappings = [];\n        for (const alignment of this._entityAlignments) {\n            for (const elem of alignment.mappings) {\n                mappings.push(elem);\n            }\n        }\n        this.connection.postSuggestions(mappings).toPromise().then(\n            (resp) => {\n                this._suggestionContainer = resp;\n                this.suggestionsLoaded = true;\n            }\n        );\n    }\n\n    generateFinalAlignment(): void {\n        this.finishedFinalAlignment = false;\n        const mappings = [];\n        for (const suggestion of this._suggestionContainer.suggestions) {\n            const general = suggestion.general;\n            if (general.selected) {\n                mappings.push({localEntries: general.localEntries, webEntries: general.webEntries, type: general.type});\n            }\n            for (const mapping of suggestion.suggestions) {\n                const template = mapping.template;\n                if (template.selected) {\n                    mappings.push({localEntries: template.localEntries, webEntries: template.webEntries, type: template.type});\n                }\n            }\n        }\n        this._finalAlignment = {mappings, localLabel: this._localDatabase.label, webLabel: this._webDatabase.label};\n        this.finishedFinalAlignment = true;\n    }\n\n    saveFinalAlignment(): Promise<any> {\n        return this.connection.postFinalAlignment(this.finalAlignment).toPromise();\n    }\n\n    private saveLocalKnownPaths(): void{\n        if (this._currentLocalEntity === undefined || this._currentWebEntity === undefined ){\n            return;\n        }else {\n            console.log(this._currentLocalEntity);\n            console.log(this._currentWebEntity);\n        }\n\n        for ( const entry of this._currentLocalEntity.valueList[0].fullKnowledge){\n            if (!this._localKnownPathStore.has(entry.path)){\n                   this._localKnownPathStore.add(entry.path);\n            }\n        }\n\n        for ( const entry of this._currentWebEntity.dictionary){\n            if (!this._webKnownPathStore.has(entry.path)){\n                this._webKnownPathStore.add(entry.path);\n            }\n        }\n    }\n\n    get currentAlignment(): GSBAlignment {\n        return this._currentAlignment;\n    }\n\n    get currentMappings(): any[] {\n        return this._currentAlignment.mappings;\n    }\n\n    get currentWebEntity() {\n        return this._currentWebEntity;\n    }\n\n    get currentLocalEntity() {\n        return this._currentLocalEntity;\n    }\n\n    get localDatabase(): ILocalDatabase {\n        return this._localDatabase;\n    }\n\n    get webDatabase(): IApi {\n        return this._webDatabase;\n    }\n\n    get finishedLoading(): boolean {\n        return this.finishedLoadingLocalEntity && this.finishedLoadingWebEntity && this.finishedNewEntity;\n    }\n\n    get entityAlignments(): GSBAlignment[] {\n        return this._entityAlignments;\n    }\n\n    get currentIndex(): number {\n        return this._currentIndex;\n    }\n\n    get finalAlignment() {\n        return this._finalAlignment;\n    }\n\n    get suggestionContainer(): ISuggestionContainer {\n        return this._suggestionContainer;\n    }\n\n    get localKnownPathStore(): Set<string> {\n        return this._localKnownPathStore;\n    }\n\n    get webKnownPathStore(): Set<string> {\n        return this._webKnownPathStore;\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n\n\n\n\n\n\n\n","import {ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\nimport {IMappingSuggestion, ISuggestionEntry} from '../../../../_interfaces/gsb/suggestion';\nimport {GsbService} from '../../../../_services/gsb.service';\nimport {Utils} from '../../../../_classes/Utils';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {MappingViewComponent} from '../mapping-view/mapping-view.component';\n\n@Component({\n    selector: 'app-mapping-suggestion',\n    templateUrl: './mapping-suggestion.component.html',\n    styleUrls: ['./mapping-suggestion.component.scss']\n})\nexport class MappingSuggestionComponent implements OnInit {\n\n    utils: Utils = new Utils();\n\n    @Input() suggestionMapping: IMappingSuggestion;\n\n    useGeneral = true;\n    useIndividual = false;\n\n    constructor(public gsbService: GsbService, public cdr: ChangeDetectorRef, private _dialog: MatDialog) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    toggleUseGeneral(): void {\n        this.useGeneral = !this.useGeneral;\n        this.useIndividual = !this.useGeneral;\n\n    }\n\n    toggleUseIndividual(): void {\n        this.useIndividual = !this.useIndividual;\n        this.useGeneral = !this.useGeneral;\n\n    }\n\n    openMappingTable(entry: ISuggestionEntry): void {\n        const dialogConfig = new MatDialogConfig();\n\n        dialogConfig.data = entry;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.minHeight = '70vh';\n        dialogConfig.maxWidth = '90vw';\n        dialogConfig.minWidth = '70vw';\n        const dialogRef = this._dialog.open(MappingViewComponent, dialogConfig).afterClosed().toPromise().then(() => {\n            this.cdr.detectChanges();\n        });\n    }\n\n}\n","<div class=\"suggestions-wrapper\">\n    <h1>General Mapping</h1>\n    <div class=\"mapping\">\n        <div class=\"select\">\n            <mat-checkbox color=\"primary\" [(ngModel)]=\"suggestionMapping.general.selected\"></mat-checkbox>\n        </div>\n        <div class=\"relation-container\">\n            <div class=\"entry\" *ngFor=\"let entry of suggestionMapping.general.localEntries\">\n                <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n            </div>\n        </div>\n        <div class=\"divider\">\n            <div [innerHtml]=\"suggestionMapping.general.counter\"></div>\n            <div class=\"relationType\">\n                <mat-icon *ngIf=\"suggestionMapping.general.type === 0\">east</mat-icon>\n                <mat-icon *ngIf=\"suggestionMapping.general.type === 1\">west</mat-icon>\n                <mat-icon *ngIf=\"suggestionMapping.general.type === 2\">sync_alt</mat-icon>\n            </div>\n            <div class=\"action\">\n                <ng-container *ngIf=\"suggestionMapping.suggestions.length == 1\">\n                    <button mat-icon-button aria-label=\"Clear\" (click)=\"openMappingTable(suggestionMapping.suggestions[0])\">\n                        <mat-icon>preview</mat-icon>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"relation-container\">\n            <div class=\"entry\" *ngFor=\"let entry of suggestionMapping.general.webEntries\">\n                <p>{{entry}}</p>\n            </div>\n        </div>\n        <div class=\"flex-grow-1\">\n        </div>\n    </div>\n    <br>\n    <ng-container *ngIf=\"suggestionMapping.suggestions.length >= 1\">\n        <h1>Individual Mappings</h1>\n        <div class=\"mapping-wrapper\" *ngFor=\"let suggestion of suggestionMapping.suggestions; let index=index\">\n            <div class=\"mapping\">\n                <div class=\"select\">\n                    <mat-checkbox color=\"primary\" [(ngModel)]=\"suggestion.selected\"></mat-checkbox>\n                </div>\n                <div class=\"relation-container\">\n                    <div class=\"entry\" *ngFor=\"let entry of suggestion.template.localEntries\">\n                        <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n                    </div>\n                </div>\n                <div class=\"divider\">\n                    <div><span [innerHtml]=\"suggestion.counter\"></span></div>\n                    <div class=\"relationType\">\n                        <mat-icon *ngIf=\"suggestion.template.type === 0\">east</mat-icon>\n                        <mat-icon *ngIf=\"suggestion.template.type === 1\">west</mat-icon>\n                        <mat-icon *ngIf=\"suggestion.template.type === 2\">sync_alt</mat-icon>\n                    </div>\n                    <div class=\"action\">\n                        <button mat-icon-button aria-label=\"Clear\" (click)=\"openMappingTable(suggestion)\">\n                            <mat-icon>preview</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"relation-container\">\n                    <div class=\"entry\" *ngFor=\"let entry of suggestion.template.webEntries\">\n                        <p>{{entry}}</p>\n                    </div>\n                </div>\n                <div class=\"flex-grow-1\">\n                </div>\n            </div>\n\n        </div>\n    </ng-container>\n</div>\n","import {RelationPath} from './RelationPath';\nimport {Metric} from './Metric';\n\n\nexport class Mapping {\n    private _apiPaths: string[];\n    private _relationPaths: RelationPath[];\n    private _metrics: Metric[];\n\n    constructor(apiPath: string[], relationPaths: RelationPath[], metrics: Metric[]) {\n        this._apiPaths = apiPath;\n\n        this._relationPaths = relationPaths;\n\n        this._metrics = metrics;\n    }\n\n    get apiPaths(): string[] {\n        return this._apiPaths;\n    }\n\n    get relationPaths(): RelationPath[] {\n        return this._relationPaths;\n    }\n\n    get metrics(): Metric[] {\n        return this._metrics;\n    }\n\n    private addRelationPath(relationPaths: RelationPath | RelationPath[] | string[]): void {\n        if (Array.isArray(relationPaths)) {\n            if (relationPaths.length === 0) {\n                return;\n            }\n            if (relationPaths[0] instanceof RelationPath) {\n                for (const relationPath of relationPaths) {\n                    this._relationPaths.push(relationPath as RelationPath);\n                }\n            } else {\n                const rel = new RelationPath(relationPaths as string[]);\n                this._relationPaths.push(rel);\n            }\n        } else {\n            this._relationPaths.push(relationPaths);\n        }\n    }\n\n    private addApiPath(apiPath: string | string[]): void {\n        if (Array.isArray(apiPath)) {\n            for (const path of apiPath) {\n                this._apiPaths.push(path);\n            }\n        } else {\n            this._apiPaths.push(apiPath);\n        }\n    }\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-schema',\n    templateUrl: './schema.component.html',\n    styleUrls: ['./schema.component.scss']\n})\nexport class SchemaComponent implements OnInit {\n\n    code: any;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.code = `\n            {\n              \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n              \"$id\": \"https://example.com/alignment.schema.json\",\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"system\":{\n                  \"type\": \"string\"\n                },\n                \"description\": {\n                  \"type\": \"string\"\n                },\n                \"alignments\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/mapping\"\n                  }\n                }\n              },\n              \"required\": [\n                \"name\",\n                \"alignments\"\n              ],\n\n\n              \"definitions\": {\n                \"mapping\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"api_path\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"relation_path\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/definitions/relationPath\"\n                      }\n                    },\n                    \"metrics\": {\n                      \"type\": \"object\",\n                      \"patternProperties\": {\n                        \"\": {\n                          \"type\": \"number\"\n                        }\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"api_path\",\n                    \"relation_path\",\n                    \"metrics\"\n                  ]\n                },\n                \"relationPath\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"path\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }`;\n    }\n}\n","<a mat-raised-button href=\"../../../assets/jsonSchema/alignment.schema.json\">Download here</a>\n<pre>\n    <code [highlight]=\"code\" [lineNumbers]=\"true\"></code>\n</pre>\n","export class RelationPath {\n    private _paths: string[];\n\n    constructor(paths: string[]) {\n        this._paths = paths;\n    }\n\n    public addPath(path: string): void {\n        this._paths.push(path);\n    }\n\n    public compareTo(b: RelationPath): number {\n        return this.paths.toString().localeCompare(b.toString());\n    }\n\n    get paths(): string[] {\n        return this._paths;\n    }\n\n    public toString(): string {\n        return this.paths.join();\n    }\n}\n","export * from './ViewModeEnum';\nexport * from './MappingType';\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {UiSidebarLeftComponent} from './ui-sidebar-left/ui-sidebar-left.component';\nimport {UiSidebarRightComponent} from './ui-sidebar-right/ui-sidebar-right.component';\nimport {UiInfobarBottomComponent} from './ui-infobar-bottom/ui-infobar-bottom.component';\nimport {UiInfobarTopComponent} from './ui-infobar-top/ui-infobar-top.component';\nimport {AlignmentCubeService} from '../engine/alignment-cube.service';\n\n@Component({\n  selector: 'app-ui',\n  templateUrl: './ui.component.html',\n  styleUrls: [ './ui.component.scss']\n})\nexport class UiComponent implements OnInit {\n\n  @Input() engineService: AlignmentCubeService;\n\n  @ViewChild(UiSidebarLeftComponent)\n  private leftSidebar: UiSidebarLeftComponent;\n\n  @ViewChild(UiSidebarRightComponent)\n  private rightSidebar: UiSidebarRightComponent;\n\n  @ViewChild(UiInfobarBottomComponent)\n  private bottomInfobar: UiInfobarBottomComponent;\n\n  @ViewChild(UiInfobarTopComponent)\n  private topInfobar: UiInfobarTopComponent;\n\n  public constructor() {\n  }\n\n  public ngOnInit(): void {\n  }\n\n}\n","<div class=\"ui-wrapper\">\n  <app-ui-infobar-top class=\"ui-wrapper-top\"></app-ui-infobar-top>\n  <app-ui-sidebar-left class=\"ui-wrapper-left\"></app-ui-sidebar-left>\n  <app-ui-sidebar-right class=\"ui-wrapper-right\" ></app-ui-sidebar-right>\n</div>\n","import * as THREE from 'three';\nimport {ResourceTracker} from './ResourceTracker';\nimport {AlignmentCubeService} from '../../_components/alignment-cube/engine/alignment-cube.service';\nimport {AlignmentContainer} from '../alignment';\nimport {settings} from '../../../assets/settings';\nimport {ThreeJsUtil} from './ThreeJsUtil';\nimport {PathFormatterService} from '../../_services';\n\nexport class LabelCreator {\n    labelFormatter: PathFormatterService;\n\n    constructor(alignmentCubeService: AlignmentCubeService, labelFormatter: PathFormatterService) {\n        this.alignmentCubeService = alignmentCubeService;\n        this.labelFormatter = labelFormatter;\n        this.alignmentModel = alignmentCubeService.alignmentContainer;\n        this.scene = alignmentCubeService.scene;\n        this.labelTracker = new ResourceTracker();\n    }\n\n    private alignmentCubeService: AlignmentCubeService;\n\n    private labelTracker: ResourceTracker;\n\n    // references to alignmentCubeService variables\n    private scene: THREE.Scene;\n    private alignmentModel: AlignmentContainer;\n\n\n    /**\n     * Create the label for the x Axis ( Api Paths )\n     *\n     * @param xStart - x position of start edge\n     * @param yStart - y position of start edge\n     * @param zStart - z position of start edge\n     * @param xOffset\n     * @param yOffset\n     * @param zOffset\n     * @param rotation - rotation radiant ( use Math.PI)\n     * @param withLines - set if you need a visual support to the edge of the outline cube\n     */\n    public addLabelsX(xStart: number, yStart: number, zStart: number,\n                      xOffset: number = 0, yOffset: number = 0, zOffset: number = 0,\n                      rotation: number = 0, withLines: boolean = false): void {\n\n        this.alignmentModel.apiLabels.forEach((apiPath, index) => {\n            const x = xStart + xOffset + index;\n            const y = yStart + yOffset;\n            const z = zStart + zOffset;\n\n            const context: string = this.labelFormatter.formatApiPath(apiPath);\n\n            const label = this.attachLabelToObject(context, this.alignmentCubeService.outlineBox, x, y, z, 400,\n                'blue', rotation, true);\n            this.labelTracker.track(label);\n            if (withLines) {\n                const line = ThreeJsUtil.createLine(new THREE.Vector3(x, yStart, zStart), label.position);\n                this.scene.add(line);\n                this.labelTracker.track(line);\n                this.alignmentCubeService.outlineBox.add(line);\n            }\n            this.alignmentCubeService.outlineBox.add(label);\n        });\n    }\n\n    /**\n     * Create the label for the y Axis ( Relation Paths )\n     *\n     * @param xStart - x position of start edge\n     * @param yStart - y position of start edge\n     * @param zStart - z position of start edge\n     * @param xOffset\n     * @param yOffset\n     * @param zOffset\n     * @param rotation - rotation radiant ( use Math.PI)\n     * @param withLines - set if you need a visual support to the edge of the outline cube\n     */\n    public addLabelsY(xStart: number, yStart: number, zStart: number,\n                      xOffset: number = 0, yOffset: number = 0, zOffset: number = 0,\n                      rotation: number = 0, withLines: boolean = false): void {\n\n        this.alignmentModel.relationPathLabels.forEach((relationPath, index) => {\n            const labels: string[] = [];\n            const x = xStart + xOffset;\n            const y = yStart + yOffset + index;\n            const z = zStart + zOffset;\n\n            relationPath.forEach((path) => {\n                labels.push(this.labelFormatter.formatRelationPath(path));\n            });\n            const labelContext = this.labelFormatter.joinRelPaths(labels);\n            const label = this.attachLabelToObject(labelContext, this.alignmentCubeService.outlineBox, x, y, z, 400,\n                'gray', rotation, true\n            );\n            this.labelTracker.track(label);\n            if (withLines) {\n                const line = ThreeJsUtil.createLine(new THREE.Vector3(xStart, y, zStart), label.position);\n                this.scene.add(line);\n                this.labelTracker.track(line);\n                this.alignmentCubeService.outlineBox.add(line);\n            }\n            this.alignmentCubeService.outlineBox.add(label);\n        });\n    }\n\n    /**\n     * Create the label for the z Axis ( Alignments )\n     *\n     * @param xStart - x position of start edge\n     * @param yStart - y position of start edge\n     * @param zStart - z position of start edge\n     * @param xOffset\n     * @param yOffset\n     * @param zOffset\n     * @param rotation - rotation radiant ( use Math.PI)\n     * @param withLines - set if you need a visual support to the edge of the outline cube\n     */\n    public addLabelsZ(xStart: number, yStart: number, zStart: number,\n                      xOffset: number = 0, yOffset: number = 0, zOffset: number = 0,\n                      rotation: number = 0, withLines: boolean = false): void {\n        const depth = this.alignmentModel.alignments.length;\n        for (let i = 0; i < depth; i++) {\n            const x = xStart + xOffset;\n            // const x = xStart + (depth - 1 - i) * 0.8 + xOffset;\n            const y = yStart + yOffset;\n            const z = zStart - depth + 1 + i + zOffset;\n            const content = this.alignmentModel.alignments[i].name;\n            const label = this.attachLabelToObject(content, this.alignmentCubeService.outlineBox, x, y, z, 400,\n                'gray', rotation, true);\n            this.labelTracker.track(label);\n            if (withLines) {\n                const line = ThreeJsUtil.createLine(new THREE.Vector3(xStart, yStart, z), label.position);\n                this.scene.add(line);\n                this.labelTracker.track(line);\n                this.alignmentCubeService.outlineBox.add(line);\n            }\n            this.alignmentCubeService.outlineBox.add(label);\n        }\n    }\n\n    /**\n     * Attach a label to an Object3D.\n     * @param content - label text\n     * @param object\n     * @param x - x position relative to object center\n     * @param y - y position relative to object center\n     * @param z - z position relative to object center\n     * @param labelWidth\n     * @param style - color for background\n     * @param rotation - rotation radiant ( use Math.PI)\n     * @param visible\n     * @private\n     */\n    private attachLabelToObject(content: string, object: THREE.Object3D, x: number = 0, y: number = 1, z: number = 0,\n                                labelWidth: number = 100, style: string = 'gray', rotation: number = 0,\n                                visible: boolean = false): THREE.Sprite {\n        const canvas = ThreeJsUtil.createHTMLCanvasLabel(labelWidth, 40, content, style);\n        const texture = new THREE.CanvasTexture(canvas);\n        // because our canvas is likely not a power of 2\n        // in both dimensions set the filtering appropriately.\n        texture.minFilter = THREE.LinearFilter;\n        texture.wrapS = THREE.ClampToEdgeWrapping;\n        texture.wrapT = THREE.ClampToEdgeWrapping;\n\n        const labelMaterial = new THREE.SpriteMaterial({\n            map: texture,\n            transparent: true,\n        });\n        labelMaterial.rotation = rotation;\n\n        const labelBaseScale = 0.01;\n        const label = new THREE.Sprite(labelMaterial);\n        object.add(label);\n        label.position.set(x, y, z);\n        label.scale.x = canvas.width * labelBaseScale;\n        label.scale.y = canvas.height * labelBaseScale;\n        label.traverse((object1) => {\n            object1.visible = visible;\n        });\n        return label;\n    }\n\n    /**\n     * Delete all labels created by this\n     */\n    public disposeLabels(): void{\n        this.labelTracker.dispose();\n    }\n\n}\n","import * as THREE from 'three';\nimport {AlignmentCubeService} from '../../_components/alignment-cube/engine/alignment-cube.service';\nimport {AlignmentContainer} from '../alignment';\nimport {LabelCreator} from './LabelCreator';\nimport {ThreeJsUtil} from './ThreeJsUtil';\nimport {DataCubeCreator} from './DataCubeCreator';\nimport {ResourceTracker} from './ResourceTracker';\nimport {PathFormatterService} from '../../_services';\n\nexport class SceneLoader {\n    private alignmentCubeService: AlignmentCubeService;\n\n    // references to alignmentCubeService variables\n    private scene: THREE.Scene;\n    private alignmentModel: AlignmentContainer;\n\n    private labelCreator: LabelCreator;\n    private dataCubeCreator: DataCubeCreator;\n    private resTracker: ResourceTracker;\n\n    constructor(alignmentCubeService: AlignmentCubeService, pathFormatterService: PathFormatterService) {\n        this.alignmentCubeService = alignmentCubeService;\n        this.alignmentModel = alignmentCubeService.alignmentContainer;\n        this.scene = alignmentCubeService.scene;\n        this.labelCreator = new LabelCreator(alignmentCubeService, pathFormatterService);\n        this.dataCubeCreator = new DataCubeCreator(alignmentCubeService);\n        this.resTracker = new ResourceTracker();\n    }\n\n    /**\n     * 2D View with x: ApiPath and y: datasets\n     */\n    public load2DSceneRelation(): void {\n\n        const width = this.alignmentModel.apiLabels.length;\n        const height = 1;\n        const depth = this.alignmentModel.alignments.length;\n\n        this.alignmentCubeService.outlineBox = ThreeJsUtil.createOutlineCube(width, height, depth);\n        this.resTracker.track(this.alignmentCubeService.outlineBox);\n        this.scene.add(this.alignmentCubeService.outlineBox);\n\n        const xStart = -width / 2;\n        const yStart = -height / 2;\n        const zStart = depth / 2;\n\n        this.labelCreator.addLabelsX(xStart, yStart, zStart, 0.5, 0, 2.5, Math.PI / 2);\n        this.labelCreator.addLabelsZ(xStart, yStart, zStart, -2.5, 0, -0.5, 0);\n\n        this.dataCubeCreator.addDataCubes();\n\n        this.alignmentCubeService.orbitControls.enableRotate = false;\n        this.alignmentCubeService.orbitControls.enablePan = false;\n        const newPosition = this.alignmentCubeService.outlineBox.position.clone();\n\n        const y = this.alignmentModel.relationPathLabels.length + 1;\n\n        if (this.alignmentCubeService.currentCamera instanceof THREE.PerspectiveCamera) {\n            this.alignmentCubeService.changeCamera();\n        }\n\n        this.alignmentCubeService.currentCamera.position.set(newPosition.x, y , newPosition.z);\n    }\n\n    /**\n     * 2D View with x: ApiPath and y: RelationPath\n     */\n    public load2DSceneAlignment(): void {\n\n        const width = this.alignmentModel.apiLabels.length;\n        const height = this.alignmentModel.relationPathLabels.length;\n        const depth = 1;\n\n        this.alignmentCubeService.outlineBox = ThreeJsUtil.createOutlineCube(width, height, depth);\n        this.resTracker.track(this.alignmentCubeService.outlineBox);\n        this.scene.add(this.alignmentCubeService.outlineBox);\n\n        const xStart = -width / 2;\n        const yStart = -height / 2;\n        const zStart = depth / 2;\n\n        this.labelCreator.addLabelsX(xStart, yStart, zStart, 0.5, -2.5, 0, Math.PI / 2);\n        this.labelCreator.addLabelsY(xStart, yStart, zStart, -2.5, 0.5, 0);\n\n        this.dataCubeCreator.addDataCubes();\n\n        this.alignmentCubeService.orbitControls.enableRotate = false;\n        this.alignmentCubeService.orbitControls.enablePan = false;\n        const newPosition = this.alignmentCubeService.outlineBox.position.clone();\n        const z = this.alignmentModel.alignments.length + 1;\n\n        if (this.alignmentCubeService.currentCamera instanceof THREE.PerspectiveCamera) {\n            this.alignmentCubeService.changeCamera();\n        }\n\n        this.alignmentCubeService.currentCamera.position.set(newPosition.x, newPosition.y, z);\n    }\n\n    /**\n     * 2D View with x: Dataset and y: RelationPath\n     */\n    public load2DSceneApi(): void {\n\n        const width = 1;\n        const height = this.alignmentModel.relationPathLabels.length;\n        const depth = this.alignmentModel.alignments.length;\n\n        this.alignmentCubeService.outlineBox = ThreeJsUtil.createOutlineCube(width, height, depth);\n        this.resTracker.track(this.alignmentCubeService.outlineBox);\n        this.scene.add(this.alignmentCubeService.outlineBox);\n\n        const xStart = -width / 2;\n        const yStart = -height / 2;\n        const zStart = depth / 2;\n\n        this.labelCreator.addLabelsY(xStart, yStart, zStart, 0, 0.5, 2.5);\n        this.labelCreator.addLabelsZ(-xStart, yStart, zStart, 0, -2.5, -0.5, Math.PI / 2);\n\n        this.dataCubeCreator.addDataCubes();\n\n        this.alignmentCubeService.orbitControls.enableRotate = false;\n        this.alignmentCubeService.orbitControls.enablePan = false;\n\n        const newPosition = this.alignmentCubeService.outlineBox.position.clone();\n        const x = this.alignmentModel.apiLabels.length + 1;\n\n        if (this.alignmentCubeService.currentCamera instanceof THREE.PerspectiveCamera) {\n            this.alignmentCubeService.changeCamera();\n        }\n\n        this.alignmentCubeService.currentCamera.position.set(x, newPosition.y, newPosition.z);\n    }\n\n    public load3DScene(): void {\n        const width = this.alignmentModel.apiLabels.length;\n        const height = this.alignmentModel.relationPathLabels.length;\n        const depth = this.alignmentModel.alignments.length;\n\n        this.alignmentCubeService.outlineBox = ThreeJsUtil.createOutlineCube(width, height, depth);\n        this.resTracker.track(this.alignmentCubeService.outlineBox);\n        this.scene.add(this.alignmentCubeService.outlineBox);\n\n        const xStart = -width / 2;\n        const yStart = -height / 2;\n\n        const zStart = depth / 2;\n        this.alignmentCubeService.orbitControls.enableRotate = true;\n        this.alignmentCubeService.orbitControls.enablePan = true;\n\n        this.alignmentCubeService.orbitControls.target.copy(this.alignmentCubeService.outlineBox.position.clone());\n\n        // Labels\n        this.labelCreator.addLabelsX(xStart, yStart, zStart, 0.5, -2.5, 0, Math.PI / 2);\n        this.labelCreator.addLabelsY(xStart, yStart, zStart, -2.5, 0.5, 0);\n        this.labelCreator.addLabelsZ(-xStart, yStart, zStart, 2.5, 0, -0.5);\n\n        // DataCubes\n        this.dataCubeCreator.addDataCubes();\n\n        this.alignmentCubeService.orbitControls.enableRotate = true;\n        this.alignmentCubeService.orbitControls.enablePan = true;\n\n        const newPosition = this.alignmentCubeService.outlineBox.position.clone();\n        const a = this.alignmentModel.apiLabels.length;\n        const b = this.alignmentModel.relationPathLabels.length;\n        const z = Math.sqrt(a ** 2 + b ** 2) + 1;\n\n        this.alignmentCubeService.currentCamera.position.set(newPosition.x + 1, newPosition.y + 1, z);\n    }\n\n    /**\n     * Removes all objects of the scene.\n     */\n    public clearScene(): void {\n        this.labelCreator.disposeLabels();\n        this.dataCubeCreator.disposeCubes();\n        this.resTracker.dispose();\n    }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AlignmentCubeService} from '../../engine/alignment-cube.service';\nimport {FormBuilder, FormControl} from '@angular/forms';\n\n@Component({\n    selector: 'app-ui-sidebar-right',\n    templateUrl: './ui-sidebar-right.component.html'\n})\nexport class UiSidebarRightComponent implements OnInit {\n\n    visible = false;\n\n    fullRelationPathControl: FormControl;\n    fullApiPathControl: FormControl;\n    fullRelationPathAxisControl: FormControl;\n    fullApiPathAxisControl: FormControl;\n    metricChoiceControl: FormControl;\n\n    public constructor(\n        private fb: FormBuilder,\n        public engineService: AlignmentCubeService) {\n    }\n\n    public ngOnInit(): void {\n        this.fullRelationPathControl = new FormControl(true);\n        this.fullApiPathControl = new FormControl(true);\n        this.fullApiPathAxisControl = new FormControl(true);\n        this.fullRelationPathAxisControl = new FormControl(true);\n        this.metricChoiceControl = new FormControl('');\n\n\n    }\n\n    changeMetric(): void {\n        this.engineService.setMetric(this.metricChoiceControl.value);\n    }\n\n    changeRelationPath(): void {\n        this.engineService.setShowRelationFullPath(this.fullRelationPathControl.value);\n    }\n\n    changeApiPath(): void {\n        this.engineService.setShowApiFullPath(this.fullApiPathControl.value);\n    }\n\n}\n","<!--<mat-card>\n    <mat-accordion class=\"example-headers-align\" multi>\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Metric Settings\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    DataCube Label Settings\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Axis Label Settings\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Other Settings\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n        </mat-expansion-panel>\n    </mat-accordion>\n</mat-card>-->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"d-flex flex-row justify-content-between\">\n            <div class=\"card-title\">Settings</div>\n            <button class=\"btn-close\" (click)=\"visible= !visible\"></button>\n        </div>\n\n    </div>\n    <div class=\"card-body\" *ngIf=\"visible\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Metric:</mat-label>\n            <mat-select (selectionChange)=\"changeMetric()\" [formControl]=\"metricChoiceControl\">\n                <mat-option *ngFor=\"let metric of engineService.alignmentContainer.metricsNames\" [value]=\"metric\">\n                    {{metric}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <hr>\n        <p>Cube Label Settings</p>\n        <div class=\"row m-1\">\n            <mat-slide-toggle [formControl]=\"fullRelationPathControl\" color=\"primary\" (change)=\"changeRelationPath()\">\n                Full Relation Path\n            </mat-slide-toggle>\n            <mat-slide-toggle [formControl]=\"fullApiPathControl\" color=\"primary\" (change)=\"changeApiPath()\">\n                Full Api Path\n            </mat-slide-toggle>\n        </div>\n        <hr>\n        <p>Axis Label Settings</p>\n        <div class=\"row m-1\">\n            <mat-slide-toggle disabled [formControl]=\"fullApiPathControl\" color=\"primary\" (change)=\"changeApiPath()\">\n                Full Relation Path\n            </mat-slide-toggle>\n            <mat-slide-toggle disabled [formControl]=\"fullApiPathControl\" color=\"primary\" (change)=\"changeApiPath()\">\n                Full Api Path\n            </mat-slide-toggle>\n        </div>\n        <hr>\n        <p>Cube Settings</p>\n        <hr>\n        <p>Other Settings</p>\n        <div class=\"row m-1\">\n            <button mat-raised-button color=\"primary\" (click)=\"engineService.changeCamera()\">Change Perspektive</button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-setting-page',\n  templateUrl: './setting-page.component.html',\n  styleUrls: ['./setting-page.component.scss']\n})\nexport class SettingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"center\">\n    <mat-tab label=\"Webservices\">\n        <app-webservices-overview></app-webservices-overview>\n    </mat-tab>\n    <mat-tab label=\"APIs\">\n        <app-api-overview></app-api-overview>\n    </mat-tab>\n    <mat-tab label=\"DBs\">\n        <app-databases-overview></app-databases-overview>\n    </mat-tab>\n</mat-tab-group>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppComponent} from './app.component';\nimport {UiInfobarBottomComponent} from './_components/alignment-cube/ui/ui-infobar-bottom';\nimport {UiInfobarTopComponent} from './_components/alignment-cube/ui/ui-infobar-top';\nimport {UiSidebarLeftComponent} from './_components/alignment-cube/ui/ui-sidebar-left';\nimport {UiSidebarRightComponent} from './_components/alignment-cube/ui/ui-sidebar-right';\nimport {UiComponent} from './_components/alignment-cube/ui';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NavbarComponent} from './_components/navbar';\nimport {AppRoutingModule} from './app-routing.module';\nimport {StartPageComponent} from './pages/start-page/start-page.component';\nimport {DataCubePageComponent} from './pages/data-cube-page/data-cube-page.component';\nimport {SettingPageComponent} from './pages/setting-page/setting-page.component';\nimport {AlignmentCubeComponent} from './_components/alignment-cube';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AlignmentSelectorComponent} from './_components/alignment-cube/alignment-selector';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from '@angular/material/icon';\nimport {HIGHLIGHT_OPTIONS, HighlightModule} from 'ngx-highlightjs';\nimport { SchemaComponent } from './pages/schema-page/schema.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { GsbPageComponent } from './pages/gsb-page/gsb-page.component';\nimport { GoldStandardBuilderComponent } from './_components/gold-standard-builder/gold-standard-builder.component';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { WebservicesOverviewComponent } from './_components/webservices/webservices-overview/webservices-overview.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { WebserviceInformationComponent } from './_components/webservices/webservice-information/webservice-information.component';\nimport {MatDialog, MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport { DatabasesOverviewComponent } from './_components/databases/db-overview/databases-overview.component';\nimport { ApiOverviewComponent } from './_components/apis/api-overview/api-overview.component';\nimport { ApiInformationComponent } from './_components/apis/api-information/api-information.component';\nimport { DbInformationComponent } from './_components/databases/db-information/db-information.component';\nimport {NgJsonEditorModule} from '@maaxgr/ang-jsoneditor';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { WebserviceCreateFormComponent } from './_components/webservices/webservice-create-form/webservice-create-form.component';\nimport { MappingTableComponent } from './_components/gold-standard-builder/builder/mapping-table/mapping-table.component';\nimport { DbSelecectorComponent } from './_components/gold-standard-builder/db-selecector/db-selecector.component';\nimport { BuilderComponent } from './_components/gold-standard-builder/builder/builder.component';\nimport { HighlightPipe } from './_pipes/highlight.pipe';\nimport {BackendConnectionService} from './_services/backend-connection.service';\nimport {GsbService} from './_services/gsb.service';\nimport { JsonViewerComponent } from './_components/json-viewer/json-viewer.component';\nimport { TestComponent } from './pages/test/test.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { FinalAlignmentComponent } from './_components/gold-standard-builder/final-alignmnet/final-alignment.component';\nimport { MappingSuggestionToolComponent } from './_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion-tool.component';\nimport { MappingSuggestionComponent } from './_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion/mapping-suggestion.component';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MappingViewComponent } from './_components/gold-standard-builder/mapping-suggestion-tool/mapping-view/mapping-view.component';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { MappingEditorComponent } from './_components/gold-standard-builder/mapping-suggestion-tool/mapping-editor/mapping-editor.component';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { AlignmentViewerComponent } from './_components/alignment-viewer/alignment-viewer.component';\nimport { AlignmentViewerPageComponent } from './pages/alignment-viewer-page/alignment-viewer-page.component';\nimport { ApiCreateFormComponent } from './_components/apis/api-create-form/api-create-form.component';\nimport { DbCreateFormComponent } from './_components/databases/db-create-form/db-create-form.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        UiComponent,\n        UiInfobarBottomComponent,\n        UiInfobarTopComponent,\n        UiSidebarLeftComponent,\n        UiSidebarRightComponent,\n        NavbarComponent,\n        StartPageComponent,\n        DataCubePageComponent,\n        SettingPageComponent,\n        AlignmentCubeComponent,\n        AlignmentSelectorComponent,\n        SchemaComponent,\n        GsbPageComponent,\n        GoldStandardBuilderComponent,\n        WebservicesOverviewComponent,\n        WebserviceInformationComponent,\n        DatabasesOverviewComponent,\n        ApiOverviewComponent,\n        ApiInformationComponent,\n        DbInformationComponent,\n        WebserviceCreateFormComponent,\n        MappingTableComponent,\n        DbSelecectorComponent,\n        BuilderComponent,\n        HighlightPipe,\n        JsonViewerComponent,\n        TestComponent,\n        FinalAlignmentComponent,\n        MappingSuggestionToolComponent,\n        MappingSuggestionComponent,\n        MappingViewComponent,\n        MappingEditorComponent,\n        AlignmentViewerComponent,\n        AlignmentViewerPageComponent,\n        ApiCreateFormComponent,\n        DbCreateFormComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        AppRoutingModule,\n        ReactiveFormsModule,\n        BrowserAnimationsModule,\n        MatIconModule,\n        HighlightModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatExpansionModule,\n        MatCardModule,\n        MatButtonModule,\n        MatRadioModule,\n        FormsModule,\n        MatCheckboxModule,\n        MatSlideToggleModule,\n        MatToolbarModule,\n        MatTableModule,\n        MatDialogModule,\n        MatInputModule,\n        MatTabsModule,\n        ScrollingModule,\n        NgJsonEditorModule,\n        MatGridListModule,\n        MatStepperModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatBadgeModule\n    ],\n    providers: [\n        BackendConnectionService,\n        GsbService,\n        {\n            provide: HIGHLIGHT_OPTIONS,\n            useValue: {\n                fullLibraryLoader: () => import('highlight.js')\n            }\n        },\n        MatSnackBar\n    ],\n    bootstrap: [\n        AppComponent\n    ]\n})\nexport class AppModule {\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as dbTemplateFile from '../../../../assets/templates/db_template.json';\n\n@Component({\n  selector: 'app-db-create-form',\n  templateUrl: './db-create-form.component.html',\n  styleUrls: ['./db-create-form.component.scss']\n})\nexport class DbCreateFormComponent implements OnInit {\n\n  dbLabel: string;\n  dbTemplate: any;\n\n  @ViewChild(JsonEditorComponent)\n  configEditor: JsonEditorComponent;\n  public editorOptionsConfig: JsonEditorOptions;\n\n  constructor(private connection: BackendConnectionService, private _snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {\n    // Init jsonEditor for configuration file\n    this.editorOptionsConfig = new JsonEditorOptions();\n    this.editorOptionsConfig.mode = 'code';\n    this.editorOptionsConfig.modes = ['code'];\n\n    this.dbTemplate = (dbTemplateFile as any).default;\n    this.dbLabel = '';\n    this.dbTemplate.label = this.dbLabel;\n  }\n\n  onDBNameChange(): void {\n    this.dbTemplate = this.configEditor.get() as any;\n    this.dbTemplate.label = this.dbLabel;\n    this.configEditor.data = this.dbTemplate;\n  }\n\n  save(): void {\n    const config = this.configEditor.get();\n    this.connection.addNewDatabase(config).toPromise().then(\n        () => {\n          this.openSnackBar('Saved');\n        },\n        (error) => {\n          this.openSnackBar('Unable to add new service');\n        }\n    );\n  }\n\n  onJSONChange(): void {\n    this.dbTemplate = this.configEditor.get() as any;\n  }\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {duration: 2000});\n  }\n\n}\n","<p>\n    <b>Create a new database configuration</b>\n</p>\n<mat-form-field>\n    <mat-label>database label</mat-label>\n    <input matInput [(ngModel)]=\"dbLabel\" (ngModelChange)=\"onDBNameChange()\">\n</mat-form-field>\n<mat-tab-group class=\"group-container\">\n    <mat-tab label=\"Configuration File\">\n        <json-editor [options]=\"editorOptionsConfig\" [data]=\"dbTemplate\"></json-editor>\n    </mat-tab>\n</mat-tab-group>\n\n\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"\" (click)=\"save()\" [disabled]=\"!dbLabel\">Create</button>\n</mat-dialog-actions>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-start-page',\n  templateUrl: './start-page.component.html',\n  styleUrls: ['./start-page.component.scss']\n})\nexport class StartPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Welcome to ETARA your benchmark system for alignments.</p>\n","import {AfterViewInit, Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {ILocalDatabaseShortInfo, ILocalDatabasesOverview, IWebserviceConfiguration, IWebserviceDetails} from '../../../_interfaces';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\n\nimport * as ace from 'ace-builds';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-webservice-information',\n    templateUrl: './webservice-information.component.html',\n    styleUrls: ['./webservice-information.component.scss']\n})\nexport class WebserviceInformationComponent implements OnInit {\n\n    webserviceConfiguration: IWebserviceDetails;\n    webserviceLabel: string;\n\n    public editorOptionsConfig: JsonEditorOptions;\n    public editorOptionsReturnTemplate: JsonEditorOptions;\n\n    @ViewChild(JsonEditorComponent)\n    configEditor: JsonEditorComponent;\n\n    viewAsString = false;\n\n    @ViewChild('editor') private editor: ElementRef<HTMLElement>;\n    private aceEditor;\n\n    databases: Array<ILocalDatabaseShortInfo>;\n\n    constructor(\n        private connection: BackendConnectionService,\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_DIALOG_DATA) public data: string) {\n\n        this.connection.getDatabases().then((res: ILocalDatabasesOverview) => {\n            this.databases = res.databases;\n        });\n    }\n\n    ngOnInit(): void {\n        this.webserviceLabel = this.data;\n\n        this.editorOptionsConfig = new JsonEditorOptions();\n        this.editorOptionsConfig.mode = 'code';\n        this.editorOptionsConfig.modes = ['code'];\n        this.editorOptionsReturnTemplate = new JsonEditorOptions();\n        this.editorOptionsReturnTemplate.mode = 'text';\n        this.editorOptionsReturnTemplate.modes = ['text'];\n\n        this.connection.getWebserviceConfiguration(this.data).then((res: IWebserviceDetails) => {\n            this.webserviceConfiguration = res;\n            ace.config.set('fontSize', '14px');\n            ace.config.set('basePath', 'https://unpkg.com/ace-builds@1.4.13/src-noconflict');\n\n            this.aceEditor = ace.edit(this.editor.nativeElement);\n            // aceEditor.setTheme('ace/theme/twilight');\n            this.aceEditor.session.setMode('ace/mode/ftl');\n            this.aceEditor.session.setValue(this.webserviceConfiguration.returnTemplate);\n        });\n    }\n\n    onValueChange(): void {\n        this.configEditor.data = this.webserviceConfiguration.configuration;\n        this.webserviceConfiguration.configuration = this.configEditor.get() as any;\n    }\n\n    onJSONChange(): void {\n        this.webserviceConfiguration.configuration = this.configEditor.get() as any;\n    }\n\n    openSnackBar(message: string) {\n        this._snackBar.open(message, '', {duration: 2000});\n    }\n\n    save(): void {\n        const config = this.configEditor.get();\n        const returnTemplate = this.aceEditor.session.getValue();\n        this.connection.updateWebservice(this.webserviceLabel, config, returnTemplate).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to save changes');\n            }\n        );\n    }\n\n    delete(): void {\n        this.connection.deleteWebservice(this.webserviceLabel).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to delete');\n            }\n        );\n    }\n\n\n}\n","<p>\n    <b>Webservice:</b> {{data}}\n</p>\n<mat-tab-group class=\"group-container\" (selectedIndexChange)=\"onJSONChange()\">\n    <mat-tab label=\"Configuration Form\">\n        <ng-container *ngIf=\"webserviceConfiguration\">\n            <div class=\"form-container\">\n                <mat-form-field>\n                    <mat-label>webservice-path</mat-label>\n                    <input matInput [(ngModel)]=\"webserviceConfiguration.configuration.webservice\" (ngModelChange)=\"onValueChange()\">\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>errorType</mat-label>\n                    <!--                <mat-hint>Choose the error type</mat-hint>-->\n                    <mat-select [(ngModel)]=\"webserviceConfiguration.configuration.errorType\" (ngModelChange)=\"onValueChange()\">\n                        <mat-option value=\"jsonWithStatus\">jsonWithStatus</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>type</mat-label>\n                    <mat-select [(ngModel)]=\"webserviceConfiguration.configuration.type\" (ngModelChange)=\"onValueChange()\">\n                        <mat-option value=\"precise\">precise</mat-option>\n                        <mat-option value=\"fuzzy\">fuzzy</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>latency</mat-label>\n                    <!--                <mat-hint>Time per request in s</mat-hint>-->\n                    <input matInput  [(ngModel)]=\"webserviceConfiguration.configuration.latency\"\n                           (ngModelChange)=\"onValueChange()\">\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>maxRequestsPerMinute</mat-label>\n                    <input matInput  [(ngModel)]=\"webserviceConfiguration.configuration.maxRequestsPerMinute\"\n                           (ngModelChange)=\"onValueChange()\">\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>maxRequests</mat-label>\n                    <input matInput  [(ngModel)]=\"webserviceConfiguration.configuration.maxRequests\"\n                           (ngModelChange)=\"onValueChange()\">\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>returnTemplate</mat-label>\n                    <input matInput [(ngModel)]=\"webserviceConfiguration.configuration.returnTemplate\" (ngModelChange)=\"onValueChange()\" disabled>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>database</mat-label>\n                    <mat-select [(ngModel)]=\"webserviceConfiguration.configuration.db\" (ngModelChange)=\"onValueChange()\">\n                        <mat-option value=\"None\">None</mat-option>\n                        <mat-option *ngFor=\"let entry of databases\"\n                                    value=\"{{entry.label}}\">{{entry.label}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </ng-container>\n    </mat-tab>\n    <mat-tab label=\"Configuration File\">\n        <ng-container *ngIf=\"webserviceConfiguration\">\n            <json-editor [options]=\"editorOptionsConfig\" [data]=\"webserviceConfiguration.configuration\"></json-editor>\n        </ng-container>\n    </mat-tab>\n    <mat-tab label=\"Return Template\">\n        <div #editor style=\"width: 70vw; height: 70vh;\"></div>\n    </mat-tab>\n</mat-tab-group>\n\n\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"\" (click)=\"save()\">Save</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"\" (click)=\"delete()\">Delete</button>\n</mat-dialog-actions>\n\n","export * from './ui-sidebar-right.component';\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ILocalDatabaseShortInfo, ILocalDatabasesOverview} from '../../../_interfaces';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as apiTemplateFile from '../../../../assets/templates/api_template.json';\n\n@Component({\n  selector: 'app-api-create-form',\n  templateUrl: './api-create-form.component.html',\n  styleUrls: ['./api-create-form.component.scss']\n})\nexport class ApiCreateFormComponent implements OnInit {\n\n  apiConfiguration: any;\n  apiLabel: string;\n  apiTemplate: any;\n\n  @ViewChild(JsonEditorComponent)\n  configEditor: JsonEditorComponent;\n  public editorOptionsConfig: JsonEditorOptions;\n  public editorOptionsReturnTemplate: JsonEditorOptions;\n\n  constructor(private connection: BackendConnectionService, private _snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {\n    // Init jsonEdeitor for configuration file\n    this.editorOptionsConfig = new JsonEditorOptions();\n    this.editorOptionsConfig.mode = 'code';\n    this.editorOptionsConfig.modes = ['code'];\n    this.editorOptionsReturnTemplate = new JsonEditorOptions();\n    this.editorOptionsReturnTemplate.mode = 'text';\n    this.editorOptionsReturnTemplate.modes = ['text'];\n\n    this.apiTemplate = (apiTemplateFile as any).default;\n    this.apiLabel = '';\n    this.configEditor.data = this.apiTemplate;\n  }\n\n  onApiNameChange(): void {\n    this.apiTemplate = this.configEditor.get() as any;\n    this.apiTemplate.label = this.apiLabel;\n    this.configEditor.data = this.apiTemplate;\n    this.apiConfiguration = this.configEditor.get();\n  }\n\n  onJSONChange(): void {\n    this.apiTemplate = this.configEditor.get() as any;\n  }\n\n  save(): void {\n    const config = this.configEditor.get();\n    this.connection.addNewApi(config).toPromise().then(\n        () => {\n          this.openSnackBar('Saved');\n        },\n        (error) => {\n          this.openSnackBar('Unable to add new service');\n        }\n    );\n  }\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {duration: 2000});\n  }\n\n}\n","<p>\n    <b>Create a new custom api configuration</b>\n</p>\n<mat-form-field>\n    <mat-label>api label</mat-label>\n    <input matInput [(ngModel)]=\"apiLabel\" (ngModelChange)=\"onApiNameChange()\">\n</mat-form-field>\n<mat-tab-group class=\"group-container\" (selectedIndexChange)=\"onJSONChange()\">\n    <mat-tab label=\"Configuration File\">\n        <json-editor [options]=\"editorOptionsConfig\" [data]=\"apiTemplate\"></json-editor>\n    </mat-tab>\n</mat-tab-group>\n\n\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"apiConfiguration\" (click)=\"save()\" [disabled]=\"!apiConfiguration\">Create</button>\n</mat-dialog-actions>\n\n\n","import {ChangeDetectorRef, Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {GsbService} from '../../../_services/gsb.service';\nimport {MatStepper} from '@angular/material/stepper';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {MappingTableComponent} from '../builder/mapping-table/mapping-table.component';\nimport {LeaderLineAlignment} from '../../../_classes/gsb/lines';\nimport {MappingViewComponent} from './mapping-view/mapping-view.component';\nimport {ISuggestionEntry} from '../../../_interfaces/gsb/suggestion';\n\n@Component({\n    selector: 'app-mapping-suggestion-tool',\n    templateUrl: './mapping-suggestion-tool.component.html',\n    styleUrls: ['./mapping-suggestion-tool.component.scss']\n})\nexport class MappingSuggestionToolComponent implements OnInit {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    @Output() finishedEvent = new EventEmitter<any>();\n\n    constructor(public gsbService: GsbService, public cdr: ChangeDetectorRef, private _dialog: MatDialog) {\n    }\n\n    ngOnInit(): void {}\n\n    log() {\n        console.log(this.gsbService.suggestionContainer);\n    }\n\n    deleteSuggestion(index: number) {\n        this.gsbService.suggestionContainer.suggestions.splice(index, 1);\n    }\n\n}\n","<mat-horizontal-stepper #stepper>\n    <ng-container *ngFor=\"let suggestionMapping of gsbService.suggestionContainer.suggestions; let i=index\">\n        <mat-step>\n            <div class=\"header\">\n                <button mat-raised-button matStepperPrevious>Previous</button>\n                <mat-progress-bar [value]=\"((stepper.selectedIndex +1) / (gsbService.suggestionContainer.suggestions.length+1))*100\"></mat-progress-bar>\n                <ng-container *ngIf=\"stepper.selectedIndex == stepper.steps.length-1\">\n                    <button mat-raised-button color=\"warn\" (click)=\"finishedEvent.emit()\">Finish</button>\n                </ng-container>\n                <ng-container *ngIf=\"stepper.selectedIndex != stepper.steps.length-1\">\n                    <button mat-raised-button matStepperNext color=\"primary\">Next</button>\n                </ng-container>\n            </div>\n            <app-mapping-suggestion [suggestionMapping]=\"suggestionMapping\"></app-mapping-suggestion>\n            <div class=\"footer\">\n                <button mat-raised-button color=\"warn\" (click)=\"deleteSuggestion(i)\">Delete</button>\n            </div>\n        </mat-step>\n    </ng-container>\n</mat-horizontal-stepper>\n","import * as THREE from 'three';\n\nexport class PickHelper {\n    private raycaster: THREE.Raycaster;\n    private pickedObject;\n    private pickedObjectSavedColor;\n\n    constructor(layer: number = 0) {\n        this.raycaster = new THREE.Raycaster();\n        this.pickedObject = null;\n        this.pickedObjectSavedColor = 0;\n\n        this.raycaster.layers.set(layer);\n        this.raycaster.layers.enable(layer);\n    }\n\n    public pick(normalizedPosition, scene, camera): void {\n        // restore the color if there is a picked object\n        if (this.pickedObject) {\n            // this.pickedObject.material.emissive.setHex(this.pickedObjectSavedColor);\n            this.pickedObject.material.color.setHex(this.pickedObjectSavedColor);\n            this.pickedObject.children.forEach( (object) => object.visible = false );\n            this.pickedObject = undefined;\n\n        }\n\n        // cast a ray through the frustum\n        this.raycaster.setFromCamera(normalizedPosition, camera);\n        // get the list of objects the ray intersected\n        const intersectedObjects = this.raycaster.intersectObjects(scene.children);\n        // console.log(intersectedObjects);\n        if (intersectedObjects.length) {\n            // pick the first object. It's the closest one\n            this.pickedObject = intersectedObjects[0].object;\n            this.pickedObject.children.forEach( (object) => object.visible = true );\n            // save its color\n            // this.pickedObjectSavedColor = this.pickedObject.material.emissive.getHex();\n            this.pickedObjectSavedColor = this.pickedObject.material.color.getHex();\n            // set its emissive color to flashing red/yellow\n            // this.pickedObject.material.emissive.setHex(0xFF0000);\n            this.pickedObject.material.color.setHex(0xFF0000);\n        }\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport * as testWebEntity from '../../../assets/data/testEntities/apiEntity.json';\nimport {GsbService} from '../../_services/gsb.service';\n\n@Component({\n    selector: 'app-test',\n    templateUrl: './test.component.html',\n    styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n    testJson: any;\n\n    constructor(public gsbService: GsbService) {\n    }\n\n    ngOnInit(): void {\n      this.gsbService.debugMode();\n    }\n\n}\n","<app-mapping-suggestion-tool></app-mapping-suggestion-tool>\n","export class Metric {\n    private _name: string;\n    private _value: number;\n    private _metrics;\n\n    constructor(name: string, value: number) {\n        this._name = name;\n        this._value = value;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    get value(): number {\n        return this._value;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {IApi, IApisOverview, IWebserviceInformationShort, IWebservicesOverview} from '../../../_interfaces';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {WebserviceInformationComponent} from '../../webservices/webservice-information/webservice-information.component';\nimport {ApiInformationComponent} from '../api-information/api-information.component';\nimport {WebserviceCreateFormComponent} from '../../webservices/webservice-create-form/webservice-create-form.component';\nimport {ApiCreateFormComponent} from '../api-create-form/api-create-form.component';\n\n@Component({\n    selector: 'app-api-overview',\n    templateUrl: './api-overview.component.html',\n    styleUrls: ['./api-overview.component.scss']\n})\nexport class ApiOverviewComponent implements OnInit {\n\n    displayedColumns: string[] = ['index', 'label', 'name', 'format', 'actions'];\n    apis: Array<IApi>;\n\n    constructor(private connection: BackendConnectionService, private _dialog: MatDialog) {\n\n    }\n\n    ngOnInit(): void {\n        this.loadApis();\n    }\n\n    loadApis() {\n        this.connection.getApis().then((res: IApisOverview) => {\n            this.apis = res.apis;\n        });\n    }\n\n    openApiInformation(api: IApi): void {\n        console.log(api);\n\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data = api;\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n\n        const dialogRef = this._dialog.open(ApiInformationComponent, dialogConfig).afterClosed().toPromise().then(() => this.loadApis());\n    }\n\n    openCreateApi(): void {\n        const dialogConfig = new MatDialogConfig();\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n        const dialogRef = this._dialog.open(ApiCreateFormComponent, dialogConfig);\n        dialogRef.afterClosed().toPromise().then(() => this.loadApis());\n\n    }\n}\n","<div class=\"main\">\n    <button mat-raised-button color=\"primary\" (click)=\"openCreateApi()\">Add API</button>\n    <table mat-table [dataSource]=\"apis\" class=\"mat-elevation-z8\">\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"index\">\n            <th mat-header-cell *matHeaderCellDef> No.</th>\n            <td mat-cell *matCellDef=\"let element\">{{apis.indexOf(element)}}</td>\n        </ng-container>\n\n        <!-- label Column -->\n        <ng-container matColumnDef=\"label\">\n            <th mat-header-cell *matHeaderCellDef>Label</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n        </ng-container>\n\n        <!-- name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- format Column -->\n        <ng-container matColumnDef=\"format\">\n            <th mat-header-cell *matHeaderCellDef>Format</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.format}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-raised-button color=\"primary\"  (click)=\"openApiInformation(element)\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"See details\">preview</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n","import * as THREE from 'three';\n\n// https://threejsfundamentals.org/threejs/lessons/threejs-cleanup.html\n\nexport class ResourceTracker {\n    private resources;\n\n    constructor() {\n        this.resources = new Set();\n    }\n\n    track(resource) {\n        if (!resource) {\n            return resource;\n        }\n\n        // handle children and when material is an array of materials or\n        // uniform is array of textures\n        if (Array.isArray(resource)) {\n            resource.forEach(res => this.track(res));\n            return resource;\n        }\n\n        if (resource.dispose || resource instanceof THREE.Object3D) {\n            this.resources.add(resource);\n        }\n        if (resource instanceof THREE.Mesh) {\n            this.track(resource.geometry);\n            this.track(resource.material);\n            this.track(resource.children);\n        } else if (resource instanceof THREE.Material) {\n            // We have to check if there are any textures on the material\n            for (const value of Object.values(resource)) {\n                if (value instanceof THREE.Texture) {\n                    this.track(value);\n                }\n            }\n        }\n        return resource;\n    }\n\n    untrack(resource) {\n        this.resources.delete(resource);\n    }\n\n    dispose() {\n        for (const resource of this.resources) {\n            if (resource instanceof THREE.Object3D) {\n                if (resource.parent) {\n                    resource.parent.remove(resource);\n                }\n            }\n            if (resource.dispose) {\n                resource.dispose();\n            }\n        }\n        this.resources.clear();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alignment-viewer',\n  templateUrl: './alignment-viewer.component.html',\n  styleUrls: ['./alignment-viewer.component.scss']\n})\nexport class AlignmentViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>alignment-viewer works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {IWebservicesOverview, IWebserviceInformationShort} from '../../../_interfaces';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {WebserviceInformationComponent} from '../webservice-information/webservice-information.component';\nimport {FormGroup, Validators} from '@angular/forms';\nimport {WebserviceCreateFormComponent} from '../webservice-create-form/webservice-create-form.component';\n\n@Component({\n    selector: 'app-webservices-overview',\n    templateUrl: './webservices-overview.component.html',\n    styleUrls: ['./webservices-overview.component.scss']\n})\nexport class WebservicesOverviewComponent implements OnInit {\n    // displayedColumns: string[] = ['index', 'endpoint', 'path', 'status', 'actions'];\n    displayedColumns: string[] = ['index', 'name', 'path', 'status', 'actions'];\n    webservices: Array<IWebserviceInformationShort>;\n\n\n    constructor(private _connection: BackendConnectionService, private _dialog: MatDialog) {\n\n    }\n\n    ngOnInit(): void {\n        this.reloadData();\n    }\n\n    openWebserviceInformation(name: string): void {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data = name;\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n\n        const dialogRef = this._dialog.open(WebserviceInformationComponent, dialogConfig);\n        dialogRef.afterClosed().toPromise().then(() => this.reloadData());\n    }\n\n    openCreateWebservice(): void {\n        const dialogConfig = new MatDialogConfig();\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n        const dialogRef = this._dialog.open(WebserviceCreateFormComponent, dialogConfig);\n        dialogRef.afterClosed().toPromise().then(() => this.reloadData());\n\n    }\n\n    reloadData(): void {\n        this._connection.getWebservices().subscribe((res: IWebservicesOverview) => {\n            this.webservices = res.webservices;\n        });\n    }\n}\n","<div class=\"main\">\n    <button mat-raised-button color=\"primary\" (click)=\"openCreateWebservice()\">Add Webservice</button>\n    <table mat-table [dataSource]=\"webservices\" class=\"mat-elevation-z8\">\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"index\">\n            <th mat-header-cell *matHeaderCellDef>No.</th>\n            <td mat-cell *matCellDef=\"let element\">{{webservices.indexOf(element)}}</td>\n        </ng-container>\n\n        <!-- name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Label</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- path Column -->\n        <ng-container matColumnDef=\"path\">\n            <th mat-header-cell *matHeaderCellDef>Path</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.path}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef>Status</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <mat-icon *ngIf=\"element.status == 'offline'\" color=\"warn\" aria-label=\"true\">cloud_off</mat-icon>\n                <mat-icon *ngIf=\"element.status == 'online'\" color=\"primary\" aria-label=\"true\">cloud_queue</mat-icon>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-raised-button color=\"primary\" (click)=\"openWebserviceInformation(element.name)\" >\n                    <mat-icon aria-hidden=\"false\" aria-label=\"See details\">preview</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n    transform(wholeText: string, searchQuery: string): string {\n        if (!searchQuery) {\n            return wholeText;\n        }\n        const re = new RegExp(searchQuery, 'gi');\n        return wholeText.replace(re, '<mark>$&</mark>');\n    }\n\n}\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {ILocalDatabaseShortInfo, ILocalDatabasesOverview} from '../../../_interfaces';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\nimport * as ace from 'ace-builds';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as webserviceTemplateFile from '../../../../assets/templates/webservice_template.json';\n\n@Component({\n    selector: 'app-webservice-create-form',\n    templateUrl: './webservice-create-form.component.html',\n    styleUrls: ['./webservice-create-form.component.scss']\n})\nexport class WebserviceCreateFormComponent implements OnInit, AfterViewInit {\n\n    webserviceConfiguration: any;\n    webserviceLabel: string;\n    webserviceTemplate: any;\n\n    @ViewChild('editor') private editor: ElementRef<HTMLElement>;\n    private aceEditor;\n\n    @ViewChild(JsonEditorComponent)\n    configEditor: JsonEditorComponent;\n    public editorOptionsConfig: JsonEditorOptions;\n    public editorOptionsReturnTemplate: JsonEditorOptions;\n    public returnTemplate = '';\n\n    viewAsString = false;\n\n    databases: Array<ILocalDatabaseShortInfo>;\n\n    constructor(private connection: BackendConnectionService, private _snackBar: MatSnackBar) {\n        this.connection.getDatabases().then((res: ILocalDatabasesOverview) => {\n            this.databases = res.databases;\n        });\n    }\n\n    ngOnInit(): void {\n        // Init jsonEdeitor for configuration file\n        this.editorOptionsConfig = new JsonEditorOptions();\n        this.editorOptionsConfig.mode = 'code';\n        this.editorOptionsConfig.modes = ['code'];\n\n        this.editorOptionsReturnTemplate = new JsonEditorOptions();\n        this.editorOptionsReturnTemplate.mode = 'text';\n\n        this.editorOptionsReturnTemplate.modes = ['text'];\n        this.webserviceTemplate = (webserviceTemplateFile as any).default;\n        this.webserviceLabel = '';\n    }\n\n    ngAfterViewInit(): void {\n        // Init ace editor for return template\n        ace.config.set('fontSize', '14px');\n        ace.config.set('basePath', 'https://unpkg.com/ace-builds@1.4.13/src-noconflict');\n\n        this.aceEditor = ace.edit(this.editor.nativeElement);\n        // aceEditor.setTheme('ace/theme/twilight');\n        this.aceEditor.session.setMode('ace/mode/ftl');\n        this.aceEditor.session.setValue('{}');\n        this.aceEditor.on('change', () => {\n            this.onReturnTemplateChange();\n        });\n    }\n\n    onReturnTemplateChange(): void {\n        this.returnTemplate = this.aceEditor.session.getValue();\n    }\n\n    onWebserviceNameChange(): void {\n        this.webserviceTemplate = this.configEditor.get() as any;\n        this.webserviceTemplate.webservice = '/' + this.webserviceLabel + '/{pathname}';\n        this.webserviceTemplate.returnTemplate = '/' + this.webserviceLabel + '/' + this.webserviceLabel + '.json.ftl';\n        this.configEditor.data = this.webserviceTemplate;\n        this.webserviceConfiguration = this.configEditor.get();\n    }\n\n    onJSONChange(): void {\n        this.webserviceTemplate = this.configEditor.get() as any;\n    }\n\n    onValueChange(): void {\n        this.configEditor.data = this.webserviceTemplate;\n        this.webserviceConfiguration = this.configEditor.get();\n    }\n\n    save(): void {\n        const config = this.configEditor.get();\n        const returnTemplate = this.aceEditor.session.getValue();\n        this.connection.addNewWebservice(this.webserviceLabel, config, returnTemplate).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to add new service');\n            }\n        );\n    }\n\n    openSnackBar(message: string) {\n        this._snackBar.open(message, '', {duration: 2000});\n    }\n}\n","<script src=\"../../databases/db-create-form/db-create-form.component.ts\"></script><p>\n    <b>Create a new custom webservice</b>\n</p>\n<mat-tab-group class=\"group-container\" (selectedIndexChange)=\"onJSONChange()\">\n    <mat-tab label=\"Configuration Form\">\n        <div class=\"form-container\">\n            <mat-form-field>\n                <mat-label>webservice label</mat-label>\n                <!--                <mat-hint>short name without whitespace</mat-hint>-->\n                <input matInput [(ngModel)]=\"webserviceLabel\" (ngModelChange)=\"onWebserviceNameChange()\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>webservice-path</mat-label>\n                <input matInput [(ngModel)]=\"webserviceTemplate.webservice\" (ngModelChange)=\"onValueChange()\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>errorType</mat-label>\n                <!--                <mat-hint>Choose the error type</mat-hint>-->\n                <mat-select [(ngModel)]=\"webserviceTemplate.errorType\" (ngModelChange)=\"onValueChange()\">\n                    <mat-option value=\"jsonWithStatus\">jsonWithStatus</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>type</mat-label>\n                <mat-select [(ngModel)]=\"webserviceTemplate.type\" (ngModelChange)=\"onValueChange()\">\n                    <mat-option value=\"precise\">precise</mat-option>\n                    <mat-option value=\"fuzzy\">fuzzy</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>latency</mat-label>\n                <!--                <mat-hint>Time per request in s</mat-hint>-->\n                <input matInput  [(ngModel)]=\"webserviceTemplate.latency\"\n                       (ngModelChange)=\"onValueChange()\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>maxRequestsPerMinute</mat-label>\n                <input matInput  [(ngModel)]=\"webserviceTemplate.maxRequestsPerMinute\"\n                       (ngModelChange)=\"onValueChange()\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>maxRequests</mat-label>\n                <input matInput  [(ngModel)]=\"webserviceTemplate.maxRequests\"\n                       (ngModelChange)=\"onValueChange()\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>returnTemplate</mat-label>\n                <input matInput [(ngModel)]=\"webserviceTemplate.returnTemplate\" (ngModelChange)=\"onValueChange()\" disabled>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>database</mat-label>\n                <mat-select [(ngModel)]=\"webserviceTemplate.db\" (ngModelChange)=\"onValueChange()\">\n                    <mat-option value=\"None\">None</mat-option>\n                    <mat-option *ngFor=\"let entry of databases\"\n                                value=\"{{entry.label}}\">{{entry.label}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Configuration File\">\n        <json-editor [options]=\"editorOptionsConfig\" [data]=\"webserviceTemplate\"></json-editor>\n    </mat-tab>\n    <mat-tab label=\"Return Template\">\n        <div #editor style=\"width: 70vw; height: 70vh;\"></div>\n    </mat-tab>\n</mat-tab-group>\n\n\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"\" (click)=\"save()\"\n            [disabled]=\"!webserviceConfiguration\">Create\n    </button>\n</mat-dialog-actions>\n\n","import {MappingType} from '../../models';\nimport {ElementRef, Renderer2} from '@angular/core';\nimport {Utils} from '../Utils';\nimport {utils} from 'protractor';\nimport {GSBAlignment, GSBMapping} from '../../_interfaces/gsb/alignment';\n\ndeclare var LeaderLine: any; // used to access class of npm package leader-lines\n\nexport class LeaderLineMapping {\n    private _localElems: Map<string, HTMLElement>; // stores a map with id(md5 hash) and HTML element reference\n    private _webElems: Map<string, HTMLElement>; // stores a map with id(md5 hash) and HTML element reference\n    private _type: MappingType;\n    private _lines: Set<any>; // stores all LeaderLine instances\n    private renderer: Renderer2;\n\n    public constructor(type: MappingType,\n                       localElems: Map<string, HTMLElement> = new Map<string, HTMLElement>(),\n                       webElems: Map<string, HTMLElement> = new Map<string, HTMLElement>()) {\n        this._localElems = localElems;\n        this._webElems = webElems;\n        this._lines = new Set<any>();\n        this._type = type;\n    }\n\n    public static build(mapping: GSBMapping): LeaderLineMapping {\n        const localElems: Map<string, HTMLElement> = new Map<string, HTMLElement>();\n        const webElems: Map<string, HTMLElement> = new Map<string, HTMLElement>();\n\n        for (const localEntry of mapping.localEntries) {\n            const localElem: HTMLElement = document.getElementById(localEntry.hash);\n            localElems.set(localEntry.hash, localElem);\n        }\n\n        for (const webEntry of mapping.webEntries) {\n            const webElem: HTMLElement = document.getElementById(webEntry.hash);\n            webElems.set(webEntry.hash, webElem);\n        }\n\n        const newMapping: LeaderLineMapping = new LeaderLineMapping(mapping.type, localElems, webElems);\n\n        return newMapping;\n    }\n\n\n    /**\n     * Method sets the renderer.\n     * @param renderer - Renderer to use.\n     */\n    setRenderer(renderer: Renderer2): void {\n        this.renderer = renderer;\n    }\n\n    public addLocalElem(id: string, elem: HTMLElement) {\n        this._localElems.set(id, elem);\n    }\n\n    public addWebElem(id: string, elem: HTMLElement) {\n        this._webElems.set(id, elem);\n    }\n\n    public drawLines() {\n        this.deleteLines();\n        for (const localElem of this._localElems.values()) {\n            for (const webElem of this._webElems.values()) {\n                const line = new LeaderLine(\n                    localElem,\n                    webElem\n                );\n                line.setOptions({\n                    startSocket: 'right', endSocket: 'left', color: 'gray'\n                });\n\n                switch (this._type) {\n                    case MappingType.LocalToWeb:\n                        line.setOptions({\n                            startPlug: 'behind', endPlug: 'arrow1'\n                        });\n                        break;\n                    case MappingType.WebToLocal:\n                        line.setOptions({\n                            startPlug: 'arrow1', endPlug: 'behind'\n                        });\n                        break;\n                    case MappingType.Bidirectional:\n                        line.setOptions({\n                            startPlug: 'arrow1', endPlug: 'arrow1'\n                        });\n                        break;\n                }\n\n                this._lines.add(line);\n                localElem.classList.add('used');\n                webElem.classList.add('used');\n                line.position();\n            }\n        }\n    }\n\n    public deleteLines(): void {\n        for (const line of this._lines) {\n            line.remove();\n        }\n        this._lines.clear();\n    }\n\n    public async updateLines(): Promise<void> {\n        await Utils.delay(10);\n        for (const line of this._lines) {\n            if (line.start.classList.contains('hide') || line.end.classList.contains('hide')) {\n                line.hide('none');\n            } else {\n                line.show();\n            }\n            line.position();\n        }\n    }\n\n    /**\n     * Method sets the color of the line object's line.\n     * @param color - Color to set.\n     * @private\n     */\n    private setLineColor(color: string) {\n        for (const line of this._lines) {\n            line.setOptions({\n                color\n            });\n        }\n    }\n\n    /**\n     * Method sets the type of the mapping.\n     * @private\n     * @param type\n     */\n    private setMappingType(type: MappingType) {\n        this._type = type;\n        this.drawLines();\n    }\n\n    get localElems(): Map<string, HTMLElement> {\n        return this._localElems;\n    }\n\n    get webElems(): Map<string, HTMLElement> {\n        return this._webElems;\n    }\n\n    get type(): MappingType {\n        return this._type;\n    }\n\n    get lines(): Set<any> {\n        return this._lines;\n    }\n}\n\nexport class LeaderLineAlignment {\n\n    private readonly _mappings: Set<LeaderLineMapping>;\n    private renderer: Renderer2;\n\n    constructor(render: Renderer2) {\n        this._mappings = new Set<LeaderLineMapping>();\n        this.renderer = render;\n    }\n\n    get mappings(): Set<LeaderLineMapping> {\n        return this._mappings;\n    }\n\n    public static build(alignment: GSBAlignment, render: Renderer2): LeaderLineAlignment {\n        const leaderLine = new LeaderLineAlignment(render);\n        for (const mapping of alignment.mappings) {\n            const localElems: Map<string, HTMLElement> = new Map<string, HTMLElement>();\n            const webElems: Map<string, HTMLElement> = new Map<string, HTMLElement>();\n\n            for (const localEntry of mapping.localEntries) {\n                const localElem: HTMLElement = document.getElementById(localEntry.hash);\n\n                localElems.set(localEntry.hash, localElem);\n            }\n\n            for (const webEntry of mapping.webEntries) {\n                const webElem: HTMLElement = document.getElementById(webEntry.hash);\n                webElems.set(webEntry.hash, webElem);\n            }\n\n            const newMapping: LeaderLineMapping = new LeaderLineMapping(mapping.type, localElems, webElems);\n\n            leaderLine.addMapping(newMapping, false);\n        }\n\n        return leaderLine;\n    }\n\n    addMapping(mapping: LeaderLineMapping, draw: boolean = false): void {\n        this._mappings.add(mapping);\n        mapping.setRenderer(this.renderer);\n        if (draw) {\n            mapping.drawLines();\n        }\n    }\n\n    addGSBMapping(mapping: GSBMapping): void {\n        const newMapping: LeaderLineMapping = LeaderLineMapping.build(mapping);\n        this.addMapping(newMapping);\n    }\n\n    deleteMapping(): void {\n\n    }\n\n    drawLines(): void {\n        for (const mapping of this._mappings) {\n            mapping.drawLines();\n        }\n    }\n\n    updateLines(): void {\n        for (const mapping of this._mappings) {\n            mapping.updateLines();\n        }\n    }\n\n    hideLines(): void {\n        for (const mapping of this._mappings) {\n            for (const line of mapping.lines) {\n                line.hide('none');\n                line.position();\n            }\n        }\n    }\n\n    showLines(): void {\n        this.updateLines();\n    }\n\n    deleteLines(): void {\n        for (const mapping of this._mappings) {\n            mapping.deleteLines();\n        }\n    }\n\n    removeMapping(mapping: LeaderLineMapping): void {\n        this.mappings.delete(mapping);\n        this.deleteLines();\n        this.drawLines();\n        Utils.delay(50);\n        this.updateLines();\n    }\n}\n\n","export * from './AlignmentCube/IAlignment';\nexport * from './settings/IWebserviceOverview';\nexport * from './settings/IWebserviceConfiguration';\nexport * from './settings/IDatabase';\nexport * from './settings/IApis';\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AlignmentCubeService} from '../../engine/alignment-cube.service';\n\n@Component({\n    selector: 'app-ui-infobar-bottom',\n    templateUrl: './ui-infobar-bottom.component.html'\n})\nexport class UiInfobarBottomComponent implements OnInit {\n\n    public constructor(public engineService: AlignmentCubeService) {\n    }\n\n    public ngOnInit(): void {\n    }\n\n}\n","<p>\n  ui-infobar-bottom works!\n</p>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {\n    IApi,\n    ILocalDatabase,\n    ILocalDatabaseSchema,\n    ILocalDatabaseShortInfo,\n    IWebserviceConfiguration,\n    IWebserviceDetails\n} from '../_interfaces';\nimport {GSBMapping} from '../_interfaces/gsb/alignment';\nimport {IFinalAlignment} from '../_interfaces/gsb/suggestion';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackendConnectionService {\n\n    constructor(private httpClient: HttpClient) {\n    }\n\n    async getApis() {\n        return await this.httpClient.get(environment.baseUrl + environment.apiManagerEndpoint).toPromise();\n    }\n\n    async getWebserviceConfiguration(name: string) {\n        const body = {\n            mode: 'webserviceInformation',\n            name\n        };\n        return this.httpClient.post<IWebserviceDetails>(environment.baseUrl + environment.webserviceManagerEndpoint, body).toPromise();\n    }\n\n    async getLocalDatabaseData(dbName: string) {\n        let queryParams = new HttpParams();\n        queryParams = queryParams.append('label', dbName);\n        return await this.httpClient.get<ILocalDatabase>(\n            environment.baseUrl + environment.dbManagerEndpoint,\n            {params: queryParams}\n        ).toPromise();\n    }\n\n    async getWebDatabaseData(apiName: string): Promise<IApi> {\n        let queryParams = new HttpParams();\n        queryParams = queryParams.append('label', apiName);\n        return await this.httpClient.get<IApi>(\n            environment.baseUrl + environment.apiManagerEndpoint,\n            {params: queryParams}\n        ).toPromise<IApi>();\n    }\n\n    getWebEntity(apiName: string, value: string, regex: any[]) {\n\n        const body = {\n            label: apiName,\n            value,\n            regex\n        };\n\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.apiCallEndpoint,\n            body\n        );\n    }\n\n    // Databases\n    async getDatabases() {\n        return await this.httpClient.get(environment.baseUrl + environment.dbManagerEndpoint).toPromise();\n    }\n\n    getLocalDatabaseSchema(dbName: string): Observable<ILocalDatabaseSchema> {\n        let queryParams = new HttpParams();\n        queryParams = queryParams.append('label', dbName);\n        return this.httpClient.get<ILocalDatabaseSchema>(\n            environment.baseUrl + environment.dbSchemaEndpoint,\n            {params: queryParams}\n        );\n    }\n\n    getLocalEntity(dbName: string, predicate: string, inputType: string, limit: number) {\n        const body = {\n            label: dbName,\n            predicate,\n            inputType,\n            // inputType: 'https://dblp.org/rdf/schema-2020-07-01#Publication',\n            // inputType: 'http://example/com/crossref/Publication',\n            limit\n        };\n\n        return this.httpClient.post(\n            environment.baseUrl + environment.dbKnowledgeBaseEndpoint,\n            body\n        );\n    }\n\n    updateDatabase(oldDb, newDb) {\n        const body = {\n            mode: 'update',\n            db: oldDb,\n            newDb\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.dbManagerEndpoint,\n            body\n        );\n    }\n\n    deleteDatabase(label: string) {\n        const body = {\n            mode: 'delete',\n            label\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.dbManagerEndpoint,\n            body\n        );\n    }\n\n    addNewDatabase(config){\n        const body = {\n            mode: 'new',\n            db: config\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.dbManagerEndpoint,\n            body\n        );\n    }\n\n    // Webservices\n    getWebservices() {\n        return this.httpClient.get(environment.baseUrl + environment.webserviceManagerEndpoint);\n    }\n\n    addNewWebservice(label: string, configuration, returnTemplate: string) {\n        const body = {\n            name: label,\n            mode: 'new',\n            configuration,\n            returnTemplate\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.webserviceManagerEndpoint,\n            body\n        );\n    }\n\n    updateWebservice(label: string, configuration, returnTemplate: string) {\n        const lastIndex = configuration.returnTemplate.lastIndexOf('\\\\');\n        const returnTemplateName = configuration.returnTemplate.substring(lastIndex + 1);\n\n        const body = {\n            name: label,\n            mode: 'update',\n            configuration,\n            returnTemplate,\n            returnTemplateName\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.webserviceManagerEndpoint,\n            body\n        );\n    }\n\n    deleteWebservice(webserviceName) {\n        const body = {\n            mode: 'delete',\n            name: webserviceName\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.webserviceManagerEndpoint,\n            body\n        );\n    }\n\n    // APIs\n    updateApi(oldApi, newApi) {\n        const body = {\n            mode: 'update',\n            api: oldApi,\n            newApi\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.apiManagerEndpoint,\n            body\n        );\n    }\n\n    deleteApi(label: string) {\n        const body = {\n            mode: 'delete',\n            label\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.apiManagerEndpoint,\n            body\n        );\n    }\n\n    addNewApi(config){\n        const body = {\n            mode: 'new',\n            api: config\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.apiManagerEndpoint,\n            body\n        );\n    }\n\n    // GSB\n    postToFlatJson(json: any) {\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.apiToFlatJson,\n            json\n        );\n    }\n\n    postJsonDiff(original: any, modified: any) {\n        const body = {\n            original,\n            modified\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.jsonDiffEndpoint,\n            body\n        );\n    }\n\n    postSuggestions(mappings: GSBMapping[]) {\n        const body = {\n            mappings\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.gsbSuggestions,\n            body\n        );\n    }\n\n    postFinalAlignment(finalAlignment: IFinalAlignment) {\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.gsbFinalAlignment,\n            {webLabel: finalAlignment.webLabel, localLabel: finalAlignment.localLabel, alignment: finalAlignment}\n        );\n    }\n}\n","import {Md5} from 'ts-md5';\nimport {settings} from '../../assets/settings';\n\nexport class Utils {\n\n    /**\n     * Methods sets thread to sleep for an amount of milliseconds.\n     * @param ms - Amount of milliseconds to sleep.\n     * @private\n     */\n    public static delay(ms: number) {\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n\n    /**\n     * Returns md5 hash of string.\n     * @param str - String to hash.\n     */\n    getMd5Hash(str: string): string {\n        return Md5.hashStr(str);\n    }\n\n    addHashToLocalEntity(entity: any): void{\n        for (const entry of entity.valueList[0].fullKnowledge){\n            entry.hash = Md5.hashStr(entry.path + entry.value).toString();\n        }\n    }\n\n    addHashToWebEntity(entity: any): void{\n        console.log(entity);\n        for (const entry of entity.dictionary){\n            entry.hash = Md5.hashStr(entry.path + entry.value).toString();\n        }\n    }\n\n    formatApiPath(path: string): string {\n        const context: string[] = path.match(settings.regexApiSearch);\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexApiReplace, '');\n        }\n        // remove wildcards\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexApiReplaceWildcard, '');\n        }\n        return context.join();\n    }\n\n    formatLocalPathShort(path: string): string {\n        const context: string[] = path.match(settings.regexRelSearch);\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexRelReplace, '');\n        }\n        return context.join();\n    }\n\n    formatLocalPath(path: string): string {\n        const paths: string[] = path.split(', ');\n        const formattedPaths = [];\n        for (const subpath of paths){\n            formattedPaths.push(this.formatLocalPathShort(subpath));\n        }\n        return formattedPaths.join(' 🡢 ');\n    }\n\n    joinRelPaths(paths: string[]): string {\n        return paths.join(settings.joinSymbol);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {StartPageComponent} from './pages/start-page/start-page.component';\nimport {DataCubePageComponent} from './pages/data-cube-page/data-cube-page.component';\nimport {SettingPageComponent} from './pages/setting-page/setting-page.component';\nimport {AlignmentSelectorComponent} from './_components/alignment-cube/alignment-selector';\nimport {SchemaComponent} from './pages/schema-page/schema.component';\nimport {WebservicesOverviewComponent} from './_components/webservices/webservices-overview/webservices-overview.component';\nimport {GoldStandardBuilderComponent} from './_components/gold-standard-builder/gold-standard-builder.component';\nimport {BuilderComponent} from './_components/gold-standard-builder/builder/builder.component';\nimport {TestComponent} from './pages/test/test.component';\nimport {GsbPageComponent} from './pages/gsb-page/gsb-page.component';\nimport {AlignmentViewerPageComponent} from './pages/alignment-viewer-page/alignment-viewer-page.component';\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'start', pathMatch: 'full'},\n    {path: 'start', component: StartPageComponent},\n    {path: 'dataCube', component: DataCubePageComponent},\n    {path: 'settings', component: SettingPageComponent},\n    {path: 'currentTest', component: AlignmentSelectorComponent},\n    {path: 'schema', component: SchemaComponent},\n    {path: 'goldStandardBuilder', component: GoldStandardBuilderComponent},\n    {path: 'gsbPage', component: GsbPageComponent},\n    {path: 'webservicesOverview', component: WebservicesOverviewComponent},\n    {path: 'test', component: BuilderComponent},\n    {path: 'testPage', component: TestComponent},\n    {path: 'viewer', component: AlignmentViewerPageComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import * as THREE from 'three';\nimport {LineSegments, OrthographicCamera, PerspectiveCamera, Scene} from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {ElementRef, Injectable, NgZone, OnDestroy} from '@angular/core';\nimport {CSS2DRenderer} from 'three/examples/jsm/renderers/CSS2DRenderer';\n\nimport {ViewMode} from '../../../models';\nimport {PickHelper, ResourceTracker, SceneLoader} from '../../../_classes/threeJsHelper';\nimport {AlignmentContainer} from '../../../_classes/alignment';\nimport {PathFormatterService} from '../../../_services';\n\n@Injectable({providedIn: 'root'})\nexport class AlignmentCubeService implements OnDestroy {\n\n    public constructor(private ngZone: NgZone, public labelFormatter: PathFormatterService) {\n        this.pickPosition = {x: 0, y: 0};\n        this.cubeTracker = new ResourceTracker();\n        this.resTracker = new ResourceTracker();\n        this.labelTracker = new ResourceTracker();\n    }\n\n    // states\n    private _viewMode: ViewMode;\n    private _selectedMetric: string;\n    showFullApiPath = true;\n    showFullRelationPath = true;\n\n    // variables\n    private rayCasterWorkingLayer = 1;\n    private cameraWidth = 10;\n    private frameId: number = null;\n\n    private _selectedAlignmentIndex = 0;\n    private _selectedApiPathIndex = 0;\n    private _selectedRelationPathLabelIndex = 0;\n\n    // Data\n    private _alignmentContainer: AlignmentContainer;\n    private sceneLoader: SceneLoader;\n\n    // THREE basic components\n    private canvas: HTMLCanvasElement;\n    private renderer: THREE.WebGLRenderer;\n    private labelRenderer: CSS2DRenderer;\n    private _scene: THREE.Scene;\n    private light: THREE.Light;\n\n    // Helpers\n    private _orbitControls: OrbitControls;\n    private gridHelper: THREE.GridHelper;\n    private cameraHelper: THREE.CameraHelper;\n    private axisHelper: THREE.AxesHelper;\n\n    // Cameras\n    private cameraPersp: THREE.PerspectiveCamera;\n    private cameraOrtho: THREE.OrthographicCamera;\n    private _currentCamera: THREE.PerspectiveCamera | THREE.OrthographicCamera;\n\n    // 3D Objects\n    private _outlineBox: THREE.LineSegments;\n\n    // Picking Helper\n    private pickHelper: PickHelper;\n    private pickPosition: { x, y };\n\n    // Ressource Tracker\n    private cubeTracker: ResourceTracker;\n    private resTracker: ResourceTracker;\n    private labelTracker: ResourceTracker;\n\n    public ngOnDestroy(): void {\n        if (this.frameId != null) {\n            cancelAnimationFrame(this.frameId);\n        }\n    }\n\n    public initialize(canvas: ElementRef<HTMLCanvasElement>): void {\n        // The first step is to get the reference of the canvas element from our HTML document\n        this._viewMode = ViewMode.View3D;\n\n        this.canvas = canvas.nativeElement;\n\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const aspect = width / height;\n\n        // renderer\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: this.canvas,\n            alpha: true,    // transparent background\n            antialias: true // smooth edges\n        });\n        this.renderer.setSize(width, height);\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n\n        // labelrender\n        this.labelRenderer = new CSS2DRenderer();\n        this.labelRenderer.setSize(width, height);\n\n        document.getElementById('engine-wrapper-label').appendChild(this.labelRenderer.domElement);\n\n        // create the scene\n        this._scene = new THREE.Scene();\n\n        // cameras\n        this.cameraPersp = new THREE.PerspectiveCamera(75, aspect, 0.01, 100);\n        this.cameraOrtho = new THREE.OrthographicCamera(\n            -this.cameraWidth * aspect, this.cameraWidth * aspect, this.cameraWidth, -this.cameraWidth, 0.01, 100\n        );\n        this._currentCamera = this.cameraPersp;\n        this._currentCamera.position.set(3, 5, 15);\n        this._scene.add(this._currentCamera);\n\n        // soft white light\n        this.light = new THREE.AmbientLight(0xFFFFFF, 1);\n        this.light.position.set(-10, 0, 10);\n        const light2 = new THREE.DirectionalLight(0xFFFFFF, 0.8);\n        light2.position.set(0, 100, 10);\n        this._scene.add(this.light);\n        this._scene.add(light2);\n\n        // controls\n        this._orbitControls = new OrbitControls(this._currentCamera, this.labelRenderer.domElement);\n        this._orbitControls.minDistance = 5;\n        this._orbitControls.maxDistance = 50;\n\n        this.pickHelper = new PickHelper(this.rayCasterWorkingLayer);\n        this.clearPickPosition();\n    }\n\n    /**\n     * Loads the scene for the specified alignment data\n     *\n     * @param alignmentContainer - Alignment data to visualize\n     */\n    public loadSceneForAlignmentContainer(alignmentContainer: AlignmentContainer) {\n        this._alignmentContainer = alignmentContainer;\n\n        if (this.sceneLoader === undefined) {\n            this.sceneLoader = new SceneLoader(this, this.labelFormatter);\n        }\n\n        if (this._selectedMetric === undefined) {\n            this._selectedMetric = alignmentContainer.metricsNames.values().next().value;\n        }\n\n        switch (this._viewMode) {\n            case ViewMode.View2DAlignment:\n                this.sceneLoader.load2DSceneAlignment();\n                break;\n            case ViewMode.View3D:\n                this.sceneLoader.load3DScene();\n                break;\n            case ViewMode.View2DApi:\n                this.sceneLoader.load2DSceneApi();\n                break;\n            case ViewMode.View2DRelation:\n                this.sceneLoader.load2DSceneRelation();\n                break;\n        }\n    }\n\n    /**\n     * Contains all functions for ongoing changes.\n     */\n    public animate(): void {\n        // We have to run this outside angular zones,\n        // because it could trigger heavy changeDetection cycles.\n        this.ngZone.runOutsideAngular(() => {\n            if (document.readyState !== 'loading') {\n                this.render();\n            } else {\n                window.addEventListener('DOMContentLoaded', () => {\n                    this.render();\n                });\n            }\n\n            // Desktop\n            window.addEventListener('mousemove', (event) => {\n                this.setPickPosition(event);\n            });\n            window.addEventListener('mouseout', () => {\n                this.clearPickPosition();\n            });\n            window.addEventListener('mouseleave', () => {\n                this.clearPickPosition();\n            });\n            // Mobile\n            window.addEventListener('touchstart', (event) => {\n                this.setPickPosition(event);\n            });\n            window.addEventListener('touchmove', (event) => {\n                this.setPickPosition(event);\n            });\n            window.addEventListener('touchcancel', () => {\n                this.clearPickPosition();\n            });\n            window.addEventListener('touchend', () => {\n                this.clearPickPosition();\n            });\n\n            window.addEventListener('resize', () => {\n                this.resize();\n            });\n        });\n    }\n\n    /**\n     * Contains all function for correct rendering the scene.\n     * @private\n     */\n    private render(): void {\n        this.frameId = requestAnimationFrame(() => {\n            this.render();\n        });\n\n        this.pickHelper.pick(this.pickPosition, this._scene, this._currentCamera);\n\n        this.renderer.clear();\n        this._currentCamera.lookAt(this._outlineBox.position);\n        this.renderer.render(this._scene, this._currentCamera);\n        this.labelRenderer.render(this._scene, this._currentCamera);\n    }\n\n    /**\n     * Methode to resize the canvas\n     * @private\n     */\n    private resize(): void {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const aspect = width / height;\n\n        this.cameraPersp.aspect = aspect;\n        this.cameraPersp.updateProjectionMatrix();\n\n        this.cameraOrtho.left = -this.cameraWidth * aspect;\n        this.cameraOrtho.right = this.cameraWidth * aspect;\n        this.cameraOrtho.updateProjectionMatrix();\n\n        this.renderer.setSize(width, height);\n        this.labelRenderer.setSize(width, height);\n    }\n\n    public resetOrbitControls() {\n        this._orbitControls.reset();\n        this._orbitControls.target.copy(this._outlineBox.position.clone());\n    }\n\n    public setOrbitControlPosition(): void {\n        this._currentCamera.lookAt(this._outlineBox.position);\n        this._orbitControls.update();\n    }\n\n    /**\n     * Swap camera between perspective and orthographic.\n     */\n    public changeCamera(): void {\n        const position = this._currentCamera.position.clone();\n\n        this._currentCamera = (this._currentCamera instanceof THREE.PerspectiveCamera) ? this.cameraOrtho : this.cameraPersp;\n        this._currentCamera.position.copy(position);\n\n        this._orbitControls.object = this._currentCamera;\n\n        this._currentCamera.lookAt(this._orbitControls.target.x, this._orbitControls.target.y, this._orbitControls.target.z);\n\n        this.resize();\n    }\n\n    public toggleGridHelper(size: number = 10, divisions: number = 10) {\n        if (this.gridHelper === null || this.gridHelper === undefined) {\n            this.gridHelper = new THREE.GridHelper(size, divisions);\n            this._scene.add(this.gridHelper);\n        } else {\n            this._scene.remove(this.gridHelper);\n            this.gridHelper = null;\n        }\n    }\n\n    public toggleAxisHelper(size: number = 10) {\n        if (this.axisHelper === null || this.axisHelper === undefined) {\n            this.axisHelper = new THREE.AxesHelper(size);\n            this._scene.add(this.axisHelper);\n        } else {\n            this._scene.remove(this.axisHelper);\n            this.axisHelper = null;\n        }\n    }\n\n    public toggleCameraHelper() {\n        if (this.cameraHelper === null || this.cameraHelper === undefined) {\n            if (this._currentCamera instanceof THREE.PerspectiveCamera) {\n                this.cameraHelper = new THREE.CameraHelper(this.cameraOrtho);\n            } else {\n                this.cameraHelper = new THREE.CameraHelper(this.cameraPersp);\n            }\n            this._scene.add(this.cameraHelper);\n        } else {\n            this._scene.remove(this.cameraHelper);\n            this.cameraHelper = null;\n        }\n    }\n\n    /**\n     * Picker Functions\n     */\n    public getCanvasRelativePosition(event) {\n        const rect = this.canvas.getBoundingClientRect();\n        return {\n            x: (event.clientX - rect.left) * this.canvas.width / rect.width,\n            y: (event.clientY - rect.top) * this.canvas.height / rect.height,\n        };\n    }\n\n    public setPickPosition(event): void {\n        const pos = this.getCanvasRelativePosition(event);\n        this.pickPosition.x = (pos.x / this.canvas.width) * 2 - 1;\n        this.pickPosition.y = (pos.y / this.canvas.height) * -2 + 1;  // note we flip Y\n    }\n\n    public clearPickPosition(): void {\n        // unlike the mouse which always has a position\n        // if the user stops touching the screen we want\n        // to stop picking. For now we just pick a value\n        // unlikely to pick something\n        this.pickPosition.x = -100000;\n        this.pickPosition.y = -100000;\n    }\n\n    public clearScene() {\n        this.labelTracker.dispose();\n        this.cubeTracker.dispose();\n        this.resTracker.dispose();\n\n        this.sceneLoader.clearScene();\n    }\n\n    public reloadScene() {\n        this.clearScene();\n        this.loadSceneForAlignmentContainer(this.alignmentContainer);\n    }\n\n    public setMetric(metric: string) {\n        this._selectedMetric = metric;\n        this.reloadScene();\n    }\n\n    public removeAxisLabels(): void {\n        this.labelTracker.dispose();\n    }\n\n    public setShowApiFullPath(value: boolean) {\n        this.showFullApiPath = value;\n        this.reloadScene();\n    }\n\n    public setShowRelationFullPath(value: boolean) {\n        this.showFullRelationPath = value;\n        this.reloadScene();\n    }\n\n    public setSelectedDataSet(index: number) {\n        if (index >= 0 && index < this.alignmentContainer.alignments.length) {\n            this._selectedAlignmentIndex = index;\n            this.reloadScene();\n        }\n    }\n\n    public setSelectedApiLabel(index: number) {\n        if (index >= 0 && index < this.alignmentContainer.apiLabels.length) {\n            this._selectedApiPathIndex = index;\n            this.reloadScene();\n        }\n    }\n\n    public setSelectedRelationPathLabel(index: number) {\n        console.log(`${index} -> ${this.alignmentContainer.relationPathLabels[index].join()}`);\n\n        if (index >= 0 && index < this.alignmentContainer.relationPathLabels.length) {\n            console.log('Changed index to ' + index);\n            this._selectedRelationPathLabelIndex = index;\n            this.reloadScene();\n        }\n    }\n\n    public changeViewMode(mode: ViewMode) {\n        this._viewMode = mode;\n        this.reloadScene();\n    }\n\n    set alignmentContainer(model: AlignmentContainer) {\n        this._alignmentContainer = model;\n    }\n\n    get alignmentContainer(): AlignmentContainer {\n        return this._alignmentContainer;\n    }\n\n    get viewMode(): ViewMode {\n        return this._viewMode;\n    }\n\n    get currentCamera(): PerspectiveCamera | OrthographicCamera {\n        return this._currentCamera;\n    }\n\n    get orbitControls(): OrbitControls {\n        return this._orbitControls;\n    }\n\n    get outlineBox(): LineSegments {\n        return this._outlineBox;\n    }\n\n    set outlineBox(value: LineSegments) {\n        this._outlineBox = value;\n    }\n\n    get selectedAlignmentIndex(): number {\n        return this._selectedAlignmentIndex;\n    }\n\n    get selectedApiPathIndex(): number {\n        return this._selectedApiPathIndex;\n    }\n\n    get selectedRelationPathLabelIndex(): number {\n        return this._selectedRelationPathLabelIndex;\n    }\n\n    get selectedMetric(): string {\n        return this._selectedMetric;\n    }\n\n    get scene(): Scene {\n        return this._scene;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {ILocalDatabaseShortInfo, ILocalDatabasesOverview} from '../../../_interfaces';\nimport {DbInformationComponent} from '../db-information/db-information.component';\nimport {ApiCreateFormComponent} from '../../apis/api-create-form/api-create-form.component';\nimport {DbCreateFormComponent} from '../db-create-form/db-create-form.component';\n\n@Component({\n    selector: 'app-databases-overview',\n    templateUrl: './databases-overview.component.html',\n    styleUrls: ['./databases-overview.component.scss']\n})\nexport class DatabasesOverviewComponent implements OnInit {\n    displayedColumns: string[] = ['index', 'label', 'path', 'identifierMap', 'actions'];\n    databases: Array<ILocalDatabaseShortInfo>;\n\n    constructor(private connection: BackendConnectionService, private _dialog: MatDialog) {\n        this.loadDBs();\n    }\n\n    ngOnInit(): void {\n    }\n\n    loadDBs() {\n        this.connection.getDatabases().then((res: ILocalDatabasesOverview) => {\n            this.databases = res.databases;\n        });\n    }\n\n    openDbInformation(db: ILocalDatabaseShortInfo): void {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data = db;\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n\n        const dialogRef = this._dialog.open(DbInformationComponent, dialogConfig).afterClosed().toPromise().then(\n            () => this.loadDBs()\n        );\n    }\n\n    openCreateDB(): void {\n        const dialogConfig = new MatDialogConfig();\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n        const dialogRef = this._dialog.open(DbCreateFormComponent, dialogConfig);\n        dialogRef.afterClosed().toPromise().then(() => this.loadDBs());\n\n    }\n\n}\n","<div class=\"main\">\n    <button mat-raised-button color=\"primary\" (click)=\"openCreateDB()\">Add Database</button>\n    <table mat-table [dataSource]=\"databases\" class=\"mat-elevation-z8\">\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"index\">\n                <th mat-header-cell *matHeaderCellDef> No.</th>\n                <td mat-cell *matCellDef=\"let element\">{{databases.indexOf(element)}}</td>\n            </ng-container>\n\n            <!-- label Column -->\n            <ng-container matColumnDef=\"label\">\n                <th mat-header-cell *matHeaderCellDef>Label</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n            </ng-container>\n\n            <!-- path Column -->\n            <ng-container matColumnDef=\"path\">\n                <th mat-header-cell *matHeaderCellDef>Path</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.path}} </td>\n            </ng-container>\n\n            <!-- identifierMap Column -->\n            <ng-container matColumnDef=\"identifierMap\">\n                <th mat-header-cell *matHeaderCellDef>Identifier Map</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.identifierMap}} </td>\n            </ng-container>\n\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef>Actions</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-raised-button color=\"primary\" (click)=\"openDbInformation(element)\">\n                        <mat-icon aria-hidden=\"false\" aria-label=\"See details\">preview</mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr [id]=\"i\" mat-row *matRowDef=\"let row; let i = index; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n","export * from './ui-infobar-bottom.component';\n","export * from './ui-infobar-top.component';\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {AlignmentCubeService} from './engine/alignment-cube.service';\nimport * as scigraph_v1 from '../../../assets/data/alignments/example/scigraph_v1.json';\nimport * as scigraph_v2 from '../../../assets/data/alignments/example/scigraph_v2.json';\nimport * as scigraph_v3 from '../../../assets/data/alignments/example/scigraph_v3.json';\nimport * as scigraph_v4 from '../../../assets/data/alignments/example/scigraph_v4.json';\nimport * as doris from '../../../assets/data/alignments/filipo/sample_dblp_sample_arxiv.json';\nimport * as filipo from '../../../assets/data/alignments/doris/sample_dblp_sample_arxiv_overlap.json';\nimport {IAlignment} from '../../_interfaces';\nimport {AlignmentContainer} from '../../_classes/alignment';\n\n// import alignmentArxiv from ''\n\n@Component({\n    selector: 'app-alignment-cube',\n    templateUrl: './alignment-cube.component.html',\n    styleUrls: ['./alignment-cube.component.scss']\n})\nexport class AlignmentCubeComponent implements OnInit {\n\n    @ViewChild('rendererCanvas', {static: true})\n    public rendererCanvas: ElementRef<HTMLCanvasElement>;\n\n    @ViewChild('labelRendererCanvas', {static: true})\n    public labelRendererCanvas: ElementRef<HTMLCanvasElement>;\n\n    selectedAlignments: IAlignment[];\n\n    alignmentModel: AlignmentContainer = new AlignmentContainer();\n\n    showAddAlignmentComponent: boolean;\n    animationStarted: boolean;\n\n\n    public constructor(public engServ: AlignmentCubeService) {\n    }\n\n    public ngOnInit(): void {\n        this.showAddAlignmentComponent = true;\n        this.animationStarted = false;\n        this.selectedAlignments = [];\n        this.engServ.initialize(this.rendererCanvas);\n    }\n\n    onAlignmentAdded(alignment: IAlignment): void {\n        this.alignmentModel.addAlignment(alignment);\n    }\n\n    public startAnimation() {\n        this.showAddAlignmentComponent = false;\n        this.animationStarted = true;\n\n        this.engServ.loadSceneForAlignmentContainer(this.alignmentModel);\n\n        this.engServ.animate();\n    }\n\n    public startAnimationExample() {\n        this.showAddAlignmentComponent = false;\n        this.animationStarted = true;\n\n        const sciV1: IAlignment = (scigraph_v1 as any).default;\n        const sciV2: IAlignment = (scigraph_v2 as any).default;\n        const sciV3: IAlignment = (scigraph_v3 as any).default;\n        const sciV4: IAlignment = (scigraph_v4 as any).default;\n\n        this.alignmentModel.addAlignment(sciV1);\n        this.alignmentModel.addAlignment(sciV2);\n        this.alignmentModel.addAlignment(sciV3);\n        this.alignmentModel.addAlignment(sciV4);\n\n        this.alignmentModel.sortApiLabels();\n        this.alignmentModel.sortRelationLabels();\n\n        this.engServ.loadSceneForAlignmentContainer(this.alignmentModel);\n\n        this.engServ.animate();\n    }\n\n    public startAnimationExample2Systems() {\n        this.showAddAlignmentComponent = false;\n        this.animationStarted = true;\n\n        const dorisAlignment: IAlignment = (doris as any).default;\n        const filipoAlignment: IAlignment = (filipo as any).default;\n\n        this.alignmentModel.addAlignment(filipoAlignment);\n        this.alignmentModel.addAlignment(dorisAlignment);\n\n        this.alignmentModel.sortApiLabels();\n        this.alignmentModel.sortRelationLabels();\n\n        this.engServ.loadSceneForAlignmentContainer(this.alignmentModel);\n\n        this.engServ.animate();\n    }\n}\n","<div class=\"h-100 d-flex flex-column align-items-center justify-content-center\" style=\"height: 100%\" *ngIf=\"showAddAlignmentComponent\">\n  <app-data-selector (newAlignmentAdded)=\"onAlignmentAdded($event)\"></app-data-selector>\n  <button mat-raised-button color=\"primary\" class=\"m-1\" (click)=\"startAnimation()\" [disabled]=\"alignmentModel.alignments.length < 1\">Generate AlignmentCube</button>\n  <button mat-raised-button color=\"primary\" class=\" m-1\" (click)=\"startAnimationExample()\">Generate Example 1 System</button>\n  <button mat-raised-button color=\"primary\" class=\" m-1\" (click)=\"startAnimationExample2Systems()\">Generate Example 2 Systems</button>\n<!--  <button mat-raised-button color=\"primary\" class=\" m-1\" (click)=\"startAnimationExample2Systems()\" disabled>Generate Example n:m Mapping</button>-->\n</div>\n\n<div [style.display]=\"animationStarted ? 'block' : 'none' \">\n  <app-ui [engineService]=\"engServ\" *ngIf=\"animationStarted\"></app-ui>\n\n  <div id=\"graph-frame\" class=\"graph-frame\">\n    <div id=\"engine-wrapper\" class=\"engine-wrapper\">\n      <canvas #rendererCanvas id=\"renderCanvas\"></canvas>\n    </div>\n    <div id=\"engine-wrapper-label\" class=\"engine-wrapper-label\">\n    </div>\n  </div>\n</div>\n\n\n\n\n","import {enableProdMode, ViewEncapsulation} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, [{\n  defaultEncapsulation: ViewEncapsulation.None\n}]).catch(err => console.log(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}