{"version":3,"sources":["webpack:///src/app/_components/alignment-cube/index.ts","webpack:///src/app/_components/navbar/navbar.component.ts","webpack:///src/app/_components/navbar/navbar.component.html","webpack:///src/app/models/MappingType.ts","webpack:///src/app/pages/gsb-page/gsb-page.component.ts","webpack:///src/app/pages/gsb-page/gsb-page.component.html","webpack:///src/app/_components/gold-standard-builder/builder/mapping-table/mapping-table.component.ts","webpack:///src/app/_components/gold-standard-builder/builder/mapping-table/mapping-table.component.html","webpack:///src/app/_components/alignment-cube/ui/index.ts","webpack:///src/app/_components/gold-standard-builder/gold-standard-builder.component.ts","webpack:///src/app/_components/gold-standard-builder/gold-standard-builder.component.html","webpack:///src/app/_classes/alignment/index.ts","webpack:///src/assets/settings.ts","webpack:///src/app/pages/alignment-viewer-page/alignment-viewer-page.component.ts","webpack:///src/app/pages/alignment-viewer-page/alignment-viewer-page.component.html","webpack:///src/app/models/ViewModeEnum.ts","webpack:///src/environments/environment.ts","webpack:///src/app/_classes/threeJsHelper/DataCubeCreator.ts","webpack:///src/app/_components/alignment-cube/ui/ui-sidebar-left/ui-sidebar-left.component.ts","webpack:///src/app/_components/alignment-cube/ui/ui-sidebar-left/ui-sidebar-left.component.html","webpack:///src/app/_classes/alignment/Alignment.ts","webpack:///src/app/_components/gold-standard-builder/db-selecector/db-selecector.component.ts","webpack:///src/app/_components/gold-standard-builder/db-selecector/db-selecector.component.html","webpack:///src/app/_components/alignment-cube/ui/ui-sidebar-left/index.ts","webpack:///src/app/_classes/threeJsHelper/ThreeJsUtil.ts","webpack:///src/app/_components/json-viewer/json-viewer.component.ts","webpack:///src/app/_components/json-viewer/json-viewer.component.html","webpack:///src/app/_services/index.ts","webpack:///src/app/_components/alignment-cube/alignment-selector/alignment-selector.component.ts","webpack:///src/app/_components/alignment-cube/alignment-selector/alignment-selector.component.html","webpack:///src/app/_classes/alignment/alignment-container.ts","webpack:///src/app/_components/gold-standard-builder/builder/builder.component.ts","webpack:///src/app/_components/gold-standard-builder/builder/builder.component.html","webpack:///src/app/_components/databases/db-information/db-information.component.ts","webpack:///src/app/_components/databases/db-information/db-information.component.html","webpack:///src/app/_components/alignment-cube/ui/ui-infobar-top/ui-infobar-top.component.ts","webpack:///src/app/_components/alignment-cube/ui/ui-infobar-top/ui-infobar-top.component.html","webpack:///src/app/_components/apis/api-information/api-information.component.ts","webpack:///src/app/_components/apis/api-information/api-information.component.html","webpack:///src/app/_services/path-formatter.service.ts","webpack:///src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-editor/mapping-editor.component.ts","webpack:///src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-editor/mapping-editor.component.html","webpack:///src/app/pages/data-cube-page/data-cube-page.component.ts","webpack:///src/app/pages/data-cube-page/data-cube-page.component.html","webpack:///src/app/_components/gold-standard-builder/final-alignmnet/final-alignment.component.ts","webpack:///src/app/_components/gold-standard-builder/final-alignmnet/final-alignment.component.html","webpack:///src/app/_components/alignment-cube/alignment-selector/index.ts","webpack:///src/app/_components/navbar/index.ts","webpack:///src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-view/mapping-view.component.ts","webpack:///src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-view/mapping-view.component.html","webpack:///src/app/_classes/threeJsHelper/index.ts","webpack:///src/app/_services/gsb.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion/mapping-suggestion.component.ts","webpack:///src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion/mapping-suggestion.component.html","webpack:///src/app/_classes/alignment/Mapping.ts","webpack:///src/app/pages/schema-page/schema.component.ts","webpack:///src/app/pages/schema-page/schema.component.html","webpack:///src/app/_classes/alignment/RelationPath.ts","webpack:///src/app/models/index.ts","webpack:///src/app/_components/alignment-cube/ui/ui.component.ts","webpack:///src/app/_components/alignment-cube/ui/ui.component.html","webpack:///src/app/_classes/threeJsHelper/LabelCreator.ts","webpack:///src/app/_classes/threeJsHelper/SceneLoader.ts","webpack:///src/app/_components/alignment-cube/ui/ui-sidebar-right/ui-sidebar-right.component.ts","webpack:///src/app/_components/alignment-cube/ui/ui-sidebar-right/ui-sidebar-right.component.html","webpack:///src/app/pages/setting-page/setting-page.component.ts","webpack:///src/app/pages/setting-page/setting-page.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/_components/databases/db-create-form/db-create-form.component.ts","webpack:///src/app/_components/databases/db-create-form/db-create-form.component.html","webpack:///src/app/pages/start-page/start-page.component.ts","webpack:///src/app/pages/start-page/start-page.component.html","webpack:///src/app/_components/webservices/webservice-information/webservice-information.component.ts","webpack:///src/app/_components/webservices/webservice-information/webservice-information.component.html","webpack:///src/app/_components/alignment-cube/ui/ui-sidebar-right/index.ts","webpack:///src/app/_components/apis/api-create-form/api-create-form.component.ts","webpack:///src/app/_components/apis/api-create-form/api-create-form.component.html","webpack:///src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion-tool.component.ts","webpack:///src/app/_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion-tool.component.html","webpack:///src/app/_classes/threeJsHelper/PickHelper.ts","webpack:///src/app/pages/test/test.component.ts","webpack:///src/app/pages/test/test.component.html","webpack:///src/app/_classes/alignment/Metric.ts","webpack:///src/app/_components/apis/api-overview/api-overview.component.ts","webpack:///src/app/_components/apis/api-overview/api-overview.component.html","webpack:///src/app/_classes/threeJsHelper/ResourceTracker.ts","webpack:///src/app/_components/alignment-viewer/alignment-viewer.component.ts","webpack:///src/app/_components/alignment-viewer/alignment-viewer.component.html","webpack:///src/app/_components/webservices/webservices-overview/webservices-overview.component.ts","webpack:///src/app/_components/webservices/webservices-overview/webservices-overview.component.html","webpack:///src/app/_pipes/highlight.pipe.ts","webpack:///src/app/_components/webservices/webservice-create-form/webservice-create-form.component.ts","webpack:///src/app/_components/webservices/webservice-create-form/webservice-create-form.component.html","webpack:///src/app/_classes/gsb/lines.ts","webpack:///src/app/_interfaces/index.ts","webpack:///src/app/_components/alignment-cube/ui/ui-infobar-bottom/ui-infobar-bottom.component.ts","webpack:///src/app/_components/alignment-cube/ui/ui-infobar-bottom/ui-infobar-bottom.component.html","webpack:///src/app/_services/backend-connection.service.ts","webpack:///src/app/_classes/Utils.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/_components/alignment-cube/engine/alignment-cube.service.ts","webpack:///src/app/_components/databases/db-overview/databases-overview.component.ts","webpack:///src/app/_components/databases/db-overview/databases-overview.component.html","webpack:///src/app/_components/alignment-cube/ui/ui-infobar-bottom/index.ts","webpack:///src/app/_components/alignment-cube/ui/ui-infobar-top/index.ts","webpack:///src/app/_components/alignment-cube/alignment-cube.component.ts","webpack:///src/app/_components/alignment-cube/alignment-cube.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["NavbarComponent","MappingType","GsbPageComponent","gsbService","MappingTableComponent","cdr","showFullPathLocal","utils","console","log","currentMappings","GoldStandardBuilderComponent","connection","dialog","_fb","_dialog","webDbSelected","localDbSelected","localSchemaLoaded","localSchemaError","useIdentifierMap","showFullPathWeb","localSortMethod","localEntityLoaded","localPathSearchValue","localValueSearchValue","webSortMethod","weblEntityLoaded","webPathSearchValue","webValueSearchValue","localHashIds","Set","localMappingEntries","webHashIds","webMappingEntries","webEntityModFinished","dbSelectionForm","group","localDatabase","required","webDatabase","identifier","value","disabled","inputType","getDatabases","then","res","databases","getApis","apis","dbName","get","setValue","disable","loadLocalDatabasesData","loadLocalDatabasesSchema","identifiers","getIdetifier","predicates","getPredicates","enable","getLocalDatabaseData","currentLocalDatabase","identifierMapContent","getLocalDatabaseSchema","subscribe","schema","currentLocalDatabaseSchema","error","errorMsg","getWebDatabaseData","currentWebDatabase","selectedIndex","debugMode","generateFinalAlignment","stepper","next","e","changeWebReducedResponse","builder","init","detectChanges","showLines","markNewPaths","index","finishedLoading","delay","hideLines","steps","completed","editable","startNewAlignment","clearLines","nextEntity","predicate","contains","structure","some","entry","subject","push","functionality","selectionChange","changeLocalDatabase","changeInputType","loadWebDatabasesData","startGSB","respChangeFinished","settings","regexRelSearch","regexRelReplace","joinSymbol","regexApiSearch","regexApiReplace","regexApiReplaceWildcard","rayCasterWorkingLayer","AlignmentViewerPageComponent","ViewMode","environment","production","version","baseUrl","webserviceManagerEndpoint","apiManagerEndpoint","apiCallEndpoint","apiToFlatJson","jsonDiffEndpoint","dbManagerEndpoint","dbSchemaEndpoint","dbKnowledgeBaseEndpoint","gsbSuggestions","gsbFinalAlignment","gsbEndpoint","webservicesEndpoint","DataCubeCreator","alignmentCubeService","alignmentModel","alignmentContainer","scene","cubeTracker","viewMode","alignments","forEach","alignment","View2DAlignment","selectedAlignmentIndex","mappings","mapping","apiPaths","apiPath","indexApi","apiLabels","findIndex","View2DApi","selectedApiPathIndex","relationPaths","rel","indexRel","getRelationPathIndex","paths","View2DRelation","selectedRelationPathLabelIndex","cube","createDataCube","add","track","dataSetName","metricName","metricValue","divElement","document","createElement","divElementDataSetName","textContent","divElementApi","showFullApiPath","match","replace","divElementRel","ulElement","path","liElement","showFullRelationPath","appendChild","divElementMetric","className","style","marginTop","zIndex","meshLabel","traverse","object1","visible","relPath","relationPath","indexX","indexOf","indexY","met","metrics","find","metric","name","selectedMetric","undefined","size","Math","max","min","text","String","color","getScaleColorForMapping","join","createCube","layers","label","makeDataCubeLabel","position","set","dispose","engineService","UiSidebarLeftComponent","fb","ViewModeEnum","selectedAlignmentControl","selectedApiControl","selectedRelationControl","setSelectedDataSet","setSelectedApiLabel","setSelectedRelationPathLabel","Alignment","_mappings","_metricsNames","iAlginment","newMetrics","metricsKey","relation_path","newMapping","api_path","a","localeCompare","_name","DbSelecectorComponent","ThreeJsUtil","point1","point2","points","col","geometry","setFromPoints","material","width","height","depth","g","edges","line","scale","x","y","z","baseWidth","fontSize","content","borderSize","ctx","getContext","font","textWidth","measureText","doubleBorderSize","canvas","textBaseline","textAlign","fillStyle","fillRect","scaleFactor","translate","fillText","JsonViewerComponent","jsonData","jsonChangeEvent","editorOptionsConfig","mode","modes","enableTransform","onCreateMenu","items","node","filter","item","emit","saveChanges","AlignmentSelectorComponent","newAlignmentAdded","ajv","allErrors","addSchema","fileSelector","nativeElement","onchange","files","file","reader","FileReader","onload","fileJson","JSON","parse","result","toString","check","parseAndLog","errorMessage","errors","message","alert","addAlignment","readAsText","click","json","validate","readFiles","AlignmentContainer","_alignments","_relationPathLabels","_apiLabels","_colorMapping","Map","_colorScaleMapping","ac","newApi","newRelation","relationPathJoin","s","arrayEquals","random","colorScale","t","newRelationMap","colorMapping","newRelationScaleMap","colorScaleMapping","relationMap","relationScaleMap","relationPathMap","relationPathScaleMap","mapColor","mapScaleColor","metricsNames","elem","sort","b","relationPathLabels","Array","isArray","length","every","val","searchPaths","searchIndex","$event","BuilderComponent","renderer","localSortByPathMethod","localSortByValueMethod","webSortByPathMethod","webSortByValueMethod","_currentLeaderLineAlignment","build","currentAlignment","localEntry","triggerID","hash","element","getElementById","has","removeClass","addClass","webEntry","type","localElem","webElem","mappingObj","localEntries","from","webEntries","addMapping","clear","updateLines","sortByPathWebAsc","sortByPathWebDesc","weblEntityFiltered","dictionary","currentWebEntity","sortByValueWebAsc","sortByValueWebDesc","localEntityFiltered","valueList","fullKnowledge","currentLocalEntity","sortByPathLocalAsc","sortByPathLocalDesc","ap","formatLocalPath","bp","sortByValueLocalAsc","sortByValueLocalDesc","event","stopPropagation","al","toLowerCase","bl","includes","webEntity","localEntity","localKnownPathStore","webKnownPathStore","dialogConfig","autoFocus","maxHeight","minHeight","maxWidth","minWidth","dialogRef","open","afterClosed","toPromise","deleteLines","clearUsedClass","markUsedElems","drawLines","i","changeCurrentAlignment","sortByPathLocal","sortByValueLocal","entityChange","openMappingTable","sortByPathWeb","sortByValueWeb","DbInformationComponent","_snackBar","data","dbConfiguration","identifierMap","editor","duration","dbConfigurationChanged","updateDatabase","openSnackBar","deleteDatabase","onJSONChange","save","UiInfobarTopComponent","changeViewMode","View3D","ApiInformationComponent","apiConfiguration","apiConfigurationChanged","updateApi","deleteApi","PathFormatterService","apiPathFull","apiWithWildcard","relationPathFull","context","MappingEditorComponent","suggestionContainer","suggestions","splice","deleteSuggestion","DataCubePageComponent","FinalAlignmentComponent","saveFinalAlignment","resp","err","MappingViewComponent","GsbService","_entityAlignments","_regexApiStore","showFullLocalPath","loadingTries","maxLoadingTries","finishedLoadingLocalEntity","finishedLoadingWebEntity","finishedNewEntity","suggestionsLoaded","finishedFinalAlignment","loadingNextEntityFailed","localDb","webDb","_localDatabase","_webDatabase","_selectedLocalIdentifier","_selectedInputType","_localKnownPathStore","_webKnownPathStore","r","saveLocalKnownPaths","entityAlignments","_currentAlignment","_currentLocalEntity","_currentWebEntity","_currentIndex","list","loadLocalEntity","loadWebEntity","getLocalEntity","addHashToLocalEntity","getWebEntity","addHashToWebEntity","_suggestionContainer","reducedResponse","postToFlatJson","diff","postJsonDiff","originalResponse","regex","postSuggestions","suggestion","general","selected","template","_finalAlignment","localLabel","webLabel","postFinalAlignment","finalAlignment","AppComponent","MappingSuggestionComponent","useGeneral","useIndividual","Mapping","_apiPaths","_relationPaths","_metrics","SchemaComponent","code","RelationPath","_paths","UiComponent","LabelCreator","labelFormatter","labelTracker","xStart","yStart","zStart","xOffset","yOffset","zOffset","rotation","withLines","formatApiPath","attachLabelToObject","outlineBox","createLine","labels","formatRelationPath","labelContext","joinRelPaths","object","labelWidth","createHTMLCanvasLabel","texture","minFilter","wrapS","wrapT","labelMaterial","map","transparent","labelBaseScale","SceneLoader","pathFormatterService","labelCreator","dataCubeCreator","resTracker","createOutlineCube","addLabelsX","PI","addLabelsZ","addDataCubes","orbitControls","enableRotate","enablePan","newPosition","clone","currentCamera","changeCamera","addLabelsY","target","copy","sqrt","disposeLabels","disposeCubes","UiSidebarRightComponent","fullRelationPathControl","fullApiPathControl","fullApiPathAxisControl","fullRelationPathAxisControl","metricChoiceControl","setMetric","setShowRelationFullPath","setShowApiFullPath","SettingPageComponent","AppModule","provide","useValue","fullLibraryLoader","DbCreateFormComponent","dbTemplate","dbLabel","configEditor","config","addNewDatabase","onDBNameChange","StartPageComponent","WebserviceInformationComponent","viewAsString","webserviceLabel","editorOptionsReturnTemplate","getWebserviceConfiguration","webserviceConfiguration","aceEditor","session","setMode","returnTemplate","configuration","getValue","updateWebservice","deleteWebservice","ApiCreateFormComponent","apiTemplate","apiLabel","addNewApi","onApiNameChange","finishedEvent","MappingSuggestionToolComponent","PickHelper","layer","raycaster","pickedObject","pickedObjectSavedColor","normalizedPosition","camera","setHex","children","setFromCamera","intersectedObjects","intersectObjects","getHex","TestComponent","Metric","_value","ApiOverviewComponent","displayedColumns","loadApis","api","disableClose","openCreateApi","ResourceTracker","resources","resource","Object","values","parent","remove","AlignmentViewerComponent","WebservicesOverviewComponent","_connection","reloadData","getWebservices","webservices","openCreateWebservice","HighlightPipe","wholeText","searchQuery","re","RegExp","WebserviceCreateFormComponent","webserviceTemplate","on","onReturnTemplateChange","webservice","addNewWebservice","onWebserviceNameChange","onValueChange","LeaderLineMapping","localElems","webElems","_localElems","_webElems","_lines","_type","id","LeaderLine","setOptions","startSocket","endSocket","LocalToWeb","startPlug","endPlug","WebToLocal","Bidirectional","classList","start","end","hide","show","LeaderLineAlignment","render","draw","setRenderer","lines","leaderLine","UiInfobarBottomComponent","BackendConnectionService","httpClient","body","post","queryParams","append","params","apiName","limit","oldDb","newDb","db","lastIndex","lastIndexOf","returnTemplateName","substring","webserviceName","oldApi","original","modified","Utils","str","hashStr","entity","split","formattedPaths","subpath","formatLocalPathShort","ms","Promise","resolve","setTimeout","routes","redirectTo","pathMatch","component","AppRoutingModule","forRoot","AlignmentCubeService","ngZone","cameraWidth","frameId","_selectedAlignmentIndex","_selectedApiPathIndex","_selectedRelationPathLabelIndex","pickPosition","cancelAnimationFrame","_viewMode","window","innerWidth","innerHeight","aspect","alpha","antialias","setSize","setPixelRatio","devicePixelRatio","labelRenderer","domElement","_scene","cameraPersp","cameraOrtho","_currentCamera","light","light2","_orbitControls","minDistance","maxDistance","pickHelper","clearPickPosition","_alignmentContainer","sceneLoader","_selectedMetric","load2DSceneAlignment","load3DScene","load2DSceneApi","load2DSceneRelation","runOutsideAngular","readyState","addEventListener","setPickPosition","resize","requestAnimationFrame","pick","lookAt","_outlineBox","updateProjectionMatrix","left","right","reset","update","divisions","gridHelper","axisHelper","cameraHelper","rect","getBoundingClientRect","clientX","clientY","top","pos","getCanvasRelativePosition","clearScene","loadSceneForAlignmentContainer","reloadScene","model","DatabasesOverviewComponent","loadDBs","openCreateDB","AlignmentCubeComponent","engServ","showAddAlignmentComponent","animationStarted","selectedAlignments","initialize","rendererCanvas","animate","sciV1","sciV2","sciV3","sciV4","sortApiLabels","sortRelationLabels","dorisAlignment","filipoAlignment","bootstrapModule","defaultEncapsulation","None","webpackEmptyAsyncContext","req","Error","keys","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOaA,e;AAEX,mCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,e;AAAA,grB;AAAA;AAAA;ACP5B;;AACE;;AAA2C;;AAAK;;AAChD;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAiD;;AAAQ;;AAC3D;;AAOA;;AACE;;AAA4D;;AAAmB;;AACjF;;AAIA;;AACE;;AAAiD;;AAAQ;;AAC3D;;AACF;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;AC3BA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAYC,WAAZ;;AAAA,iBAAYA,WAAZ,EAAuB;AACnB;AACA;AACA;AACH,OAJD,EAAYA,WAAW,KAAXA,WAAW,MAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOaC,gB;AAEX,oCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,gB;AAAgB,O;;;cAAhBA,gB;AAAgB,qC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP7B;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMgB;;AACI;;AACJ;;;;;;;;AADO;;AAAA;;;;;;AAKH;;AAAqC;;AAAI;;;;;;AACzC;;AAAqC;;AAAI;;;;;;AACzC;;AAAqC;;AAAQ;;;;;;AASjD;;AACI;;AAAG;;AAAc;;AACrB;;;;;;AADO;;AAAA;;;;;;;;AApBf;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AACI;;AACA;;AACA;;AACJ;;AACA;;AACI;;AAA2C;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAAC,UAAA,0BAAT;AAA0C,WAA1C;;AACvC;;AAAU;;AAAM;;AACpB;;AACJ;;AACJ;;AACA;;AACI;;AAGJ;;AACJ;;;;;;AArB6C;;AAAA;;AAMtB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AASsB;;AAAA;;;;;;AApBrD;;AACQ;;AAwBR;;;;;;AAxBiD;;AAAA;;;;UDOpCC,qB;AAKT,uCAAmBD,UAAnB,EAAkDE,GAAlD,EAA0E;AAAA;;AAAvD,eAAAF,UAAA,GAAAA,UAAA;AAA+B,eAAAE,GAAA,GAAAA,GAAA;AAHlD,eAAAC,iBAAA,GAAoB,KAApB;AACA,eAAAC,KAAA,GAAe,IAAI,oDAAJ,EAAf;AAIC;;;;iBAED,eAAG;AACCC,mBAAO,CAACC,GAAR,CAAY,KAAKN,UAAL,CAAgBO,eAA5B;AACH;;;;;;;yBAXQN,qB,EAAqB,iI,EAAA,gI;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA,gB;AAAA,e;AAAA,sa;AAAA;AAAA;ACXlC;;AAAkC;AAAA;AAAA;;AAC9B;;AACJ;;AACA;;;;AAHkC;;AAGJ;;AAAA;;;;;;;;;;;;;;;;;;;;;ACH9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;ACKkC;;;;;;AAQN;;AACoC;;AACpC;;;;;;AADY;;AAAwB;;AAAA;;;;;;AAQhC;;AACoC;;AACpC;;;;;;AADY;;AAAwB;;AAAA;;;;;;AAFxC;;AACI;;AAGJ;;;;;;AAHkC;;AAAA;;;;;;AAW1B;;AACI;;AAC0B;;AAC1B;;AACJ;;;;;;AAFY;;AAAA;;AAAkB;;AAAA;;;;;;AAW9B;;AAC8B;;AAC9B;;;;;;AADY;;AAAkB;;AAAA;;;;;;AAhBtC;;AACI;;AACI;;AAWJ;;AACA;;AACI;;AAGJ;;AACJ;;;;;;AAjBwC;;AAAA;;AAaF;;AAAA;;;;;;AAO9C;;AAA4B;;AAAkC;;;;;;AAAlC;;AAAA;;;;;;AASpB;;AACoC;;AACpC;;;;;;AADY;;AAAwB;;AAAA;;;;;;AAgB9B;;;;;;AAQ1B;;AACI;;AACI;;AACA;;AAAG;;AACO;;AACd;;AACJ;;;;;;AAHW;;AAAA;;;;;;;;AAIX;;AACI;;AACI;;AAAK;;AAAuF;;AAAK;;AAAW;;AAC5G;;AAAG;;AACU;;AACb;;AAAG;;AAA+E;;AAClF;;AAA0C;AAAA;;AAAA;;AAAA,mBAAS,QAAAD,UAAA,aAAT;AAAgC,WAAhC;;AAAkC;;AAAS;;AACzF;;AACJ;;;;;;AALW;;AAAA;;;;;;;;AAMX;;AACI;;AACA;;AACI;;AAAG;;AACM;;AACb;;AACA;;AACA;;AACiB;AAAA;;AAAA;;AAAA;AAAA;;AAA8C;;AACnE;;;;;;AAFqB;;AAAA;;;;;;AAOK;;;;;;AAS1B;;AACI;;AACI;;AACI;;AACA;;AAAG;;AAAuB;;AAC9B;;AACJ;;AACJ;;;;;;AACA;;;;;;AAO0B;;;;UDtHrBQ,4B;AAqDT,8CAAoBC,UAApB,EACoBC,MADpB,EAEoBC,GAFpB,EAGmBT,GAHnB,EAIoBU,OAJpB,EAKmBZ,UALnB,EAK2C;AAAA;;AALvB,eAAAS,UAAA,GAAAA,UAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,GAAA,GAAAA,GAAA;AACD,eAAAT,GAAA,GAAAA,GAAA;AACC,eAAAU,OAAA,GAAAA,OAAA;AACD,eAAAZ,UAAA,GAAAA,UAAA;AAtDnB,eAAAI,KAAA,GAAe,IAAI,oDAAJ,EAAf;AAGA,eAAAS,aAAA,GAAgB,KAAhB;AACA,eAAAC,eAAA,GAAkB,KAAlB;AACA,eAAAC,iBAAA,GAAoB,KAApB;AACA,eAAAC,gBAAA,GAAmB,KAAnB;AACA,eAAAC,gBAAA,GAAmB,IAAnB;AACA,eAAAd,iBAAA,GAAoB,IAApB;AACA,eAAAe,eAAA,GAAkB,KAAlB;AASA,eAAAC,eAAA,GAAkB,EAAlB;AAEA,eAAAC,iBAAA,GAAoB,KAApB;AACA,eAAAC,oBAAA,GAAuB,EAAvB;AACA,eAAAC,qBAAA,GAAwB,EAAxB;AAGA,eAAAC,aAAA,GAAgB,EAAhB;AAEA,eAAAC,gBAAA,GAAmB,KAAnB;AACA,eAAAC,kBAAA,GAAqB,EAArB;AACA,eAAAC,mBAAA,GAAsB,EAAtB;AASA,eAAAC,YAAA,GAA4B,IAAIC,GAAJ,EAA5B;AACA,eAAAC,mBAAA,GAAgC,IAAID,GAAJ,EAAhC;AACA,eAAAE,UAAA,GAA0B,IAAIF,GAAJ,EAA1B;AACA,eAAAG,iBAAA,GAA8B,IAAIH,GAAJ,EAA9B;AAMA,eAAAI,oBAAA,GAAuB,KAAvB;AASI,eAAKC,eAAL,GAAuBtB,GAAG,CAACuB,KAAJ,CAAU;AAC7BC,yBAAa,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADc;AAE7BC,uBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAFgB;AAG7BE,sBAAU,EAAE,CAAC;AAACC,mBAAK,EAAE,EAAR;AAAYC,sBAAQ,EAAE,CAAC,KAAKzB;AAA5B,aAAD,EAAiD,0DAAWqB,QAA5D,CAHiB;AAI7BK,qBAAS,EAAE,CAAC;AAACF,mBAAK,EAAE,EAAR;AAAYC,sBAAQ,EAAE,CAAC,KAAKzB;AAA5B,aAAD,EAAiD,0DAAWqB,QAA5D;AAJkB,WAAV,CAAvB;AAMH;;;;iBAED,oBAAQ;AAAA;;AACJ,iBAAK3B,UAAL,CAAgBiC,YAAhB,GAA+BC,IAA/B,CAAoC,UAACC,GAAD,EAAkC;AAClE,mBAAI,CAACC,SAAL,GAAiBD,GAAG,CAACC,SAArB;AACH,aAFD;AAGA,iBAAKpC,UAAL,CAAgBqC,OAAhB,GAA0BH,IAA1B,CAA+B,UAACC,GAAD,EAAwB;AACnD,mBAAI,CAACG,IAAL,GAAYH,GAAG,CAACG,IAAhB;AACH,aAFD;AAGH;;;iBAED,6BAAoBC,MAApB,EAAkC;AAC9B,iBAAKlC,eAAL,GAAuB,KAAvB;AACA,iBAAKC,iBAAL,GAAyB,KAAzB;AACA,iBAAKC,gBAAL,GAAwB,KAAxB;AACA,iBAAKiB,eAAL,CAAqBgB,GAArB,CAAyB,YAAzB,EAAuCC,QAAvC,CAAgD,EAAhD;AACA,iBAAKjB,eAAL,CAAqBgB,GAArB,CAAyB,YAAzB,EAAuCE,OAAvC;AACA,iBAAKlB,eAAL,CAAqBgB,GAArB,CAAyB,WAAzB,EAAsCC,QAAtC,CAA+C,EAA/C;AACA,iBAAKjB,eAAL,CAAqBgB,GAArB,CAAyB,WAAzB,EAAsCE,OAAtC;AAGA,iBAAKC,sBAAL,CAA4BJ,MAA5B;AACA,iBAAKK,wBAAL,CAA8BL,MAA9B;AACH;;;iBAED,yBAAgBP,SAAhB,EAAiC;AAC7B,iBAAKa,WAAL,GAAmB,KAAKC,YAAL,CAAkBd,SAAlB,CAAnB;AACA,iBAAKe,UAAL,GAAkB,KAAKC,aAAL,CAAmBhB,SAAnB,CAAlB;AACA,iBAAKR,eAAL,CAAqBgB,GAArB,CAAyB,YAAzB,EAAuCS,MAAvC;AACH;;;iBAED,gCAAuBV,MAAvB,EAAqC;AAAA;;AACjC,iBAAKvC,UAAL,CAAgBkD,oBAAhB,CAAqCX,MAArC,EAA6CL,IAA7C,CAAkD,UAACC,GAAD,EAAyB;AACvE,oBAAI,CAACgB,oBAAL,GAA4BhB,GAA5B;AACA,oBAAI,CAAC9B,eAAL,GAAuB,IAAvB;;AAEA,kBAAI,MAAI,CAAC8C,oBAAL,CAA0BC,oBAA1B,KAAmD,EAAvD,EAA2D;AACvD,sBAAI,CAAC5C,gBAAL,GAAwB,KAAxB;AACH;AACJ,aAPD;AAQH;;;iBAED,kCAAyB+B,MAAzB,EAAuC;AAAA;;AACnC,iBAAKvC,UAAL,CAAgBqD,sBAAhB,CAAuCd,MAAvC,EAA+Ce,SAA/C,CACI,UAACC,MAAD,EAAkC;AAC9B,oBAAI,CAACC,0BAAL,GAAkCD,MAAlC;AACA,oBAAI,CAACjD,iBAAL,GAAyB,IAAzB;;AACA,oBAAI,CAACkB,eAAL,CAAqBgB,GAArB,CAAyB,WAAzB,EAAsCS,MAAtC;AACH,aALL,EAMI,UAACQ,KAAD,EAAW;AACP,oBAAI,CAACC,QAAL,GAAiBD,KAAK,CAACA,KAAvB;AACA,oBAAI,CAAClD,gBAAL,GAAwB,IAAxB;AACH,aATL;AAWH;;;iBAED,8BAAqBgC,MAArB,EAAmC;AAAA;;AAC/B,iBAAKvC,UAAL,CAAgB2D,kBAAhB,CAAmCpB,MAAnC,EAA2CL,IAA3C,CAAgD,UAACC,GAAD,EAAe;AAC3D,oBAAI,CAACyB,kBAAL,GAA0BzB,GAA1B;AACA,oBAAI,CAAC/B,aAAL,GAAqB,IAArB;AACH,aAHD;AAIH;;;iBAED,qBAAY;AACR,iBAAKyD,aAAL,GAAqB,CAArB;AACA,iBAAKtE,UAAL,CAAgBuE,SAAhB;AACH;;;iBAED,oCAAwB;AACpB,iBAAKvE,UAAL,CAAgBwE,sBAAhB;AACA,iBAAKC,OAAL,CAAaC,IAAb;AACH;;;iBAED,2BAAkBC,CAAlB,EAAmB;AACf,iBAAK3E,UAAL,CAAgB4E,wBAAhB,CAAyCD,CAAzC;AACH;;;iBAED,8BAAkB;AACd,iBAAK3C,oBAAL,GAA4B,IAA5B;AACA,iBAAK6C,OAAL,CAAaC,IAAb;AACA,iBAAK5E,GAAL,CAAS6E,aAAT;AACA,iBAAKF,OAAL,CAAaG,SAAb;AACA,iBAAKH,OAAL,CAAaI,YAAb;AACH;;;iBAED,yBAAgBC,KAAhB,EAAqB;AAAA;;AACjB,gBAAI,CAAC,KAAKlF,UAAL,CAAgBmF,eAArB,EAAsC;AAClC;AACH;;AACD,gBAAID,KAAK,KAAK,CAAd,EAAiB;AACb,mEAAME,KAAN,CAAY,GAAZ,EAAiBzC,IAAjB,CAAsB,YAAM;AACxB,sBAAI,CAACkC,OAAL,CAAaG,SAAb;AACH,eAFD;AAGH,aAJD,MAIO;AACH,mBAAKH,OAAL,CAAaQ,SAAb;AACH;AACJ;;;iBAED,oBAAW;AACP,iBAAKZ,OAAL,CAAaa,KAAb,CAAmBrC,GAAnB,CAAuB,CAAvB,EAA0BsC,SAA1B,GAAsC,IAAtC;AACA,iBAAKd,OAAL,CAAaa,KAAb,CAAmBrC,GAAnB,CAAuB,CAAvB,EAA0BuC,QAA1B,GAAqC,KAArC;AACA,gBAAMlD,UAAU,GAAG,KAAKL,eAAL,CAAqBgB,GAArB,CAAyB,YAAzB,EAAuCV,KAA1D;AACA,gBAAME,SAAS,GAAG,KAAKR,eAAL,CAAqBgB,GAArB,CAAyB,WAAzB,EAAsCV,KAAxD;AACA,iBAAKvC,UAAL,CAAgByF,iBAAhB,CAAkC,KAAK7B,oBAAvC,EAA6D,KAAKS,kBAAlE,EAAsF/B,UAAtF,EAAkGG,SAAlG;AACH;;;iBAED,sBAAU;AACN,iBAAKoC,OAAL,CAAaa,UAAb;AACA,iBAAK1D,oBAAL,GAA4B,KAA5B;AACA,iBAAKhC,UAAL,CAAgB2F,UAAhB;AACH;;;iBAED,sBAAalD,SAAb,EAA8B;AAAA;;AAC1B,gBAAMH,UAAU,GAAG,EAAnB;;AAD0B,uDAEN,KAAK2B,0BAAL,CAAgC3B,UAF1B;AAAA;;AAAA;AAAA;AAAA,oBAEfC,KAFe;AAGtB,oBAAMqD,SAAS,GAAGrD,KAAK,CAACqD,SAAxB;;AACA,oBAAMC,QAAQ,GAAG,MAAI,CAAC5B,0BAAL,CAAgC6B,SAAhC,CAA0CC,IAA1C,CACb,UAACC,KAAD;AAAA,yBAAuBA,KAAK,CAACC,OAAN,KAAkBxD,SAAlB,IAA+BuD,KAAK,CAACJ,SAAN,KAAoBA,SAA1E;AAAA,iBADa,CAAjB;;AAGA,oBAAIC,QAAJ,EAAc;AACVvD,4BAAU,CAAC4D,IAAX,CAAgBN,SAAhB;AACH;AATqB;;AAE1B,kEAAgE;AAAA;AAQ/D;AAVyB;AAAA;AAAA;AAAA;AAAA;;AAY1B,mBAAOtD,UAAP;AACH;;;iBAED,uBAAcG,SAAd,EAA+B;AAAA;;AAC3B,gBAAMe,UAAU,GAAG,EAAnB;;AAD2B,wDAEP,KAAKS,0BAAL,CAAgCkC,aAFzB;AAAA;;AAAA;AAAA;AAAA,oBAEhB5D,KAFgB;AAGvB,oBAAMqD,SAAS,GAAGrD,KAAK,CAACqD,SAAxB;;AACA,oBAAMC,QAAQ,GAAG,MAAI,CAAC5B,0BAAL,CAAgC6B,SAAhC,CAA0CC,IAA1C,CACb,UAACC,KAAD;AAAA,yBAAuBA,KAAK,CAACC,OAAN,KAAkBxD,SAAlB,IAA+BuD,KAAK,CAACJ,SAAN,KAAoBA,SAA1E;AAAA,iBADa,CAAjB;;AAGA,oBAAIC,QAAJ,EAAc;AACVrC,4BAAU,CAAC0C,IAAX,CAAgBN,SAAhB;AACH;AATsB;;AAE3B,qEAAmE;AAAA;AAQlE;AAV0B;AAAA;AAAA;AAAA;AAAA;;AAY3B,mBAAOpC,UAAP;AACH;;;;;;;yBA9MQhD,4B,EAA4B,8J,EAAA,mI,EAAA,2H,EAAA,gI,EAAA,mI,EAAA,iI;AAAA,O;;;cAA5BA,4B;AAA4B,kD;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACvBzC;;AAAwC;AAAA,qBAAmB,IAAA4F,eAAA,sBAAnB;AAAwD,aAAxD;;AAIpC;;AACI;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAW;;AAAqB;;AAChC;;AACY;AAAA,qBAAmB,IAAAC,mBAAA,cAAnB;AAAoD,aAApD;;AACR;;AAGJ;;AACJ;;AACA;;AACI;;AAAW;;AAAY;;AACvB;;AAAwC;AAAA,qBAAmB,IAAAC,eAAA,cAAnB;AAAgD,aAAhD;;AACpC;;AAKJ;;AACJ;;AACA;;AACI;;AAAW;;AAAiB;;AAC5B;;AACI;;AAoBJ;;AACJ;;AACA;;AAEJ;;AACA;;AACI;;AACI;;AAAW;;AAAmB;;AAC9B;;AACY;AAAA,qBAAmB,IAAAC,oBAAA,cAAnB;AAAqD,aAArD;;AAER;;AAGJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAAyD;AAAA,qBAAS,IAAAC,QAAA,EAAT;AAAmB,aAAnB;;AACb;;AAC5C;;AAEJ;;AAGA;;AACI;;AACA;;AAEI;;AAAyD;AAAA,qBAAS,IAAAC,kBAAA,EAAT;AAA6B,aAA7B;;AACC;;AAC1D;;AACJ;;AAEA;;AAOA;;AASA;;AAUJ;;AAGA;;AACI;;AACA;;AACI;;AAAyD;AAAA,qBAAS,IAAAzG,UAAA,sBAAT;AAAyC,aAAzC;;AAA2C;;AAEpG;;AACA;;AAA0C;AAAA,qBAAS,IAAA2F,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AAC5E;;AAA6C;;AAAiB;;AAClE;;AAEA;;AAQA;;AACJ;;AAKA;;AACI;;AACA;;AACJ;;AAEJ;;;;AAhJwB;;AAKV;;AAAA;;AAO4C;;AAAA;;AAQf;;AAAA;;AAUA;;AAAA;;AAsBnB;;AAAA;;AASkC;;AAAA;;AAU1C;;AAAA;;AAWI;;AAAA;;AAIN;;AAAA;;AAOA;;AAAA;;AASA;;AAAA;;AAuBA;;AAAA;;AAQiB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtI/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAMe,QAAQ,GAAG;AACpBC,sBAAc,EAAE,uBADI;AAEpBC,uBAAe,EAAE,OAFG;AAGpBC,kBAAU,EAAE,IAHQ;AAKpBC,sBAAc,EAAE,yBALI;AAMpBC,uBAAe,EAAE,OANG;AAOpBC,+BAAuB,EAAE,aAPL;AASpBC,6BAAqB,EAAE;AATH,OAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOMC,4B;AAEX,gDAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,4B;AAA4B,O;;;cAA5BA,4B;AAA4B,kD;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzC;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAYC,QAAZ;;AAAA,iBAAYA,QAAZ,EAAoB;AAChB;AACA;AACA;AACA;AACH,OALD,EAAYA,QAAQ,KAARA,QAAQ,MAApB;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;AACA;;;AAEO,UAAMC,WAAW,GAAG;AACzBC,kBAAU,EAAE,KADa;AAEzBC,eAAO,EAAE,mBAAO;AAAC;AAAA,cAAD,CAAP,CAA8BA,OAFd;AAGzBC,eAAO,EAAE,6BAHgB;AAIzBC,iCAAyB,EAAE,oBAJF;AAKzBC,0BAAkB,EAAE,aALK;AAMzBC,uBAAe,EAAE,kBANQ;AAOzBC,qBAAa,EAAE,sBAPU;AAQzBC,wBAAgB,EAAE,sBARO;AASzBC,yBAAiB,EAAE,YATM;AAUzBC,wBAAgB,EAAE,mBAVO;AAWzBC,+BAAuB,EAAE,sBAXA;AAYzBC,sBAAc,EAAE,kBAZS;AAazBC,yBAAiB,EAAE,yBAbM;AAezBC,mBAAW,EAAE,MAfY;AAgBzBC,2BAAmB,EAAE;AAhBI,OAApB;;;;;;;;;;;;;;;;ACJP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaC,e;AAST,iCAAYC,oBAAZ,EAAwD;AAAA;;AACpD,eAAKA,oBAAL,GAA4BA,oBAA5B;AACA,eAAKC,cAAL,GAAsBD,oBAAoB,CAACE,kBAA3C;AACA,eAAKC,KAAL,GAAaH,oBAAoB,CAACG,KAAlC;AAEA,eAAKC,WAAL,GAAmB,IAAI,gEAAJ,EAAnB;AACH;AAGD;;;;;;;iBAGO,wBAAY;AAAA;;AACf,gBAAMC,QAAQ,GAAG,KAAKL,oBAAL,CAA0BK,QAA3C;AAEA,iBAAKJ,cAAL,CAAoBK,UAApB,CAA+BC,OAA/B,CAAuC,UAACC,SAAD,EAAY3D,KAAZ,EAAsB;AACzD;AACA,kBAAI,EAAEwD,QAAQ,KAAK,iDAASI,eAAtB,IAA0C,MAAI,CAACT,oBAAL,CAA0BU,sBAA1B,KAAqD7D,KAAjG,CAAJ,EAA8G;AAC1G;AACH;;AAED2D,uBAAS,CAACG,QAAV,CAAmBJ,OAAnB,CAA2B,UAACK,OAAD,EAAsB;AAC7C;AACAA,uBAAO,CAACC,QAAR,CAAiBN,OAAjB,CAAyB,UAACO,OAAD,EAAa;AAClC,sBAAMC,QAAQ,GAAG,MAAI,CAACd,cAAL,CAAoBe,SAApB,CAA8BC,SAA9B,CAAwC,UAAC/G,KAAD;AAAA,2BAAWA,KAAK,KAAK4G,OAArB;AAAA,mBAAxC,CAAjB,CADkC,CAGlC;;;AACA,sBAAI,EAAET,QAAQ,KAAK,iDAASa,SAAtB,IAAoC,MAAI,CAAClB,oBAAL,CAA0BmB,oBAA1B,KAAmDJ,QAAzF,CAAJ,EAAyG;AACrG;AACH,mBANiC,CAOlC;;;AACAH,yBAAO,CAACQ,aAAR,CAAsBb,OAAtB,CAA8B,UAACc,GAAD,EAAS;AACnC,wBAAMC,QAAQ,GAAG,MAAI,CAACrB,cAAL,CAAoBsB,oBAApB,CAAyCF,GAAG,CAACG,KAA7C,CAAjB,CADmC,CAEnC;;;AACA,wBAAI,EAAEnB,QAAQ,KAAK,iDAASoB,cAAtB,IACE,MAAI,CAACzB,oBAAL,CAA0B0B,8BAA1B,KAA6DJ,QADjE,CAAJ,EACiF;AAC7E;AACH;;AAED,wBAAMK,IAAI,GAAG,MAAI,CAACC,cAAL,CAAoBpB,SAApB,EAA+BI,OAA/B,EAAwCE,OAAxC,EAAiDO,GAAjD,EAAsDxE,KAAtD,CAAb;;AAEA,0BAAI,CAACsD,KAAL,CAAW0B,GAAX,CAAeF,IAAf;;AACA,0BAAI,CAACvB,WAAL,CAAiB0B,KAAjB,CAAuBH,IAAvB;AAEH,mBAbD;AAcH,iBAtBD;AAuBH,eAzBD;AA0BH,aAhCD;AAiCH;AAED;;;;;;;;;;;;iBASQ,2BAAkBI,WAAlB,EAAuCjB,OAAvC,EAAwDM,aAAxD,EAAiFY,UAAjF,EAAqGC,WAArG,EAAgH;AACpH,gBAAMC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB;AACA,gBAAMC,qBAAqB,GAAGF,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAA9B;AACAC,iCAAqB,CAACC,WAAtB,GAAoC,gBAAgBP,WAApD;AACA,gBAAMQ,aAAa,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAG,yBAAa,CAACD,WAAd,GAA4B,eAAexB,OAA3C;;AACA,gBAAI,KAAKd,oBAAL,CAA0BwC,eAA9B,EAA+C;AAC3CD,2BAAa,CAACD,WAAd,GAA4B,eAAexB,OAA3C;AACH,aAFD,MAEO;AACHyB,2BAAa,CAACD,WAAd,GAA4B,eAAexB,OAAO,CAAC2B,KAAR,CAAc,0DAAShE,cAAvB,EAAuC,CAAvC,EAA0CiE,OAA1C,CAAkD,0DAAShE,eAA3D,EAA4E,EAA5E,CAA3C;AACH;;AACD,gBAAMiE,aAAa,GAAGR,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAO,yBAAa,CAACL,WAAd,GAA4B,gBAA5B;AACA,gBAAMM,SAAS,GAAGT,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAlB;;AAboH,wDAcjGhB,aAdiG;AAAA;;AAAA;AAcpH,qEAAkC;AAAA,oBAAvByB,IAAuB;AAC9B,oBAAMC,SAAS,GAAGX,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAlB;;AACA,oBAAI,KAAKpC,oBAAL,CAA0B+C,oBAA9B,EAAoD;AAChDD,2BAAS,CAACR,WAAV,GAAwBO,IAAxB;AACH,iBAFD,MAEO;AACHC,2BAAS,CAACR,WAAV,GAAwBO,IAAI,CAACJ,KAAL,CAAW,0DAASnE,cAApB,EAAoC,CAApC,EAAuCoE,OAAvC,CAA+C,0DAASnE,eAAxD,EAAyE,EAAzE,CAAxB;AACH;;AACDqE,yBAAS,CAACI,WAAV,CAAsBF,SAAtB;AACH;AAtBmH;AAAA;AAAA;AAAA;AAAA;;AAuBpH,gBAAMG,gBAAgB,GAAGd,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAzB;AACAa,4BAAgB,CAACX,WAAjB,aAAkCN,UAAlC,eAAiDC,WAAjD;AACAU,yBAAa,CAACK,WAAd,CAA0BJ,SAA1B;AAEAV,sBAAU,CAACgB,SAAX,GAAuB,OAAvB;AACAhB,sBAAU,CAACiB,KAAX,CAAiBC,SAAjB,GAA6B,QAA7B;AACAlB,sBAAU,CAACc,WAAX,CAAuBX,qBAAvB;AACAH,sBAAU,CAACc,WAAX,CAAuBT,aAAvB;AACAL,sBAAU,CAACc,WAAX,CAAuBL,aAAvB;AACAT,sBAAU,CAACc,WAAX,CAAuBC,gBAAvB;AACAf,sBAAU,CAACiB,KAAX,CAAiBE,MAAjB,GAA0B,IAA1B;AACA,gBAAMC,SAAS,GAAG,IAAI,sFAAJ,CAAgBpB,UAAhB,CAAlB;AAEAoB,qBAAS,CAACC,QAAV,CAAmB,UAACC,OAAD,EAAa;AAC5BA,qBAAO,CAACC,OAAR,GAAkB,KAAlB;AACH,aAFD;AAIA,mBAAOH,SAAP;AACH;AAED;;;;;;;;;;;;iBASQ,wBAAe9C,SAAf,EAAqCI,OAArC,EAAuDE,OAAvD,EAAwE4C,OAAxE,EAA+FL,MAA/F,EAAqG;AAAA;;AACzG,gBAAMM,YAAY,GAAGD,OAAO,CAAClC,KAA7B;AACA,gBAAMoC,MAAM,GAAG,KAAK3D,cAAL,CAAoBe,SAApB,CAA8B6C,OAA9B,CAAsC/C,OAAtC,IAAiD,CAAhE;AACA,gBAAMgD,MAAM,GAAG,KAAK7D,cAAL,CAAoBsB,oBAApB,CAAyCoC,YAAzC,IAAyD,CAAxE;AAEA,gBAAMI,GAAG,GAAGnD,OAAO,CAACoD,OAAR,CAAgBC,IAAhB,CAAqB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACC,IAAP,KAAgB,MAAI,CAACnE,oBAAL,CAA0BoE,cAA9C;AAAA,aAA3B,CAAZ;;AACA,gBAAIL,GAAG,KAAKM,SAAZ,EAAuB;AACnB;AACH,aARwG,CASzG;;;AACA,gBAAMC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAASV,GAAG,CAAC7J,KAAb,EAAoB,CAApB,CAAZ,CAAb;AACA,gBAAMwK,IAAI,GAAGC,MAAM,CAACL,IAAD,CAAnB;AACA,gBAAIM,KAAJ,CAZyG,CAazG;AACA;;AACAA,iBAAK,GAAG,KAAK3E,cAAL,CAAoB4E,uBAApB,CAA4C/D,OAA5C,EAAqD6C,YAAY,CAACmB,IAAb,EAArD,EAA0ER,IAA1E,CAAR;;AAEA,gBAAIA,IAAI,GAAG,CAAX,EAAc;AACV,kBAAM3C,IAAI,GAAG,yDAAYoD,UAAZ,CAAuBT,IAAvB,EAA6BM,KAA7B,EAAoChB,MAApC,EAA4CE,MAA5C,EAAoDT,MAApD,CAAb,CADU,CAEV;;;AACA1B,kBAAI,CAACqD,MAAL,CAAY3J,MAAZ,CAAmB,0DAASuD,qBAA5B;AAEA,kBAAMqG,KAAK,GAAG,KAAKC,iBAAL,CACV1E,SAAS,CAAC2D,IADA,EAEVrD,OAFU,EAGV6C,YAHU,EAIV,KAAK3D,oBAAL,CAA0BoE,cAJhB,EAKVE,IALU,CAAd;AAOAW,mBAAK,CAACE,QAAN,CAAeC,GAAf,CAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B;AACAzD,kBAAI,CAACE,GAAL,CAASoD,KAAT;AACA,qBAAOtD,IAAP;AACH;;AACD,mBAAO,IAAP;AACH;AAGD;;;;;;iBAGO,wBAAY;AACf,iBAAKvB,WAAL,CAAiBiF,OAAjB;AACH;;;;;;;;;;;;;;;;;;;;;AC3KL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACII;;AACE;;AACF;;;;;;AAFc;;AACZ;;AAAA;;;;;;AANN;;AACE;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACF;;;;;;AAJyD;;AAAA;;;;;;AAgBjD;;AACE;;AACF;;;;;;;AAFuG;;AACrG;;AAAA;;;;;;;;AAJR;;AACE;;AAA0D;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AACE;;AAGF;;AACF;;AACF;;;;;;AAPmB;;AAAA;;AAE2B;;AAAA;;;;;;;;AAVhD;;AACE;;AACE;;AACE;;AAAwB;;AAAQ;;AAChC;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AACxD;;AACF;;AACA;;AASF;;;;;;AAT0B;;AAAA;;;;;;AAqBlB;;AACE;;AACF;;;;;;;AAFkG;;AAChG;;AAAA;;;;;;;;AAJR;;AACE;;AAAoD;AAAA;;AAAA;;AAAA;AAAA;;AAClD;;AACE;;AAGF;;AACF;;AACF;;;;;;AAPmB;;AAAA;;AAEuB;;AAAA;;;;;;;;AAV5C;;AACE;;AACE;;AACE;;AAAwB;;AAAS;;AACjC;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AACxD;;AACF;;AACA;;AASF;;;;;;AAT0B;;AAAA;;;;;;AAqBlB;;AACE;;AACF;;;;;;;AAF0H;;AACxH;;AAAA;;;;;;;;AAJR;;AACE;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AACvD;;AACE;;AAGF;;AACF;;AACF;;;;;;AAPmB;;AAAA;;AAEsC;;AAAA;;;;;;;;AAV3D;;AACE;;AACE;;AACE;;AAAwB;;AAAc;;AACtC;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AACxD;;AACF;;AACA;;AASF;;;;;;AAT0B;;AAAA;;;;;;;;AAkBxB;;AACE;;AACE;;AAAkC;AAAA;;AAAA;;AAAA,mBAAS,QAAAC,aAAA,qBAAT;AAA2C,WAA3C;;AAA6C;;AAAmB;;AACpG;;AACA;;AACE;;AAAkC;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,aAAA,aAAT;AAAmC,WAAnC;;AAAqC;;AAAW;;AACpF;;AACA;;AACE;;AAAkC;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,aAAA,cAAT;AAAoC,WAApC;;AAAsC;;AAAY;;AACtF;;AACA;;AACE;;AAAkC;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,aAAA,mBAAT;AAAyC,WAAzC;;AAA2C;;AAAY;;AAC3F;;AACA;;AACE;;AAAkC;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,aAAA,0BAAT;AAAgD,WAAhD;;AAAkD;;AAAkB;;AACxG;;AACA;;AACE;;AAAkC;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,aAAA,eAAT;AAAqC,WAArC;;AAAuC;;AAAa;;AACxF;;AACA;;AACE;;AAAkC;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,aAAA,mBAAT;AAAyC,WAAzC;;AAA2C;;AAAiB;;AAChG;;AACA;;AACE;;AAAkC;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,aAAA,mBAAT;AAAyC,WAAzC;;AAA2C;;AAAiB;;AAChG;;AACA;;AACE;;AAAkC;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,aAAA,qBAAT;AAA2C,WAA3C;;AAA6C;;AAAmB;;AACpG;;AACF;;;;;;;;AAnCF;;AACE;;AACE;;AACE;;AAAwB;;AAAO;;AAC/B;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AACxD;;AACF;;AACA;;AA6BF;;;;;;AA7B0B;;AAAA;;;;UD7DbC,sB;AAUT,wCACYC,EADZ,EAEWF,aAFX,EAEgD;AAAA;;AADpC,eAAAE,EAAA,GAAAA,EAAA;AACD,eAAAF,aAAA,GAAAA,aAAA;AAVJ,eAAAG,YAAA,GAAe,gDAAf;AAEP,eAAAhC,OAAA,GAAU,IAAV;AASC;;;;iBAEM,oBAAQ;AACX,iBAAKiC,wBAAL,GAAgC,IAAI,0DAAJ,CAAgB,CAAhB,CAAhC;AACA,iBAAKC,kBAAL,GAA0B,IAAI,0DAAJ,CAAgB,CAAhB,CAA1B;AACA,iBAAKC,uBAAL,GAA+B,IAAI,0DAAJ,CAAgB,CAAhB,CAA/B;AACH;;;iBAEM,mCAA0B;AAC7B,iBAAKN,aAAL,CAAmBO,kBAAnB,CAAsC,KAAKH,wBAAL,CAA8BxL,KAApE;AACH;;;iBAEM,6BAAoB;AACvB,iBAAKoL,aAAL,CAAmBQ,mBAAnB,CAAuC,KAAKH,kBAAL,CAAwBzL,KAA/D;AACH;;;iBAEM,sCAA6B;AAChC,iBAAKoL,aAAL,CAAmBS,4BAAnB,CAAgD,KAAKH,uBAAL,CAA6B1L,KAA7E;AACH;;;;;;;yBA/BQqL,sB,EAAsB,2H,EAAA,oJ;AAAA,O;;;cAAtBA,sB;AAAsB,4C;AAAA,gB;AAAA,e;AAAA,qjB;AAAA;AAAA;ACXnC;;AAWA;;AAkBA;;AAkBA;;AAkBA;;;;AAjEmB;;AAWA;;AAAA;;AAkBA;;AAAA;;AAkBA;;AAAA;;AAkBA;;AAAA;;;;;;;;;;;;;;;;;;;;;AChEnB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIaS,S;AAKT,6BAAc;AAAA;;AACV,eAAKC,SAAL,GAAiB,EAAjB;AACA,eAAKC,aAAL,GAAqB,IAAI3M,GAAJ,EAArB;AACH;;;;iBAEM,oBAAWqH,OAAX,EAA2B;AAC9B,iBAAKqF,SAAL,CAAepI,IAAf,CAAoB+C,OAApB;AACH;;;iBAEM,sBAAauF,UAAb,EAAqC;AAAA;;AACxCA,sBAAU,CAAC7F,UAAX,CAAsBC,OAAtB,CAA8B,UAAAK,OAAO,EAAI;AACrC,kBAAMwF,UAAU,GAAa,EAA7B,CADqC,CAErC;;AACA,mBAAK,IAAMC,UAAX,IAAyBzF,OAAO,CAACoD,OAAjC,EAA0C;AACtCoC,0BAAU,CAACvI,IAAX,CAAgB,IAAI,8CAAJ,CAAWwI,UAAX,EAAuBzF,OAAO,CAACoD,OAAR,CAAgBqC,UAAhB,CAAvB,CAAhB;;AACA,uBAAI,CAACH,aAAL,CAAmBrE,GAAnB,CAAuBwE,UAAvB;AACH;;AACD,kBAAM1C,YAAY,GAAmB,EAArC;AACA/C,qBAAO,CAAC0F,aAAR,CAAsB/F,OAAtB,CAA8B,UAAAiB,KAAK,EAAI;AACnCmC,4BAAY,CAAC9F,IAAb,CAAkB,IAAI,0DAAJ,CAAiB2D,KAAK,CAACqB,IAAvB,CAAlB;AACH,eAFD;AAIA,kBAAM0D,UAAU,GAAG,IAAI,gDAAJ,CAAY3F,OAAO,CAAC4F,QAApB,EAA8B7C,YAA9B,EAA4CyC,UAA5C,CAAnB;;AACA,qBAAI,CAACH,SAAL,CAAepI,IAAf,CAAoB0I,UAApB;AACH,aAdD;AAeH;;;iBAEM,mBAAUE,CAAV,EAAsB;AACzB,mBAAO,KAAKtC,IAAL,CAAUuC,aAAV,CAAwBD,CAAC,CAACtC,IAA1B,CAAP;AACH;;;eAED,eAAY;AACR,mBAAO,KAAK8B,SAAZ;AACH;;;eAED,eAAQ;AACJ,mBAAO,KAAKU,KAAZ;AACH,W;eAMD,aAASzM,KAAT,EAAwB;AACpB,iBAAKyM,KAAL,GAAazM,KAAb;AACH;;;eAND,eAAgB;AACZ,mBAAO,KAAKgM,aAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC5CQU,qB;AAEX,yCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,qB;AAAqB,O;;;cAArBA,qB;AAAqB,0C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPlC;;AAAG;;AAAoB;;;;;;;;;;;;;;;;;;;;ACAvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAGaC,W;;;;;;;;AACT;;;;;;AAMO,8BAAkBC,MAAlB,EAAyCC,MAAzC,EAAgG;AAAA,gBAAhCnC,KAAgC,uEAAR,QAAQ;AACnG,gBAAMoC,MAAM,GAAG,EAAf;AACAA,kBAAM,CAACnJ,IAAP,CAAYiJ,MAAZ;AACAE,kBAAM,CAACnJ,IAAP,CAAYkJ,MAAZ;AACA,gBAAME,GAAG,GAAG,IAAI,2CAAJ,CAAUrC,KAAV,CAAZ;AAEA,gBAAMsC,QAAQ,GAAG,IAAI,oDAAJ,GAA2BC,aAA3B,CAAyCH,MAAzC,CAAjB;AACA,gBAAMI,QAAQ,GAAG,IAAI,uDAAJ,CAA4B;AAACxC,mBAAK,EAAEqC;AAAR,aAA5B,CAAjB;AACA,mBAAO,IAAI,0CAAJ,CAAeC,QAAf,EAAyBE,QAAzB,CAAP;AACH;AAGD;;;;;;iBAGO,2BAAyBC,KAAzB,EAAwCC,MAAxC,EAAwDC,KAAxD,EAAqE;AACxE,gBAAMC,CAAC,GAAG,IAAI,iDAAJ,CAAsBH,KAAtB,EAA6BC,MAA7B,EAAqCC,KAArC,CAAV;AACA,gBAAME,KAAK,GAAG,IAAI,mDAAJ,CAAwBD,CAAxB,CAAd;AACA,gBAAME,IAAI,GAAG,IAAI,kDAAJ,CAAuBD,KAAvB,EAA8B,IAAI,uDAAJ,CAA4B;AAAC7C,mBAAK,EAAE;AAAR,aAA5B,CAA9B,CAAb;AACA8C,gBAAI,CAACvC,QAAL,CAAcC,GAAd,CAAkBiC,KAAK,GAAG,CAAR,GAAY,GAA9B,EAAmCC,MAAM,GAAG,CAAT,GAAa,GAAhD,EAAqDC,KAAK,GAAG,CAAR,GAAY,GAAjE;AACA,mBAAOG,IAAP;AACH;AAGD;;;;;;;;;;;iBAQO,oBAAkBC,KAAlB,EAAiC/C,KAAjC,EAAsEgD,CAAtE,EAAiFC,CAAjF,EAA4FC,CAA5F,EAAqG;AACxG,gBAAMZ,QAAQ,GAAG,IAAI,iDAAJ,CAAsBS,KAAtB,EAA6BA,KAA7B,EAAoCA,KAApC,CAAjB;AACA,gBAAMP,QAAQ,GAAG,IAAI,0DAAJ,CAA+B;AAACxC,mBAAK,EAALA;AAAD,aAA/B,CAAjB;AACA,gBAAMjD,IAAI,GAAG,IAAI,0CAAJ,CAAeuF,QAAf,EAAyBE,QAAzB,CAAb;AAEAzF,gBAAI,CAACwD,QAAL,CAAcyC,CAAd,GAAkBA,CAAlB;AACAjG,gBAAI,CAACwD,QAAL,CAAc0C,CAAd,GAAkBA,CAAlB;AACAlG,gBAAI,CAACwD,QAAL,CAAc2C,CAAd,GAAkBA,CAAlB;AAEA,mBAAOnG,IAAP;AACH;AAED;;;;;;;;;iBAMO,+BAA6BoG,SAA7B,EAAgDC,QAAhD,EAAkEC,OAAlE,EAAyG;AAAA,gBAAtB9E,KAAsB,uEAAN,MAAM;AAC5G,gBAAM+E,UAAU,GAAG,CAAnB;AACA,gBAAMC,GAAG,GAAGhG,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCgG,UAAjC,CAA4C,IAA5C,CAAZ;AACA,gBAAMC,IAAI,aAAML,QAAN,uBAAV;AACAG,eAAG,CAACE,IAAJ,GAAWA,IAAX,CAJ4G,CAK5G;;AACA,gBAAMC,SAAS,GAAGH,GAAG,CAACI,WAAJ,CAAgBN,OAAhB,EAAyBZ,KAA3C;AAEA,gBAAMmB,gBAAgB,GAAGN,UAAU,GAAG,CAAtC;AACA,gBAAMb,KAAK,GAAGU,SAAS,GAAGS,gBAA1B;AACA,gBAAMlB,MAAM,GAAGU,QAAQ,GAAGQ,gBAA1B;AACAL,eAAG,CAACM,MAAJ,CAAWpB,KAAX,GAAmBA,KAAnB;AACAc,eAAG,CAACM,MAAJ,CAAWnB,MAAX,GAAoBA,MAApB,CAZ4G,CAc5G;;AACAa,eAAG,CAACE,IAAJ,GAAWA,IAAX;AACAF,eAAG,CAACO,YAAJ,GAAmB,QAAnB;AACAP,eAAG,CAACQ,SAAJ,GAAgB,QAAhB;AAEAR,eAAG,CAACS,SAAJ,GAAgBzF,KAAhB;AACAgF,eAAG,CAACU,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBxB,KAAnB,EAA0BC,MAA1B,EApB4G,CAsB5G;;AACA,gBAAMwB,WAAW,GAAGvE,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYsD,SAAS,GAAGO,SAAxB,CAApB;AACAH,eAAG,CAACY,SAAJ,CAAc1B,KAAK,GAAG,CAAtB,EAAyBC,MAAM,GAAG,CAAlC;AACAa,eAAG,CAACR,KAAJ,CAAUmB,WAAV,EAAuB,CAAvB;AACAX,eAAG,CAACS,SAAJ,GAAgB,OAAhB;AACAT,eAAG,CAACa,QAAJ,CAAaf,OAAb,EAAsB,CAAtB,EAAyB,CAAzB;AAEA,mBAAOE,GAAG,CAACM,MAAX;AACH;;;;;;;;;;;;;;;;;;;;;AC1FL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaQ,mB;AAST,uCAAc;AAAA;;AAJL,eAAAC,QAAA,GAAW,EAAX;AAEC,eAAAC,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AAGT;;;;iBAED,oBAAQ;AACJ,iBAAKC,mBAAL,GAA2B,IAAI,wEAAJ,EAA3B;AACA,iBAAKA,mBAAL,CAAyBC,IAAzB,GAAgC,MAAhC;AACA,iBAAKD,mBAAL,CAAyBE,KAAzB,GAAiC,CAAC,MAAD,EAAS,MAAT,CAAjC;AACA,iBAAKF,mBAAL,CAAyBG,eAAzB,GAA2C,KAA3C,CAJI,CAMJ;AACA;;AACA,iBAAKH,mBAAL,CAAyBI,YAAzB,GAAwC,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACrDD,mBAAK,GAAGA,KAAK,CAACE,MAAN,CAAa,UAACC,IAAD,EAAU;AAC3B,uBAAOA,IAAI,CAAClF,IAAL,KAAc,QAArB;AACH,eAFO,CAAR;AAGA,qBAAO+E,KAAP;AACH,aALD;AAMH;;;iBAED,qBAAYnN,CAAZ,EAAa;AACT,iBAAK4M,QAAL,GAAgB5M,CAAhB;AACA,iBAAK6M,eAAL,CAAqBU,IAArB,CAA0BvN,CAA1B;AACH;;;;;;;yBA/BQ2M,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,kD;AAAA;AAAA;ACRhC;;AAA+D;AAAA,qBAAU,IAAAa,WAAA,QAAV;AAA6B,aAA7B;;AAA+B;;;;AAAjF,yGAA+B,MAA/B,EAA+B,YAA/B;;;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0BQ;;AACE;;AACA;;AAAI;;AAAa;;AACjB;;AAAI;;AAAe;;AACnB;;AAAI;;AAA0B;;AAChC;;;;;;AAHM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;UDpBDC,0B;AAQT,8CAAc;AAAA;;AAPJ,eAAAC,iBAAA,GAAoB,IAAI,0DAAJ,EAApB;AAEV,eAAA1J,UAAA,GAA2B,EAA3B;AAMC;;;;iBAED,oBAAQ;AACJ,iBAAK2J,GAAL,GAAW,IAAI,0CAAJ,CAAQ;AAACC,uBAAS,EAAE;AAAZ,aAAR,CAAX;AACA,iBAAKD,GAAL,CAASE,SAAT,CAAoB,qEAApB,EAAqD,UAArD;AACH;;;iBAED,qBAAS;AAAA;;AACL,gBAAMC,YAAY,GAAG,KAAKA,YAAL,CAAkBC,aAAvC;;AACAD,wBAAY,CAACE,QAAb,GAAwB,YAAM;AAAA,0DACPF,YAAY,CAACG,KADN;AAAA;;AAAA;AAAA;AAAA,sBACfC,IADe;AAEtB,sBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,wBAAM,CAACE,MAAP,GAAgB,YAAM;AAClB,wBAAI;AACA,0BAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,MAAP,CAAcC,QAAd,EAAX,CAAjB;;AACA,0BAAMC,KAAK,GAAG,OAAI,CAACC,WAAL,CAAiBN,QAAjB,CAAd;;AACA,0BAAI,CAACK,KAAL,EAAY;AACR,4BAAIE,YAAY,GAAG,oBAAnB;;AADQ,oEAEY,OAAI,CAAClB,GAAL,CAASmB,MAFrB;AAAA;;AAAA;AAER,iFAAqC;AAAA,gCAA1BvP,KAA0B;AACjCsP,wCAAY,IAAItP,KAAK,CAACwP,OAAN,GAAgB,IAAhC;AACH;AAJO;AAAA;AAAA;AAAA;AAAA;;AAKRC,6BAAK,CAACH,YAAD,CAAL;AACH,uBAND,MAMO;AACH,4BAAM3K,SAAS,GAAeqK,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,MAAP,CAAcC,QAAd,EAAX,CAA9B;;AACA,+BAAI,CAAC1K,UAAL,CAAgBzC,IAAhB,CAAqB2C,SAArB;;AACA,+BAAI,CAAC+K,YAAL,CAAkB/K,SAAlB;AACH;AACJ,qBAdD,CAcE,OAAOlE,CAAP,EAAU;AACRgP,2BAAK,CAAChP,CAAD,CAAL;AACH;AACJ,mBAlBD;;AAmBAmO,wBAAM,CAACe,UAAP,CAAkBhB,IAAlB;AAtBsB;;AAC1B,uEAAuC;AAAA;AAsBtC;AAvByB;AAAA;AAAA;AAAA;AAAA;AAwB7B,aAxBD;;AAyBAJ,wBAAY,CAACqB,KAAb;AACH;;;iBAED,sBAAajL,SAAb,EAAkC;AAC9B,iBAAKwJ,iBAAL,CAAuBH,IAAvB,CAA4BrJ,SAA5B;AACH;;;iBAEO,qBAAYkL,IAAZ,EAAgB;AACpB,mBAAO,KAAKzB,GAAL,CAAS0B,QAAT,CAAkB,UAAlB,EAA8BD,IAA9B,CAAP;AACH;;;;;;;yBApDQ3B,0B;AAA0B,O;;;cAA1BA,0B;AAA0B,0C;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACVvC;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AAA0C;AAAA,qBAAS,IAAA6B,SAAA,EAAT;AAAoB,aAApB;;AACxC;;AAA6D;;AAAM;;AACnE;;AACF;;AAGA;;AACA;;AACA;;AACE;;AACA;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAO;;AACzB;;AACA;;AACA;;AACE;;AAMF;;AACF;;AACF;;AACF;;;;AAT8B;;AAAA;;;;;;;;;;;;;;;;;;;;;ACzB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaC,kB;AAUT,sCAAc;AAAA;;AACV,eAAKC,WAAL,GAAmB,EAAnB;AACA,eAAKC,mBAAL,GAA2B,EAA3B;AACA,eAAKC,UAAL,GAAkB,EAAlB;AACA,eAAK9F,aAAL,GAAqB,IAAI3M,GAAJ,EAArB;AACA,eAAK0S,aAAL,GAAqB,IAAIC,GAAJ,EAArB;AACA,eAAKC,kBAAL,GAA0B,IAAID,GAAJ,EAA1B;AACH;;;;iBAEM,sBAAaE,EAAb,EAA2B;AAAA;;AAC9B,gBAAM5L,SAAS,GAAG,IAAI,oDAAJ,EAAlB;AACAA,qBAAS,CAAC2D,IAAV,GAAiBiI,EAAE,CAACjI,IAApB;AAEA3D,qBAAS,CAAC+K,YAAV,CAAuBa,EAAvB;AAEA5L,qBAAS,CAACG,QAAV,CAAmBJ,OAAnB,CAA2B,UAACK,OAAD,EAAmB/D,KAAnB,EAA6B;AACpD,kBAAIwP,MAAM,GAAG,KAAb;AACA,kBAAIC,WAAW,GAAG,KAAlB;AAEA1L,qBAAO,CAACC,QAAR,CAAiBN,OAAjB,CAAyB,UAACO,OAAD,EAAa;AAClCF,uBAAO,CAACQ,aAAR,CAAsBb,OAAtB,CAA8B,UAACc,GAAD,EAAS;AACnC,sBAAMD,aAAa,GAAGC,GAAG,CAACG,KAA1B;AACA,sBAAM+K,gBAAgB,GAAGnL,aAAa,CAAC0D,IAAd,EAAzB;;AACA,sBAAI,CAAC,OAAI,CAAC9D,SAAL,CAAetD,IAAf,CAAoB,UAAA8O,CAAC;AAAA,2BAAIA,CAAC,KAAK1L,OAAV;AAAA,mBAArB,CAAL,EAA8C;AAC1C,2BAAI,CAACE,SAAL,CAAenD,IAAf,CAAoBiD,OAApB;;AACAuL,0BAAM,GAAG,IAAT;AACH;;AACD,sBAAI,CAAC,OAAI,CAACN,mBAAL,CAAyBrO,IAAzB,CAA8B,UAAA8O,CAAC;AAAA,2BAAI,OAAI,CAACC,WAAL,CAAiBD,CAAjB,EAAoBpL,aAApB,CAAJ;AAAA,mBAA/B,CAAL,EAA6E;AACzE,2BAAI,CAAC2K,mBAAL,CAAyBlO,IAAzB,CAA8BuD,aAA9B;;AACAkL,+BAAW,GAAG,IAAd;AACH;;AAED,sBAAMI,MAAM,GAAGnI,IAAI,CAACmI,MAAL,EAAf;AACA,sBAAM9H,KAAK,GAAG,sDAAsB8H,MAAtB,CAAd;AACA,sBAAMC,UAAU,GAAG,mDAAmB,UAAAC,CAAC;AAAA,2BAAI,uCAAOF,MAAM,GAAG,GAAhB,EAAqBE,CAArB,EAAwB,GAAxB,EAA6B5B,QAA7B,EAAJ;AAAA,mBAApB,CAAnB,CAdmC,CAenC;;AAEA,sBAAIqB,MAAM,IAAIC,WAAd,EAA2B;AACvB;AACA;AAEA,wBAAID,MAAJ,EAAY;AACR,0BAAMQ,cAAc,GAAG,IAAIX,GAAJ,EAAvB;AACAW,oCAAc,CAACzH,GAAf,CAAmBhE,aAAa,CAAC0D,IAAd,EAAnB,EAAyC,IAAI,2CAAJ,CAAUF,KAAV,CAAzC;;AACA,6BAAI,CAACkI,YAAL,CAAkB1H,GAAlB,CAAsBtE,OAAtB,EAA+B+L,cAA/B;;AAEA,0BAAME,mBAAmB,GAAG,IAAIb,GAAJ,EAA5B;AACAa,yCAAmB,CAAC3H,GAApB,CAAwBhE,aAAa,CAAC0D,IAAd,EAAxB,EAA8C6H,UAA9C;;AACA,6BAAI,CAACK,iBAAL,CAAuB5H,GAAvB,CAA2BtE,OAA3B,EAAoCiM,mBAApC;AACH,qBARD,MAQO;AACH,0BAAME,WAAW,GAAG,OAAI,CAACH,YAAL,CAAkBlS,GAAlB,CAAsBkG,OAAtB,CAApB;;AACAmM,iCAAW,CAAC7H,GAAZ,CAAgBhE,aAAa,CAAC0D,IAAd,EAAhB,EAAsC,IAAI,2CAAJ,CAAUF,KAAV,CAAtC;;AAEA,0BAAMsI,gBAAgB,GAAG,OAAI,CAACF,iBAAL,CAAuBpS,GAAvB,CAA2BkG,OAA3B,CAAzB;;AACAoM,sCAAgB,CAAC9H,GAAjB,CAAqBhE,aAAa,CAAC0D,IAAd,EAArB,EAA2C6H,UAA3C;AACH;AACJ,mBAnBD,MAmBO;AACH;AACA,wBAAMQ,eAAe,GAAG,OAAI,CAACL,YAAL,CAAkBlS,GAAlB,CAAsBkG,OAAtB,CAAxB;;AACA,wBAAMsM,oBAAoB,GAAG,OAAI,CAACJ,iBAAL,CAAuBpS,GAAvB,CAA2BkG,OAA3B,CAA7B;;AACA,wBAAIqM,eAAe,KAAK9I,SAAxB,EAAmC;AAC/B,0BAAMgJ,QAAQ,GAAGF,eAAe,CAACvS,GAAhB,CAAoBwG,aAAa,CAAC0D,IAAd,EAApB,CAAjB;AACA,0BAAMwI,aAAa,GAAGH,eAAe,CAACvS,GAAhB,CAAoBwG,aAAa,CAAC0D,IAAd,EAApB,CAAtB;;AACA,0BAAIuI,QAAQ,KAAKhJ,SAAjB,EAA4B;AACxB8I,uCAAe,CAAC/H,GAAhB,CAAoBhE,aAAa,CAAC0D,IAAd,EAApB,EAA0C,IAAI,2CAAJ,CAAUF,KAAV,CAA1C;AACAwI,4CAAoB,CAAChI,GAArB,CAAyBhE,aAAa,CAAC0D,IAAd,EAAzB,EAA+C6H,UAA/C;AACH;AACJ,qBAPD,MAOO;AACH,0BAAME,eAAc,GAAG,IAAIX,GAAJ,EAAvB;;AACA,0BAAMa,oBAAmB,GAAG,IAAIb,GAAJ,EAA5B;;AACAW,qCAAc,CAACzH,GAAf,CAAmBhE,aAAa,CAAC0D,IAAd,EAAnB,EAAyC,IAAI,2CAAJ,CAAUF,KAAV,CAAzC;;AACAmI,0CAAmB,CAAC3H,GAApB,CAAwBhE,aAAa,CAAC0D,IAAd,EAAxB,EAA8C6H,UAA9C;;AACA,6BAAI,CAACG,YAAL,CAAkB1H,GAAlB,CAAsBtE,OAAtB,EAA+B+L,eAA/B;;AACA,6BAAI,CAACG,iBAAL,CAAuB5H,GAAvB,CAA2BtE,OAA3B,EAAoCiM,oBAApC;AACH;AACJ;AACJ,iBAxDD;AAyDH,eA1DD;AA2DH,aA/DD,EAN8B,CAuE9B;;AAvE8B,wDAwEXvM,SAAS,CAAC+M,YAxEC;AAAA;;AAAA;AAwE9B,qEAA2C;AAAA,oBAAhCC,IAAgC;;AACvC,qBAAKtH,aAAL,CAAmBrE,GAAnB,CAAuB2L,IAAvB;AACH;AA1E6B;AAAA;AAAA;AAAA;AAAA;;AA4E9B,iBAAKlN,UAAL,CAAgBzC,IAAhB,CAAqB2C,SAArB;AACA,mBAAO,IAAP;AACH;;;iBAEM,yBAAa;AAChB,iBAAKQ,SAAL,CAAeyM,IAAf,CAAoB,UAAChH,CAAD,EAAYiH,CAAZ;AAAA,qBAA0BjH,CAAC,CAACC,aAAF,CAAgBgH,CAAhB,CAA1B;AAAA,aAApB;AACH;;;iBAEM,8BAAkB;AACrB,iBAAKC,kBAAL,CAAwBF,IAAxB,CAA6B,UAAChH,CAAD,EAAIiH,CAAJ;AAAA,qBAAUjH,CAAC,CAAC3B,IAAF,GAAS4B,aAAT,CAAuBgH,CAAC,CAAC5I,IAAF,EAAvB,CAAV;AAAA,aAA7B;AACH;;;iBAEM,qBAAY2B,CAAZ,EAA2BiH,CAA3B,EAAwC;AAC3C,mBAAOE,KAAK,CAACC,OAAN,CAAcpH,CAAd,KACHmH,KAAK,CAACC,OAAN,CAAcH,CAAd,CADG,IAEHjH,CAAC,CAACqH,MAAF,KAAaJ,CAAC,CAACI,MAFZ,IAGHrH,CAAC,CAACsH,KAAF,CAAQ,UAACC,GAAD,EAAMnR,KAAN;AAAA,qBAAgBmR,GAAG,KAAKN,CAAC,CAAC7Q,KAAD,CAAzB;AAAA,aAAR,CAHJ;AAIH;;;iBAEM,8BAAqBoR,WAArB,EAA0C;AAAA;;AAC7C,gBAAIC,WAAW,GAAG,CAAC,CAAnB;;AACA,iBAAKnC,mBAAL,CAAyBrO,IAAzB,CAA8B,UAAC0D,aAAD,EAAgBvE,KAAhB,EAA0B;AACpD,kBAAI,OAAI,CAAC4P,WAAL,CAAiBrL,aAAjB,EAAgC6M,WAAhC,CAAJ,EAAkD;AAC9CC,2BAAW,GAAGrR,KAAd;AACA,uBAAO,IAAP;AACH;AACJ,aALD;;AAMA,mBAAOqR,WAAP;AACH;;;iBAEM,4BAAmBpN,OAAnB,EAAoC6C,YAApC,EAAwD;AAC3D,gBAAMsJ,WAAW,GAAG,KAAKH,YAAL,CAAkBlS,GAAlB,CAAsBkG,OAAtB,CAApB;AACA,mBAAOmM,WAAW,CAACrS,GAAZ,CAAgB+I,YAAhB,CAAP;AACH;;;iBAEM,iCAAwB7C,OAAxB,EAAyC6C,YAAzC,EAA+DzJ,KAA/D,EAA4E;AAC/E,gBAAM+S,WAAW,GAAG,KAAKD,iBAAL,CAAuBpS,GAAvB,CAA2BkG,OAA3B,CAApB;AACA,gBAAM6G,KAAK,GAAGsF,WAAW,CAACrS,GAAZ,CAAgB+I,YAAhB,CAAd;AACA,gBAAMiB,KAAK,GAAG,IAAI,2CAAJ,CAAU+C,KAAK,CAACzN,KAAD,CAAf,CAAd;AACA,mBAAO0K,KAAP;AACH;;;eAED,eAAqB;AACjB,mBAAO,KAAKkH,WAAZ;AACH;;;eAED,eAAoB;AAChB,mBAAO,KAAKE,UAAZ;AACH;;;eAED,eAA6B;AACzB,mBAAO,KAAKD,mBAAZ;AACH;;;eAED,eAAwB;AACpB,mBAAO,KAAKI,kBAAZ;AACH;;;eAED,eAAgB;AACZ,mBAAO,KAAKF,aAAZ;AACH;;;eAED,eAAgB;AACZ,mBAAO,KAAK/F,aAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrKL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACcoB;;AAEQ;AAAA;;AAAA;;AAAA,qDAAoC,EAApC,EAAwCiI,MAAxC;AAAsC,WAAtC;;AACJ;;AAAU;;AAAK;;AACnB;;;;;;;;AAoBA;;AAEQ;AAAA;;AAAA;;AAAA,uDAAqC,EAArC,EAAyCA,MAAzC;AAAuC,WAAvC;;AACJ;;AAAU;;AAAK;;AACnB;;;;;;AAoBA;;AAEI;;AACJ;;;;;;;AAFY;;AACR;;AAAA;;;;;;;;AAkCJ;;AAEQ;AAAA;;AAAA;;AAAA,yCAA4B,EAA5B;AAAgC,mBAAF,qBAAE;AAAF,WAA9B;;AACJ;;AAAU;;AAAK;;AACnB;;;;;;;;AAoBA;;AAEQ;AAAA;;AAAA;;AAAA,0CAA6B,EAA7B;AAAiC,mBAAF,qBAAE;AAAF,WAA/B;;AACJ;;AAAU;;AAAK;;AACnB;;;;;;AAmBR;;AACI;;AACA;;AACJ;;;;;;;;;;;;;;;AAEI;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAKjC;;AACI;;AACQ;AAAA;;AAAA;;AAAA;;AAAA,oDAAkC,QAAApW,KAAA,gCAAlC,EAAqEoW,MAArE;AAAmE,WAAnE;;AACJ;;AAAU;;AAAM;;AACpB;;AACA;;;;AACJ;;AAEA;;AACI;;;;AACA;;AACQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AAAU;;AAAM;;AACpB;;AACJ;;AACJ;;AACJ;;;;;;;;AArBuB;;AAAA,yFAAiB,SAAjB,EAAiB,iRAAjB;;AAUR;;AAAA;;AAIA;;AAAA;;;;;;AAhBnB;;AACI;;AAuBJ;;;;;;AAvB2B;;AAAA;;;;;;AA2B3B;;AACI;;AACA;;AACJ;;;;;;;;AAEI;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAIjC;;AACI;;AACQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AAAU;;AAAM;;AACpB;;AACA;;;;AACJ;;AACA;;AACI;;;;AACA;;AACQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AAAU;;AAAM;;AACpB;;AACJ;;AACJ;;AACJ;;;;;;;;AAnBuB;;AAAA,yFAAiB,SAAjB,EAAiB,2QAAjB;;AASR;;AAAA;;AAGA;;AAAA;;;;;;AAdnB;;AACI;;AAqBJ;;;;;;AArB2B;;AAAA;;;;UDpK1BC,gB;AA0CT,kCAAoBhW,UAApB,EACoBC,MADpB,EAEoBC,GAFpB,EAGmBT,GAHnB,EAIoBU,OAJpB,EAKmBZ,UALnB,EAMoB0W,QANpB,EAMyC;AAAA;;AANrB,eAAAjW,UAAA,GAAAA,UAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,GAAA,GAAAA,GAAA;AACD,eAAAT,GAAA,GAAAA,GAAA;AACC,eAAAU,OAAA,GAAAA,OAAA;AACD,eAAAZ,UAAA,GAAAA,UAAA;AACC,eAAA0W,QAAA,GAAAA,QAAA;AA7CpB,eAAAtW,KAAA,GAAe,IAAI,oDAAJ,EAAf;AAEA,eAAAD,iBAAA,GAAoB,IAApB;AACA,eAAAe,eAAA,GAAkB,KAAlB;AAWA,eAAAyV,qBAAA,GAAwB,EAAxB;AACA,eAAAC,sBAAA,GAAyB,EAAzB;AAEA,eAAAxV,iBAAA,GAAoB,KAApB;AACA,eAAAC,oBAAA,GAAuB,EAAvB;AACA,eAAAC,qBAAA,GAAwB,EAAxB;AAGA,eAAAuV,mBAAA,GAAsB,EAAtB;AACA,eAAAC,oBAAA,GAAuB,EAAvB;AAEA,eAAAtV,gBAAA,GAAmB,KAAnB;AACA,eAAAC,kBAAA,GAAqB,EAArB;AACA,eAAAC,mBAAA,GAAsB,EAAtB;AAKA,eAAAC,YAAA,GAA4B,IAAIC,GAAJ,EAA5B;AACA,eAAAC,mBAAA,GAAgC,IAAID,GAAJ,EAAhC;AACA,eAAAE,UAAA,GAA0B,IAAIF,GAAJ,EAA1B;AACA,eAAAG,iBAAA,GAA8B,IAAIH,GAAJ,EAA9B;AAWC;;;;iBAED,oBAAQ;AACJ,iBAAKkD,IAAL;AACA,iBAAKiS,2BAAL,GAAmC,uEAAoBC,KAApB,CAA0B,KAAKhX,UAAL,CAAgBiX,gBAA1C,EAA4D,KAAKP,QAAjE,CAAnC;AACH;;;iBAED,gCAAuBQ,UAAvB,EAAwC;AACpC,gBAAMC,SAAS,GAAGD,UAAU,CAACE,IAA7B;AACA,gBAAMC,OAAO,GAAgB7M,QAAQ,CAAC8M,cAAT,CAAwBH,SAAxB,CAA7B;;AACA,gBAAI,KAAKtV,mBAAL,CAAyB0V,GAAzB,CAA6BL,UAA7B,CAAJ,EAA8C;AAC1C,mBAAKrV,mBAAL,WAAgCqV,UAAhC;AACA,mBAAKR,QAAL,CAAcc,WAAd,CAA0BH,OAA1B,EAAmC,SAAnC;AACH,aAHD,MAGO;AACH,mBAAKxV,mBAAL,CAAyBqI,GAAzB,CAA6BgN,UAA7B;AACA,mBAAKR,QAAL,CAAce,QAAd,CAAuBJ,OAAvB,EAAgC,SAAhC;AACH;AACJ;;;iBAED,8BAAqBK,QAArB,EAAoC;AAChC,gBAAMP,SAAS,GAAGO,QAAQ,CAACN,IAA3B;AACA,gBAAMC,OAAO,GAAgB7M,QAAQ,CAAC8M,cAAT,CAAwBH,SAAxB,CAA7B;;AACA,gBAAI,KAAKpV,iBAAL,CAAuBwV,GAAvB,CAA2BG,QAA3B,CAAJ,EAA0C;AACtC,mBAAK3V,iBAAL,WAA8B2V,QAA9B;AACA,mBAAKhB,QAAL,CAAcc,WAAd,CAA0BH,OAA1B,EAAmC,SAAnC;AACH,aAHD,MAGO;AACH,mBAAKtV,iBAAL,CAAuBmI,GAAvB,CAA2BwN,QAA3B;AACA,mBAAKhB,QAAL,CAAce,QAAd,CAAuBJ,OAAvB,EAAgC,SAAhC;AACH;AACJ;;;iBAED,oBAAWM,IAAX,EAA4B;AAAA;;AACxB,yDAAQ,YAAM;AACV,kBAAI,OAAI,CAAC9V,mBAAL,CAAyB8K,IAAzB,KAAkC,CAAlC,IAAuC,OAAI,CAAC5K,iBAAL,CAAuB4K,IAAvB,KAAgC,CAA3E,EAA8E;AAAA,4DAEtD,OAAI,CAAC9K,mBAFiD;AAAA;;AAAA;AAE1E,yEAA8C;AAAA,wBAAnCmE,KAAmC;AAC1C,wBAAM4R,SAAS,GAAgBpN,QAAQ,CAAC8M,cAAT,CAAwBtR,KAAK,CAACoR,IAA9B,CAA/B;;AACA,2BAAI,CAACV,QAAL,CAAce,QAAd,CAAuBG,SAAvB,EAAkC,MAAlC;;AACA,2BAAI,CAAClB,QAAL,CAAcc,WAAd,CAA0BI,SAA1B,EAAqC,SAArC;AACH;AANyE;AAAA;AAAA;AAAA;AAAA;;AAAA,4DAOtD,OAAI,CAAC7V,iBAPiD;AAAA;;AAAA;AAO1E,yEAA4C;AAAA,wBAAjCiE,MAAiC;AACxC,wBAAM6R,OAAO,GAAgBrN,QAAQ,CAAC8M,cAAT,CAAwBtR,MAAK,CAACoR,IAA9B,CAA7B;;AACA,2BAAI,CAACV,QAAL,CAAce,QAAd,CAAuBI,OAAvB,EAAgC,MAAhC;;AACA,2BAAI,CAACnB,QAAL,CAAcc,WAAd,CAA0BK,OAA1B,EAAmC,SAAnC;AACH;AAXyE;AAAA;AAAA;AAAA;AAAA;;AAa1E,oBAAMC,UAAU,GAAG;AACfH,sBAAI,EAAJA,IADe;AAEfI,8BAAY,EAAE9B,KAAK,CAAC+B,IAAN,CAAW,OAAI,CAACnW,mBAAhB,CAFC;AAGfoW,4BAAU,EAAEhC,KAAK,CAAC+B,IAAN,CAAW,OAAI,CAACjW,iBAAhB;AAHG,iBAAnB;;AAKA,uBAAI,CAAC/B,UAAL,CAAgBkY,UAAhB,CAA2BJ,UAA3B;;AACA,oBAAMlJ,UAAU,GAAsB,qEAAkBoI,KAAlB,CAAwBc,UAAxB,CAAtC;;AACA,uBAAI,CAACf,2BAAL,CAAiCmB,UAAjC,CAA4CtJ,UAA5C,EAAwD,IAAxD;;AACA,uBAAI,CAAC/M,mBAAL,CAAyBsW,KAAzB;;AACA,uBAAI,CAACpW,iBAAL,CAAuBoW,KAAvB;AACH;AACJ,aAzBD;AA0BH;;;iBAED,uBAAW;AACP,iBAAKpB,2BAAL,CAAiCqB,WAAjC;AACH,W,CAED;;;;iBAEA,yBAAa;AACT,oBAAQ,KAAKvB,mBAAb;AACI,mBAAK,UAAL;AACI,qBAAKwB,gBAAL;AACA;;AACJ,mBAAK,WAAL;AACI,qBAAKC,iBAAL;AACA;;AACJ;AACI,qBAAKC,kBAAL,CAAwBC,UAAxB,GAAqC,iDAAY,KAAKxY,UAAL,CAAgByY,gBAAhB,CAAiCD,UAA7C,CAArC;AARR;;AAUA,iBAAKJ,WAAL;AACH;;;iBAED,4BAAmB;AACf,iBAAKG,kBAAL,CAAwBC,UAAxB,CAAmC1C,IAAnC,CAAwC,UAAChH,CAAD,EAAIiH,CAAJ;AAAA,qBAAUjH,CAAC,CAAC5D,IAAF,CAAO6D,aAAP,CAAqBgH,CAAC,CAAC7K,IAAvB,CAAV;AAAA,aAAxC;AACH;;;iBAED,6BAAoB;AAChB,iBAAKqN,kBAAL,CAAwBC,UAAxB,CAAmC1C,IAAnC,CAAwC,UAAChH,CAAD,EAAIiH,CAAJ;AAAA,qBAAUA,CAAC,CAAC7K,IAAF,CAAO6D,aAAP,CAAqBD,CAAC,CAAC5D,IAAvB,CAAV;AAAA,aAAxC;AACH;;;iBAED,0BAAc;AACV,oBAAQ,KAAK4L,oBAAb;AACI,mBAAK,UAAL;AACI,qBAAK4B,iBAAL;AACA;;AACJ,mBAAK,WAAL;AACI,qBAAKC,kBAAL;AACA;;AACJ;AACI;AACA,qBAAKC,mBAAL,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,aAAtC,GAAsD,iDAAY,KAAK9Y,UAAL,CAAgB+Y,kBAAhB,CAAmCF,SAAnC,CAA6C,CAA7C,EAAgDC,aAA5D,CAAtD;AATR;;AAWA,iBAAKV,WAAL;AACH;;;iBAED,6BAAoB;AAChB,iBAAKG,kBAAL,CAAwBC,UAAxB,CAAmC1C,IAAnC,CAAwC,UAAChH,CAAD,EAAIiH,CAAJ;AAAA,qBAAUjH,CAAC,CAACvM,KAAF,CAAQwM,aAAR,CAAsBgH,CAAC,CAACxT,KAAxB,CAAV;AAAA,aAAxC;AACH;;;iBAED,8BAAqB;AACjB,iBAAKgW,kBAAL,CAAwBC,UAAxB,CAAmC1C,IAAnC,CAAwC,UAAChH,CAAD,EAAIiH,CAAJ;AAAA,qBAAUA,CAAC,CAACxT,KAAF,CAAQwM,aAAR,CAAsBD,CAAC,CAACvM,KAAxB,CAAV;AAAA,aAAxC;AACH,W,CAED;;;;iBAEA,2BAAe;AACX,oBAAQ,KAAKoU,qBAAb;AACI,mBAAK,UAAL;AACI,qBAAKqC,kBAAL;AACA;;AACJ,mBAAK,WAAL;AACI,qBAAKC,mBAAL;AACA;;AACJ;AACI;AACA,qBAAKL,mBAAL,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,aAAtC,GAAsD,iDAAY,KAAK9Y,UAAL,CAAgB+Y,kBAAhB,CAAmCF,SAAnC,CAA6C,CAA7C,EAAgDC,aAA5D,CAAtD;AATR;;AAWA,iBAAKV,WAAL;AACH;;;iBAED,8BAAqB;AAAA;;AACjB,iBAAKQ,mBAAL,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,aAAtC,CAAoDhD,IAApD,CAAyD,UAAChH,CAAD,EAAIiH,CAAJ,EAAU;AAC/D,kBAAMmD,EAAE,GAAG,OAAI,CAAC9Y,KAAL,CAAW+Y,eAAX,CAA2BrK,CAAC,CAAC5D,IAA7B,CAAX;;AACA,kBAAMkO,EAAE,GAAG,OAAI,CAAChZ,KAAL,CAAW+Y,eAAX,CAA2BpD,CAAC,CAAC7K,IAA7B,CAAX;;AACA,qBAAOgO,EAAE,CAACnK,aAAH,CAAiBqK,EAAjB,CAAP;AACH,aAJD;AAKH;;;iBAED,+BAAsB;AAAA;;AAClB,iBAAKR,mBAAL,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,aAAtC,CAAoDhD,IAApD,CAAyD,UAAChH,CAAD,EAAIiH,CAAJ,EAAU;AAC/D,kBAAMmD,EAAE,GAAG,OAAI,CAAC9Y,KAAL,CAAW+Y,eAAX,CAA2BrK,CAAC,CAAC5D,IAA7B,CAAX;;AACA,kBAAMkO,EAAE,GAAG,OAAI,CAAChZ,KAAL,CAAW+Y,eAAX,CAA2BpD,CAAC,CAAC7K,IAA7B,CAAX;;AACA,qBAAOkO,EAAE,CAACrK,aAAH,CAAiBmK,EAAjB,CAAP;AACH,aAJD;AAKH;;;iBAED,4BAAgB;AACZ,oBAAQ,KAAKtC,sBAAb;AACI,mBAAK,UAAL;AACI,qBAAKyC,mBAAL;AACA;;AACJ,mBAAK,WAAL;AACI,qBAAKC,oBAAL;AACA;;AACJ;AACI;AACA,qBAAKV,mBAAL,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,aAAtC,GAAsD,iDAAY,KAAK9Y,UAAL,CAAgB+Y,kBAAhB,CAAmCF,SAAnC,CAA6C,CAA7C,EAAgDC,aAA5D,CAAtD;AATR;;AAWA,iBAAKV,WAAL;AACH;;;iBAED,+BAAsB;AAClB,iBAAKQ,mBAAL,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,aAAtC,CAAoDhD,IAApD,CAAyD,UAACC,CAAD,EAAIjH,CAAJ,EAAU;AAC/D,qBAAOA,CAAC,CAACvM,KAAF,CAAQwM,aAAR,CAAsBgH,CAAC,CAACxT,KAAxB,CAAP;AACH,aAFD;AAGH;;;iBAED,gCAAuB;AACnB,iBAAKqW,mBAAL,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,aAAtC,CAAoDhD,IAApD,CAAyD,UAAChH,CAAD,EAAIiH,CAAJ,EAAU;AAC/D,qBAAOjH,CAAC,CAACvM,KAAF,CAAQwM,aAAR,CAAsBgH,CAAC,CAACxT,KAAxB,CAAP;AACH,aAFD;AAGH;;;iBAED,qCAA4BA,KAA5B,EAA2CgX,KAA3C,EAAgD;AAC5CA,iBAAK,CAACC,eAAN;AACA,iBAAKlY,qBAAL,GAA6BiB,KAA7B;AACA,iBAAK6V,WAAL;AACH;;;iBAED,mCAA0B7V,KAA1B,EAAyCgX,KAAzC,EAA8C;AAC1C,iBAAK7X,mBAAL,GAA2Ba,KAA3B;AACA,iBAAK6V,WAAL;AACAmB,iBAAK,CAACC,eAAN;AACH;;;iBAED,oCAA2BjX,KAA3B,EAA0CgX,KAA1C,EAA+C;AAC3C,iBAAKlY,oBAAL,GAA4BkB,KAA5B;AACA,iBAAK6V,WAAL;AACAmB,iBAAK,CAACC,eAAN;AACH;;;iBAED,kCAAyBjX,KAAzB,EAAwCgX,KAAxC,EAA6C;AACzCA,iBAAK,CAACC,eAAN;AACA,iBAAK/X,kBAAL,GAA0Bc,KAA1B;AACA,iBAAK6V,WAAL;AACH;;;iBAED,sBAAatJ,CAAb,EAAwBiH,CAAxB,EAAiC;AAC7B,gBAAM0D,EAAE,GAAG3K,CAAC,CAAC4K,WAAF,EAAX;AACA,gBAAMC,EAAE,GAAG5D,CAAC,CAAC2D,WAAF,EAAX;AAGA,mBAAQD,EAAE,CAACG,QAAH,CAAYD,EAAZ,KAAmBA,EAAE,CAACC,QAAH,CAAYH,EAAZ,CAA3B;AACH;;;iBAED,gBAAO;AACH,iBAAKI,SAAL,GAAiB,KAAK7Z,UAAL,CAAgByY,gBAAjC;AACA,iBAAKqB,WAAL,GAAmB,KAAK9Z,UAAL,CAAgB+Y,kBAAnC;AACA,iBAAKR,kBAAL,GAA0B,iDAAY,KAAKsB,SAAjB,CAA1B;AACA,iBAAKjB,mBAAL,GAA2B,iDAAY,KAAKkB,WAAjB,CAA3B;AAEA,iBAAKlW,oBAAL,GAA4B,KAAK5D,UAAL,CAAgBmC,aAA5C;AACA,iBAAKkC,kBAAL,GAA0B,KAAKrE,UAAL,CAAgBqC,WAA1C;AACH;;;iBAEM,wBAAY;AAAA,wDACU,KAAKyX,WAAL,CAAiBjB,SAAjB,CAA2B,CAA3B,EAA8BC,aADxC;AAAA;;AAAA;AACf,qEAAsE;AAAA,oBAA3D5B,UAA2D;;AAClE,oBAAI,CAAC,KAAKlX,UAAL,CAAgB+Z,mBAAhB,CAAoCxC,GAApC,CAAwCL,UAAU,CAAChM,IAAnD,CAAL,EAA+D;AAC3D,sBAAM0M,SAAS,GAAgBpN,QAAQ,CAAC8M,cAAT,CAAwBJ,UAAU,CAACE,IAAnC,CAA/B;AACA,uBAAKV,QAAL,CAAce,QAAd,CAAuBG,SAAvB,EAAkC,SAAlC;AACH;AACJ;AANc;AAAA;AAAA;AAAA;AAAA;;AAAA,yDAQQ,KAAKiC,SAAL,CAAerB,UARvB;AAAA;;AAAA;AAQf,wEAAkD;AAAA,oBAAvCd,QAAuC;;AAC9C,oBAAI,CAAC,KAAK1X,UAAL,CAAgBga,iBAAhB,CAAkCzC,GAAlC,CAAsCG,QAAQ,CAACxM,IAA/C,CAAL,EAA2D;AACvD,sBAAM2M,OAAO,GAAgBrN,QAAQ,CAAC8M,cAAT,CAAwBI,QAAQ,CAACN,IAAjC,CAA7B;AACA,uBAAKV,QAAL,CAAce,QAAd,CAAuBI,OAAvB,EAAgC,SAAhC;AACH;AACJ;AAbc;AAAA;AAAA;AAAA;AAAA;AAclB;;;iBAED,4BAAgB;AAAA;;AACZ,gBAAMoC,YAAY,GAAG,IAAI,wEAAJ,EAArB;AAEAA,wBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,wBAAY,CAACE,SAAb,GAAyB,OAAzB;AACAF,wBAAY,CAACG,SAAb,GAAyB,MAAzB;AACAH,wBAAY,CAACI,QAAb,GAAwB,MAAxB;AACAJ,wBAAY,CAACK,QAAb,GAAwB,MAAxB;;AACA,gBAAMC,SAAS,GAAG,KAAK3Z,OAAL,CAAa4Z,IAAb,CAAkB,4FAAlB,EAAyCP,YAAzC,EAAuDQ,WAAvD,GAAqEC,SAArE,GAAiF/X,IAAjF,CAAsF,YAAM;AAC1G,qBAAI,CAACoU,2BAAL,CAAiC4D,WAAjC;;AACA,qBAAI,CAAC5D,2BAAL,GAAmC,uEAAoBC,KAApB,CAA0B,OAAI,CAAChX,UAAL,CAAgBiX,gBAA1C,EAA4D,OAAI,CAACP,QAAjE,CAAnC;;AACA,qBAAI,CAACkE,cAAL;;AACA,qBAAI,CAACC,aAAL;;AACA,qBAAI,CAAC9D,2BAAL,CAAiC+D,SAAjC;;AACA,qBAAI,CAAC1C,WAAL;AACH,aAPiB,CAAlB;AAQH;;;iBAED,0BAAc;AAAA,yDAEe,KAAK0B,WAAL,CAAiBjB,SAAjB,CAA2B,CAA3B,EAA8BC,aAF7C;AAAA;;AAAA;AAEV,wEAAsE;AAAA,oBAA3D5B,UAA2D;AAClE,oBAAMU,SAAS,GAAgBpN,QAAQ,CAAC8M,cAAT,CAAwBJ,UAAU,CAACE,IAAnC,CAA/B;AACA,qBAAKV,QAAL,CAAcc,WAAd,CAA0BI,SAA1B,EAAqC,MAArC;AACH;AALS;AAAA;AAAA;AAAA;AAAA;;AAAA,yDAOa,KAAKiC,SAAL,CAAerB,UAP5B;AAAA;;AAAA;AAOV,wEAAkD;AAAA,oBAAvCd,QAAuC;AAC9C,oBAAMG,OAAO,GAAgBrN,QAAQ,CAAC8M,cAAT,CAAwBI,QAAQ,CAACN,IAAjC,CAA7B;AACA,qBAAKV,QAAL,CAAcc,WAAd,CAA0BK,OAA1B,EAAmC,MAAnC;AACH;AAVS;AAAA;AAAA;AAAA;AAAA;AAWb;;;iBAED,yBAAa;AAAA,yDACa,KAAK7X,UAAL,CAAgBO,eAD7B;AAAA;;AAAA;AACT,wEAAuD;AAAA,oBAA5C0I,OAA4C;;AAAA,6DAC1BA,OAAO,CAAC8O,YADkB;AAAA;;AAAA;AACnD,4EAA+C;AAAA,wBAApCb,UAAoC;AAC3C,wBAAMU,SAAS,GAAgBpN,QAAQ,CAAC8M,cAAT,CAAwBJ,UAAU,CAACE,IAAnC,CAA/B;AACA,yBAAKV,QAAL,CAAce,QAAd,CAAuBG,SAAvB,EAAkC,MAAlC;AACH;AAJkD;AAAA;AAAA;AAAA;AAAA;;AAAA,6DAM5B3O,OAAO,CAACgP,UANoB;AAAA;;AAAA;AAMnD,4EAA2C;AAAA,wBAAhCP,QAAgC;AACvC,wBAAMG,OAAO,GAAgBrN,QAAQ,CAAC8M,cAAT,CAAwBI,QAAQ,CAACN,IAAjC,CAA7B;AACA,yBAAKV,QAAL,CAAce,QAAd,CAAuBI,OAAvB,EAAgC,MAAhC;AACH;AATkD;AAAA;AAAA;AAAA;AAAA;AAUtD;AAXQ;AAAA;AAAA;AAAA;AAAA;AAYZ;;;iBAEM,qBAAS;AACZxX,mBAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,iBAAKyW,2BAAL,CAAiC1R,SAAjC;AACH;;;iBAEM,qBAAS;AACZ,iBAAK0R,2BAAL,CAAiC/R,SAAjC;AACH;;;iBAED,yBAAgBE,KAAhB,EAAqB;AAAA;;AACjB,gBAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,mEAAME,KAAN,CAAY,IAAZ,EAAkBzC,IAAlB,CAAuB,YAAM;AACzB,uBAAI,CAACoU,2BAAL,CAAiC/R,SAAjC;AACH,eAFD;AAGH,aAJD,MAIO;AACH,mBAAK+R,2BAAL,CAAiC1R,SAAjC;AACH;AACJ;;;iBAED,sBAAa0V,CAAb,EAAc;AAAA;;AACV,iBAAKhZ,iBAAL,CAAuBoW,KAAvB;AACA,iBAAKtW,mBAAL,CAAyBsW,KAAzB;;AAEA,iBAAKpB,2BAAL,CAAiC4D,WAAjC;;AACA,iBAAK3a,UAAL,CAAgBgb,sBAAhB,CAAuCD,CAAvC;AACA,iBAAKjW,IAAL;AACA,iBAAK5E,GAAL,CAAS6E,aAAT;;AACA,iEAAMK,KAAN,CAAY,IAAZ,EAAkBzC,IAAlB,CAAuB,YAAM;AACzBtC,qBAAO,CAACC,GAAR,CAAY,YAAZ;AACA,qBAAI,CAACyW,2BAAL,GAAmC,uEAAoBC,KAApB,CAA0B,OAAI,CAAChX,UAAL,CAAgBiX,gBAA1C,EAA4D,OAAI,CAACP,QAAjE,CAAnC;AACArW,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACyW,2BAAL,CAAiC/N,QAA7C;;AACA,qBAAI,CAAC+N,2BAAL,CAAiC+D,SAAjC;;AACA,qBAAI,CAACF,cAAL;;AACA,qBAAI,CAACC,aAAL;;AACA,qBAAI,CAAC5V,YAAL;AACH,aARD;;AASA5E,mBAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;;iBAED,sBAAU;AACN,iBAAKyW,2BAAL,CAAiC4D,WAAjC;AACH;;;;;;;yBA5WQlE,gB,EAAgB,8J,EAAA,mI,EAAA,2H,EAAA,gI,EAAA,mI,EAAA,iI,EAAA,wH;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA,kB;AAAA,gB;AAAA,soC;AAAA;AAAA;AClB7B;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAwC;;AAC5C;;AAAkC;AAAA;AAAA;;AAC9B;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAW;;AACtB;;AAA4B;AAAA;AAAA,eAAkC,eAAlC,EAAkC;AAAA,qBACtC,IAAA2B,WAAA,EADsC;AACzB,aADT;;AAA5B;;AAEA;;AAKA;;AACI;;AAAU;;AAAM;;AACpB;;AACJ;;AACA;;AACI;;AAAW;;AAAS;;AACpB;;AAAY;AAAA,qBAAmB,IAAA6C,eAAA,EAAnB;AAAoC,aAApC,EAAqC,eAArC,EAAqC;AAAA;AAAA,aAArC;;AACR;;AAAqB;;AAAO;;AAC5B;;AAA6B;;AAAkB;;AAC/C;;AAA8B;;AAC9B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAY;;AACvB;;AAA4B;AAAA;AAAA,eAAmC,eAAnC,EAAmC;AAAA,qBACvC,IAAA7C,WAAA,EADuC;AAC1B,aADT;;AAA5B;;AAEA;;AAKA;;AACI;;AAAU;;AAAM;;AACpB;;AACJ;;AACA;;AACI;;AAAW;;AAAU;;AACrB;;AAAY;AAAA,qBAAmB,IAAA8C,gBAAA,EAAnB;AAAqC,aAArC,EAAsC,eAAtC,EAAsC;AAAA;AAAA,aAAtC;;AACR;;AAAqB;;AAAO;;AAC5B;;AAA6B;;AAAkB;;AAC/C;;AAA8B;;AAC9B;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAM;;AACjB;;AAA8C;AAAA,qBAAmB,IAAAC,YAAA,cAAnB;AAA6C,aAA7C;;AAC1C;;AAIJ;;AACJ;;AAEA;;AAA0C;AAAA,qBAAS,IAAAC,gBAAA,EAAT;AAA2B,aAA3B;;AAA6B;;AAAa;;AAGpF;;AACI;;AAAG;;AAAe;;AAClB;;AACI;;AAA0C;AAAA,qBAAS,IAAAlD,UAAA,CAAW,CAAX,CAAT;AAAsB,aAAtB;;AACtC;;AAAU;;AAAI;;AAClB;;AACA;;AAA0C;AAAA,qBAAS,IAAAA,UAAA,CAAW,CAAX,CAAT;AAAsB,aAAtB;;AACtC;;AAAU;;AAAQ;;AACtB;;AACA;;AAA0C;AAAA,qBAAS,IAAAA,UAAA,CAAW,CAAX,CAAT;AAAsB,aAAtB;;AACtC;;AAAU;;AAAI;;AAClB;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAI;;AAAkE;;AAC1E;;AAGA;;AACI;;AACI;;AAAW;;AAAW;;AACtB;;AAA4B;AAAA;AAAA,eAAgC,eAAhC,EAAgC;AAAA,qBACpC,IAAAE,WAAA,EADoC;AACvB,aADT;;AAA5B;;AAEA;;AAKA;;AACI;;AAAU;;AAAM;;AACpB;;AACJ;;AACA;;AACI;;AAAW;;AAAS;;AACpB;;AAAY;AAAA,qBAAmB,IAAAiD,aAAA,EAAnB;AAAkC,aAAlC,EAAmC,eAAnC,EAAmC;AAAA;AAAA,aAAnC;;AACR;;AAAqB;;AAAO;;AAC5B;;AAA6B;;AAAkB;;AAC/C;;AAA8B;;AAC9B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAY;;AACvB;;AAA4B;AAAA;AAAA,eAAiC,eAAjC,EAAiC;AAAA,qBACrC,IAAAjD,WAAA,EADqC;AACxB,aADT;;AAA5B;;AAEA;;AAKA;;AACI;;AAAU;;AAAM;;AACpB;;AACJ;;AACA;;AACI;;AAAW;;AAAW;;AACtB;;AAAY;AAAA,qBAAmB,IAAAkD,cAAA,EAAnB;AAAmC,aAAnC,EAAoC,eAApC,EAAoC;AAAA;AAAA,aAApC;;AACR;;AAAqB;;AAAO;;AAC5B;;AAA6B;;AAAkB;;AAC/C;;AAA8B;;AAC9B;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAIA;;AAyBJ;;AAEA;;AACI;;AAIA;;AAuBJ;;AACJ;;AACJ;;;;AA1MoB;;AAAA;;AAC8B;;AAAA;;AAOF;;AAAA;;AAER;;AAAA;;AAW8B;;AAAA;;AAWtB;;AAAA;;AAER;;AAAA;;AAW+B;;AAAA;;AAY3C;;AAAA;;AAC0B;;AAAA;;AA2BlC;;AAAA;;AAO4B;;AAAA;;AAER;;AAAA;;AAW4B;;AAAA;;AAWpB;;AAAA;;AAER;;AAAA;;AAW6B;;AAAA;;AAYnD;;AAAA;;AAIA;;AAAA;;AA4BA;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACpLlB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACII;;AACI;;AACI;;AACI;;AAAW;;AAAK;;AAChB;;AAAgB;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AACJ;;AAEA;;AACI;;AAAW;;AAAa;;AACxB;;AAAgB;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AACJ;;AAEA;;AACI;;AAAW;;AAAI;;AACf;;AAAgB;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AACJ;;AACJ;;AACJ;;;;;;AAb4B;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;AAKxB;;AACI;;AACJ;;;;;;AADiB;;AAAA,0GAA+B,MAA/B,EAA+B,sBAA/B;;;;UDZZC,sB;AAST,wCACY9a,UADZ,EAEY+a,SAFZ,EAGoCC,IAHpC,EAGmE;AAAA;;AAFvD,eAAAhb,UAAA,GAAAA,UAAA;AACA,eAAA+a,SAAA,GAAAA,SAAA;AACwB,eAAAC,IAAA,GAAAA,IAAA;AAChC,eAAKC,eAAL,GAAuBD,IAAvB;AACH;;;;iBAED,oBAAQ;AAAA;;AACJ,iBAAKhK,mBAAL,GAA2B,IAAI,wEAAJ,EAA3B;AACA,iBAAKA,mBAAL,CAAyBC,IAAzB,GAAgC,MAAhC;AACA,iBAAKD,mBAAL,CAAyBE,KAAzB,GAAiC,CAAC,MAAD,CAAjC;AAEA,iBAAKlR,UAAL,CAAgBkD,oBAAhB,CAAqC,KAAK8X,IAAL,CAAUnO,KAA/C,EAAsD3K,IAAtD,CAA2D,UAACC,GAAD,EAAkC;AACzF,qBAAI,CAAC8Y,eAAL,CAAqBpO,KAArB,GAA6B1K,GAAG,CAAC0K,KAAjC;AACA,qBAAI,CAACoO,eAAL,CAAqBC,aAArB,GAAqC/Y,GAAG,CAAC+Y,aAAzC;AACA,qBAAI,CAACD,eAAL,CAAqBxQ,IAArB,GAA4BtI,GAAG,CAACsI,IAAhC;AACH,aAJD;AAKH;;;iBAGD,wBAAY;AACR,iBAAKwQ,eAAL,GAAuB,KAAKE,MAAL,CAAY3Y,GAAZ,EAAvB;AACH;;;iBAED,sBAAayQ,OAAb,EAA8B;AAC1B,iBAAK8H,SAAL,CAAehB,IAAf,CAAoB9G,OAApB,EAA6B,EAA7B,EAAiC;AAACmI,sBAAQ,EAAE;AAAX,aAAjC;AACH;;;iBAED,gBAAI;AAAA;;AACA,gBAAMC,sBAAsB,GAAG,KAAKF,MAAL,CAAY3Y,GAAZ,EAA/B;AACA,iBAAKxC,UAAL,CAAgBsb,cAAhB,CAA+B,KAAKL,eAApC,EAAqDI,sBAArD,EAA6EpB,SAA7E,GAAyF/X,IAAzF,CACI,YAAM;AACF,qBAAI,CAACqZ,YAAL,CAAkB,OAAlB;AACH,aAHL,EAII,UAAC9X,KAAD,EAAW;AACP,qBAAI,CAAC8X,YAAL,CAAkB,wBAAlB;AACH,aANL;AAQH;;;iBAED,mBAAM;AAAA;;AACF,iBAAKvb,UAAL,CAAgBwb,cAAhB,CAA+B,KAAKP,eAAL,CAAqBpO,KAApD,EAA2DoN,SAA3D,GAAuE/X,IAAvE,CACI,YAAM;AACF,qBAAI,CAACqZ,YAAL,CAAkB,OAAlB;AACH,aAHL,EAII,UAAC9X,KAAD,EAAW;AACP,qBAAI,CAAC8X,YAAL,CAAkB,kBAAlB;AACH,aANL;AAQH;;;;;;;yBA1DQT,sB,EAAsB,8J,EAAA,wI,EAAA,gEAYnB,wEAZmB,C;AAYJ,O;;;cAZlBA,sB;AAAsB,2C;AAAA;AAAA;sEAMpB,0E,EAAmB,C;;;;;;;;;;;;;;ACnBlC;;AACI;;AAAG;;AAAS;;AAAK;;AACrB;;AACA;;AAAuC;AAAA,qBAAuB,IAAAW,YAAA,EAAvB;AAAqC,aAArC;;AAEnC;;AAkBA;;AACI;;AAGJ;;AACJ;;AACA;;AACI;;AAAoD;;AAAK;;AACzD;;AAAgE;AAAA,qBAAS,IAAAC,IAAA,EAAT;AAAe,aAAf;;AAAiB;;AAAI;;AACrF;;AAA6D;AAAA,qBAAS,eAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAC1F;;;;AAhCqB;;AAAA;;AAIP;;AAAA;;AAmBS;;AAAA;;AAMO;;AAAA;;;;;;;;;;;;;;;;;;;;;AC7B9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,qB;AAEX;AAEA,uCAA0BzO,aAA1B,EAA+D;AAAA;;AAArC,eAAAA,aAAA,GAAAA,aAAA;AACzB;;;;iBAEM,oBAAQ,CACd;;;iBAED,0BAAc;AACZ,oBAAQ,KAAKA,aAAL,CAAmBjF,QAA3B;AACE,mBAAK,iDAASI,eAAd;AACE,qBAAK6E,aAAL,CAAmB0O,cAAnB,CAAkC,iDAAS9S,SAA3C;AACA;;AAEF,mBAAK,iDAASA,SAAd;AACE,qBAAKoE,aAAL,CAAmB0O,cAAnB,CAAkC,iDAASvS,cAA3C;AACA;;AAEF,mBAAK,iDAASA,cAAd;AACE,qBAAK6D,aAAL,CAAmB0O,cAAnB,CAAkC,iDAASC,MAA3C;AACA;;AAEF,mBAAK,iDAASA,MAAd;AACE,qBAAK3O,aAAL,CAAmB0O,cAAnB,CAAkC,iDAASvT,eAA3C;AACA;AAfJ;AAkBD;;;;;;;yBA7BUsT,qB,EAAqB,oJ;AAAA,O;;;cAArBA,qB;AAAqB,2C;AAAA,gB;AAAA,e;AAAA,2E;AAAA;AAAA;ACRlC;;AAA0C;AAAA,qBAAS,IAAAC,cAAA,EAAT;AAAyB,aAAzB;;AACtC;;AAAU;;AAAY;;AAAY;;AACtC;;;;AADsC;;AAAA;;;;;;;;;;;;;;;;;;;;;ACAtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0BY;;AACI;;AACI;;AAAW;;AAAI;;AACf;;AAAgB;AAAA;AAAA;AAAA;;AAAhB;;AACJ;;AAEA;;AACI;;AAAW;;AAAM;;AACjB;;AAAgB;AAAA;AAAA;AAAA;;AAAhB;;AACJ;;AAEA;;AACI;;AAAW;;AAAI;;AACf;;AAAgB;AAAA;AAAA;AAAA;;AAAhB;;AACJ;;AAEA;;AACI;;AAAW;;AAAM;;AACjB;;AAAgB;AAAA;AAAA;AAAA;;AAAhB;;AACJ;;AACJ;;;;;;AAjBwB;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;AAxChC;;AACI;;AACI;;AACI;;AAAW;;AAAI;;AACf;;AAAgB;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AACJ;;AAEA;;AACI;;AAAW;;AAAM;;AACjB;;AAAgB;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AACJ;;AAEA;;AACI;;AAAW;;AAAK;;AAChB;;AAAgB;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AACJ;;AAEA;;AACI;;AAAW;;AAAG;;AACd;;AAAgB;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AACJ;;AACA;;AAAG;;AAAS;;AACZ;;AAqBJ;;AACJ;;;;;;AAxC4B;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAGgB;;AAAA;;;;;;AAwBxC;;AACI;;AACJ;;;;;;AADiB;;AAAA,0GAA+B,MAA/B,EAA+B,uBAA/B;;;;UDxCZE,uB;AAST,yCACY9b,UADZ,EAEY+a,SAFZ,EAGoCC,IAHpC,EAGgD;AAAA;;AAFpC,eAAAhb,UAAA,GAAAA,UAAA;AACA,eAAA+a,SAAA,GAAAA,SAAA;AACwB,eAAAC,IAAA,GAAAA,IAAA;AAChC,eAAKe,gBAAL,GAAwBf,IAAxB;AACH;;;;iBAED,sBAAa/H,OAAb,EAA8B;AAC1B,iBAAK8H,SAAL,CAAehB,IAAf,CAAoB9G,OAApB,EAA6B,EAA7B,EAAiC;AAACmI,sBAAQ,EAAE;AAAX,aAAjC;AACH;;;iBAED,oBAAQ;AACJ,iBAAKpK,mBAAL,GAA2B,IAAI,wEAAJ,EAA3B;AACA,iBAAKA,mBAAL,CAAyBC,IAAzB,GAAgC,MAAhC;AACA,iBAAKD,mBAAL,CAAyBE,KAAzB,GAAiC,CAAC,MAAD,CAAjC;AACH;;;iBAED,gBAAI;AAAA;;AACA,gBAAM8K,uBAAuB,GAAG,KAAKb,MAAL,CAAY3Y,GAAZ,EAAhC;AACA,iBAAKxC,UAAL,CAAgBic,SAAhB,CAA0B,KAAKF,gBAA/B,EAAiDC,uBAAjD,EAA0E/B,SAA1E,GAAsF/X,IAAtF,CACI,YAAM;AACF,qBAAI,CAACqZ,YAAL,CAAkB,OAAlB;AACH,aAHL,EAII,UAAC9X,KAAD,EAAW;AACP,qBAAI,CAAC8X,YAAL,CAAkB,wBAAlB;AACH,aANL;AAQH;;;iBAED,wBAAY;AACR,iBAAKQ,gBAAL,GAAwB,KAAKZ,MAAL,CAAY3Y,GAAZ,EAAxB;AACH;;;iBAED,mBAAM;AAAA;;AACF,iBAAKxC,UAAL,CAAgBkc,SAAhB,CAA0B,KAAKH,gBAAL,CAAsBlP,KAAhD,EAAuDoN,SAAvD,GAAmE/X,IAAnE,CACI,YAAM;AACF,qBAAI,CAACqZ,YAAL,CAAkB,OAAlB;AACH,aAHL,EAII,UAAC9X,KAAD,EAAW;AACP,qBAAI,CAAC8X,YAAL,CAAkB,kBAAlB;AACH,aANL;AAQH;;;;;;;yBAnDQO,uB,EAAuB,8J,EAAA,wI,EAAA,gEAYpB,wEAZoB,C;AAYL,O;;;cAZlBA,uB;AAAuB,4C;AAAA;AAAA;sEAMrB,0E,EAAmB,C;;;;;;;;;;;;;;AClBlC;;AACI;;AAAG;;AAAI;;AAAK;;AAChB;;AACA;;AAAuC;AAAA,qBAAuB,IAAAL,YAAA,EAAvB;AAAqC,aAArC;;AAEnC;;AA6CA;;AACI;;AAGJ;;AACJ;;AACA;;AACI;;AAAoD;;AAAK;;AACzD;;AAAgE;AAAA,qBAAS,IAAAC,IAAA,EAAT;AAAe,aAAf;;AAAiB;;AAAI;;AACrF;;AAA6D;AAAA,qBAAS,eAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAC1F;;;;AA3DgB;;AAAA;;AAIF;;AAAA;;AA8CS;;AAAA;;AAMO;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxD9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaS,oB;AAMT,wCAAc;AAAA;;AAJN,eAAAC,WAAA,GAAc,IAAd;AACA,eAAAC,eAAA,GAAkB,KAAlB;AACA,eAAAC,gBAAA,GAAmB,IAAnB;AAGP;;;;iBAEM,uBAAc7R,IAAd,EAA0B;AAC7B,gBAAM8R,OAAO,GAAa9R,IAAI,CAACJ,KAAL,CAAW,0DAAShE,cAApB,CAA1B;;AACA,gBAAIkW,OAAO,IAAI,IAAf,EAAoB;AAChB,qBAAO9R,IAAP;AACH;;AACD,iBAAK,IAAI6P,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,OAAO,CAAC7G,MAA5B,EAAoC4E,CAAC,EAArC,EAAyC;AACrCiC,qBAAO,CAACjC,CAAD,CAAP,GAAaiC,OAAO,CAACjC,CAAD,CAAP,CAAWhQ,OAAX,CAAmB,0DAAShE,eAA5B,EAA6C,EAA7C,CAAb;AACH,aAP4B,CAQ7B;;;AACA,iBAAK,IAAIgU,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGiC,OAAO,CAAC7G,MAA5B,EAAoC4E,EAAC,EAArC,EAAyC;AACrCiC,qBAAO,CAACjC,EAAD,CAAP,GAAaiC,OAAO,CAACjC,EAAD,CAAP,CAAWhQ,OAAX,CAAmB,0DAAS/D,uBAA5B,EAAqD,EAArD,CAAb;AACH;;AACD,mBAAOgW,OAAO,CAAC7P,IAAR,EAAP;AACH;;;iBAEM,4BAAmBjC,IAAnB,EAA+B;AAClC,gBAAM8R,OAAO,GAAa9R,IAAI,CAACJ,KAAL,CAAW,0DAASnE,cAApB,CAA1B;;AACA,gBAAIqW,OAAO,IAAI,IAAf,EAAoB;AAChB,qBAAO9R,IAAP;AACH;;AACD,iBAAK,IAAI6P,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,OAAO,CAAC7G,MAA5B,EAAoC4E,CAAC,EAArC,EAAyC;AACrCiC,qBAAO,CAACjC,CAAD,CAAP,GAAaiC,OAAO,CAACjC,CAAD,CAAP,CAAWhQ,OAAX,CAAmB,0DAASnE,eAA5B,EAA6C,EAA7C,CAAb;AACH;;AACD,mBAAOoW,OAAO,CAAC7P,IAAR,EAAP;AACH;;;iBAEM,sBAAatD,KAAb,EAA4B;AAC/B,mBAAOA,KAAK,CAACsD,IAAN,CAAW,0DAAStG,UAApB,CAAP;AACH;;;;;;;yBArCQ+V,oB;AAAoB,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBAFjB;;;;;;;;;;;;;;;;;ACHhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaK,sB;AAEX,wCAA8CxB,IAA9C,EAAgEzb,UAAhE,EAAwF;AAAA;;AAA1C,eAAAyb,IAAA,GAAAA,IAAA;AAAkB,eAAAzb,UAAA,GAAAA,UAAA;AAA2B;;;;iBAE3F,oBAAQ,CACP;;;iBAED,4BAAmB;AACjB,iBAAKA,UAAL,CAAgBkd,mBAAhB,CAAoCC,WAApC,CAAgDC,MAAhD,CAAuD,KAAK3B,IAAL,CAAUvW,KAAjE,EAAwE,CAAxE;AACD;;;;;;;yBATU+X,sB,EAAsB,gEAEb,wEAFa,C,EAEE,iI;AAAA,O;;;cAFxBA,sB;AAAsB,2C;AAAA,gB;AAAA,e;AAAA,wK;AAAA;AAAA;ACVnC;;AACA;;AACI;;AAAgD;;AAAK;;AACrD;;AAA6D;AAAA,qBAAS,IAAAI,gBAAA,EAAT;AAA2B,aAA3B;;AAA6B;;AAAM;;AACpG;;;;AAJwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOXC,qB;AAEX,yCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,qB;AAAqB,O;;;cAArBA,qB;AAAqB,2C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPlC;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUgB;;AACI;;AACJ;;;;;;;;AADO;;AAAA;;;;;;AAKH;;AAAuD;;AAAI;;;;;;AAC3D;;AAAuD;;AAAI;;;;;;AAC3D;;AAAuD;;AAAQ;;;;;;AAInE;;AACI;;AAAG;;AAAS;;AAChB;;;;;;AADO;;AAAA;;;;;;;;AAff;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACjC;;AAAU;;AAAI;;AAClB;;AACJ;;AACJ;;;;;;AArB6C;;AAAA;;AAMtB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAIsB;;AAAA;;;;;;AAcjC;;AACI;;AACJ;;;;;;;;AADO;;AAAA;;;;;;AAKH;;AAAsD;;AAAI;;;;;;AAC1D;;AAAsD;;AAAI;;;;;;AAC1D;;AAAsD;;AAAQ;;;;;;AAIlE;;AACI;;AAAG;;AAAS;;AAChB;;;;;;AADO;;AAAA;;;;;;;;AAff;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACjC;;AAAU;;AAAI;;AAClB;;AACJ;;AACJ;;;;;;AArB6C;;AAAA;;AAMtB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAIsB;;AAAA;;;;;;AAfjD;;AACI;;AAwBJ;;;;;;AAxB0B;;AAAA;;;;;;AA5B9B;;AAEI;;AAyBA;;AA0BJ;;;;;;AAnD0B;;AAAA;;AAyBoB;;AAAA;;;;;;AA5BlD;;AACI;;AAsDJ;;;;;;AAtDgD;;AAAA;;;;UDUnCC,uB;AAMT,yCAAmBvd,UAAnB,EAAkDE,GAAlD,EAAkFU,OAAlF,EAA8G4a,SAA9G,EAAsI;AAAA;;AAAnH,eAAAxb,UAAA,GAAAA,UAAA;AAA+B,eAAAE,GAAA,GAAAA,GAAA;AAAgC,eAAAU,OAAA,GAAAA,OAAA;AAA4B,eAAA4a,SAAA,GAAAA,SAAA;AAJ9G,eAAApb,KAAA,GAAe,IAAI,oDAAJ,EAAf;AAKC;;;;iBAED,oBAAQ,CACP;;;iBAED,2BAAkB4F,KAAlB,EAA6Cd,KAA7C,EAA0D;AACtD,gBAAM+U,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,wBAAY,CAACwB,IAAb,GAAoB;AAACzV,mBAAK,EAALA,KAAD;AAAQd,mBAAK,EAALA;AAAR,aAApB;AAEA+U,wBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,wBAAY,CAACE,SAAb,GAAyB,OAAzB;AACAF,wBAAY,CAACG,SAAb,GAAyB,MAAzB;AACAH,wBAAY,CAACI,QAAb,GAAwB,MAAxB;AACAJ,wBAAY,CAACK,QAAb,GAAwB,MAAxB;;AACA,gBAAMC,SAAS,GAAG,KAAK3Z,OAAL,CAAa4Z,IAAb,CAAkB,uHAAlB,EAA0CP,YAA1C,CAAlB;AACH;;;iBAED,8BAAkB;AAAA;;AACd,iBAAKja,UAAL,CAAgBwE,sBAAhB;AACA,iBAAKxE,UAAL,CAAgBwd,kBAAhB,GAAqC7a,IAArC,CAA0C,UAAC8a,IAAD,EAAU;AAC5C,qBAAI,CAACjC,SAAL,CAAehB,IAAf,CAAoB,UAApB,EAAgC,OAAhC;AACH,aAFL,EAGI,UAACkD,GAAD,EAAS;AACL,qBAAI,CAAClC,SAAL,CAAehB,IAAf,CAAoB,mBAApB,EAAyC,OAAzC;AACH,aALL;AAOH;;;;;;;yBAjCQ+C,uB,EAAuB,iI,EAAA,gI,EAAA,mI,EAAA,wI;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,ic;AAAA;AAAA;AChBpC;;AAAI;;AAAe;;AACnB;;AACI;;AAA0C;AAAA,qBAAS,IAAAC,kBAAA,EAAT;AAA6B,aAA7B;;AAA+B;;AAAI;;AACjF;;AAEA;;AAwDA;;AACI;;AACA;;AAA0C;AAAA,qBAAS,IAAAA,kBAAA,EAAT;AAA6B,aAA7B;;AAA+B;;AAAI;;AAC7E;;AACJ;;;;AA5D8B;;AAAA;;;;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIgB;;AACI;;AACJ;;;;;;;;AADO;;AAAA;;;;;;AAKH;;AAA2C;;AAAI;;;;;;AAC/C;;AAA2C;;AAAI;;;;;;AAC/C;;AAA2C;;AAAQ;;;;;;AAIvD;;AACI;;AAAG;;AAAS;;AAChB;;;;;;AADO;;AAAA;;;;;;AAUP;;AACI;;AACJ;;;;;;AADO;;AAAA;;;;;;AAKH;;AAAqC;;AAAI;;;;;;AACzC;;AAAqC;;AAAI;;;;;;AACzC;;AAAqC;;AAAQ;;;;;;AAIjD;;AACI;;AAAG;;AAAe;;AACtB;;;;;;AADO;;AAAA;;;;;;AAhBnB;;AACI;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAGJ;;AACJ;;AACJ;;;;;;AAjBiD;;AAAA;;AAMtB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAIsB;;AAAA;;;;UD7BxCG,oB;AAGX,sCAA8ClC,IAA9C,EAA6Ezb,UAA7E,EAAqG;AAAA;;AAAvD,eAAAyb,IAAA,GAAAA,IAAA;AAA+B,eAAAzb,UAAA,GAAAA,UAAA;AAFtE,eAAAI,KAAA,GAAQ,IAAI,oDAAJ,EAAR;AAGN;;;;iBAED,oBAAQ,CACP;;;;;;;yBAPUud,oB,EAAoB,gEAGX,wEAHW,C,EAGI,iI;AAAA,O;;;cAHxBA,oB;AAAoB,yC;AAAA,iB;AAAA,e;AAAA,iS;AAAA;AAAA;ACXjC;;AACI;;AAAI;;AAAQ;;AACZ;;AACI;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAGJ;;AACJ;;AACJ;;AACA;;AACA;;AAAI;;AAAM;;AACV;;AAqBJ;;;;AAzCqD;;AAAA;;AAMtB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAIsB;;AAAA;;AAQA;;AAAA;;;;;;;;;;;;;;;;;;;;;ACzBrD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCiBaC,U;AAoCT,4BAAoBnd,UAApB,EAA0D;AAAA;;AAAtC,eAAAA,UAAA,GAAAA,UAAA;AA9BZ,eAAAod,iBAAA,GAAoC,EAApC;AASA,eAAAC,cAAA,GAAiB,EAAjB;AAOA,eAAA1d,KAAA,GAAe,IAAI,oDAAJ,EAAf;AAED,eAAA2d,iBAAA,GAAoB,KAApB;AACA,eAAAC,YAAA,GAAe,CAAf;AACA,eAAAC,eAAA,GAAkB,EAAlB;AAEA,eAAAC,0BAAA,GAA6B,KAA7B;AACA,eAAAC,wBAAA,GAA2B,KAA3B;AACC,eAAAC,iBAAA,GAAoB,KAApB;AACD,eAAAC,iBAAA,GAAoB,KAApB;AACA,eAAAC,sBAAA,GAAyB,KAAzB;AAEA,eAAAC,uBAAA,GAA0B,KAA1B;AAGN;;;;iBAEM,2BAAkBC,OAAlB,EAA2CC,KAA3C,EAAwDnc,UAAxD,EAA4EG,SAA5E,EAA6F;AAAA;;AAChG,iBAAKob,iBAAL,GAAyB,EAAzB;AACA,iBAAKa,cAAL,GAAsBF,OAAtB;AACA,iBAAKG,YAAL,GAAoBF,KAApB;AACA,iBAAKG,wBAAL,GAAgCtc,UAAhC;AACA,iBAAKuc,kBAAL,GAA0Bpc,SAA1B;AACA,iBAAKqc,oBAAL,GAA4B,IAAIld,GAAJ,EAA5B;AACA,iBAAKmd,kBAAL,GAA0B,IAAInd,GAAJ,EAA1B;AACA,iBAAK+D,UAAL,GAAkBhD,IAAlB,CAAuB,UAAAqc,CAAC;AAAA,qBAAI,OAAI,CAACC,mBAAL,EAAJ;AAAA,aAAxB;AACH;;;iBAEM,uBAAchW,OAAd,EAAiC;AACpC,gBAAM8R,CAAC,GAAG,KAAKxa,eAAL,CAAqB2L,OAArB,CAA6BjD,OAA7B,CAAV;AACA,iBAAK1I,eAAL,CAAqB6c,MAArB,CAA4BrC,CAA5B,EAA+B,CAA/B;AACH;;;iBAEM,oBAAW9R,OAAX,EAA8B;AACjC,iBAAK1I,eAAL,CAAqB2F,IAArB,CAA0B+C,OAA1B;AACH;;;iBAEM,gCAAuB8R,CAAvB,EAAgC;AACnC,gBAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAI,KAAKmE,gBAAL,CAAsB/I,MAAxC,EAAgD;AAC5C;AACH;;AACD,iBAAKgJ,iBAAL,GAAyB,KAAKD,gBAAL,CAAsBnE,CAAtB,CAAzB;AACA,iBAAKqE,mBAAL,GAA2B,KAAKD,iBAAL,CAAuBrF,WAAlD;AACA,iBAAKuF,iBAAL,GAAyB,KAAKF,iBAAL,CAAuBtF,SAAhD;AACA,iBAAKyF,aAAL,GAAqBvE,CAArB;AACH;;;iBAEY,sBAAU;;;;;;;AACnB,2BAAKkE,mBAAL;AACA,2BAAKb,iBAAL,GAAyB,KAAzB;AACA,2BAAKF,0BAAL,GAAkC,KAAlC;AACA,2BAAKC,wBAAL,GAAgC,KAAhC;AACA,2BAAKI,uBAAL,GAA+B,KAA/B,C,CACA;AACA;AACA;;AACA,2BAAKP,YAAL,GAAoB,CAApB;AACMuB,0B,GAAO,E;;;4BACN,KAAKvB,YAAL,IAAqB,KAAKC,eAA1B,IAA6C,CAAC,KAAKE,wB;;;;;;AACtD,6BAAM,KAAKqB,eAAL,EAAN;;;AACAD,0BAAI,CAACrZ,IAAL,CAAU,KAAKkZ,mBAAL,CAAyBvG,SAAzB,CAAmC,CAAnC,EAAsC5S,OAAhD;;AACA,6BAAM,KAAKwZ,aAAL,CAAmB,KAAKL,mBAAL,CAAyBvG,SAAzB,CAAmC,CAAnC,EAAsC5S,OAAzD,CAAN;;;AACA,2BAAK+X,YAAL;;;;;4BAEA,KAAKA,YAAL,GAAoB,KAAKC,e;;;;;AACzB,2BAAKM,uBAAL,GAA+B,IAA/B;AACAle,6BAAO,CAACC,GAAR,oBAAgB,IAAIsB,GAAJ,CAAQ2d,IAAR,CAAhB;;;;AAIJ,2BAAKJ,iBAAL,GAAyB;AAACnW,gCAAQ,EAAE,EAAX;AAAe8Q,mCAAW,EAAE,KAAKf,kBAAjC;AAAqDc,iCAAS,EAAE,KAAKpB;AAArE,uBAAzB;;AACA,2BAAKoF,iBAAL,CAAuB3X,IAAvB,CAA4B,KAAKiZ,iBAAjC;;AACA,2BAAKG,aAAL,GAAqB,KAAKzB,iBAAL,CAAuB1H,MAAvB,GAAgC,CAArD;AACA,2BAAKiI,iBAAL,GAAyB,IAAzB;;;;;;;;;AACH;;;iBAEa,2BAAe;;;;;;;AACnB9b,gC,GAAa,KAAKsc,wB;AAClBnc,+B,GAAY,KAAKoc,kB;;AACI,6BAAM,KAAKpe,UAAL,CAAgBif,cAAhB,CAA+B,KAAKvd,aAAL,CAAmBmL,KAAlD,EAAyDhL,UAAzD,EAAqEG,SAArE,EAAgF,CAAhF,EAAmFiY,SAAnF,EAAN;;;AAA3B,2BAAK0E,mB;AACL,2BAAKhf,KAAL,CAAWuf,oBAAX,CAAgC,KAAKP,mBAArC;AACA,2BAAKlB,0BAAL,GAAkC,IAAlC;;;;;;;;;AACH;;;iBAEa,uBAAc3b,KAAd,EAA2B;;;;;;;;;AACrC,6BAAM,KAAK9B,UAAL,CAAgBmf,YAAhB,CAA6B,KAAKvd,WAAL,CAAiBiL,KAA9C,EAAqD/K,KAArD,EAA4D,KAAKub,cAAjE,EAAiFpD,SAAjF,GAA6F/X,IAA7F,CACF,UAAA8a,IAAI,EAAI;AACJ,+BAAI,CAAC4B,iBAAL,GAAyB5B,IAAzB;;AACA,+BAAI,CAACrd,KAAL,CAAWyf,kBAAX,CAA8B,OAAI,CAACR,iBAAnC;;AACA,+BAAI,CAAClB,wBAAL,GAAgC,IAAhC;AACH,uBALC,EAMF,UAAAT,GAAG,EAAI;AACHrd,+BAAO,CAACC,GAAR,CAAYod,GAAZ;AACH,uBARC,CAAN;;;;;;;;;AAWH;;;iBAEM,qBAAY;AACf,iBAAK2B,iBAAL,GAA0B,qEAA1B;AACA,iBAAKD,mBAAL,GAA4B,uEAA5B;AACA,iBAAKV,cAAL,GAAuB,mEAAvB;AACA,iBAAKC,YAAL,GAAqB,iEAArB;AACA,iBAAKve,KAAL,CAAWyf,kBAAX,CAA8B,KAAKR,iBAAnC;AAEA,iBAAKF,iBAAL,GAAyB;AAACnW,sBAAQ,EAAE,EAAX;AAAe8Q,yBAAW,EAAE,KAAKf,kBAAjC;AAAqDc,uBAAS,EAAE,KAAKpB;AAArE,aAAzB;AACA,iBAAKyG,gBAAL,CAAsBhZ,IAAtB,CAA2B,KAAKiZ,iBAAhC;AAEA,iBAAKW,oBAAL,GAA6B,6EAA7B;AACA,iBAAKzB,iBAAL,GAAyB,IAAzB;AAEA,iBAAKH,0BAAL,GAAkC,IAAlC;AACA,iBAAKC,wBAAL,GAAgC,IAAhC;AACA,iBAAKC,iBAAL,GAAyB,IAAzB;AACH;;;iBAEK,kCAAyB7b,KAAzB,EAA8B;;;;;;;;;AAChC,2BAAK8c,iBAAL,CAAuBU,eAAvB,GAAyCxd,KAAzC;AACA,2BAAK9B,UAAL,CAAgBuf,cAAhB,CAA+Bzd,KAA/B,EAAsCmY,SAAtC,GAAkD/X,IAAlD,CAAuD,UAAC8a,IAAD,EAAU;AAC7D,+BAAI,CAAC4B,iBAAL,CAAuB7G,UAAvB,GAAoCiF,IAAI,CAACjF,UAAzC;;AACA,+BAAI,CAACpY,KAAL,CAAWyf,kBAAX,CAA8B,OAAI,CAACR,iBAAnC;AACH,uBAHD;AAKMY,0B,GAAO,KAAKxf,UAAL,CAAgByf,YAAhB,CAA6B,KAAKb,iBAAL,CAAuBc,gBAApD,EAAsE5d,KAAtE,EAA6EmY,SAA7E,GAAyF/X,IAAzF,CACT,UAAC8a,IAAD,EAAU;AACN,+BAAI,CAACK,cAAL,sBAA0B,IAAIlc,GAAJ,CAAQ6b,IAAI,CAAC2C,KAAb,CAA1B;AACH,uBAHQ,C;;;;;;;;;AAKhB;;;iBAED,+BAAmB;AAAA;;AACf,iBAAK/B,iBAAL,GAAyB,KAAzB;AACA,gBAAMrV,QAAQ,GAAG,EAAjB;;AAFe,yDAGS,KAAK6U,iBAHd;AAAA;;AAAA;AAGf,wEAAgD;AAAA,oBAArChV,SAAqC;;AAAA,6DACzBA,SAAS,CAACG,QADe;AAAA;;AAAA;AAC5C,4EAAuC;AAAA,wBAA5B6M,IAA4B;AACnC7M,4BAAQ,CAAC9C,IAAT,CAAc2P,IAAd;AACH;AAH2C;AAAA;AAAA;AAAA;AAAA;AAI/C;AAPc;AAAA;AAAA;AAAA;AAAA;;AAQf,iBAAKpV,UAAL,CAAgB4f,eAAhB,CAAgCrX,QAAhC,EAA0C0R,SAA1C,GAAsD/X,IAAtD,CACI,UAAC8a,IAAD,EAAU;AACN,qBAAI,CAACqC,oBAAL,GAA4BrC,IAA5B;AACA,qBAAI,CAACY,iBAAL,GAAyB,IAAzB;AACH,aAJL;AAMH;;;iBAED,kCAAsB;AAClB,iBAAKC,sBAAL,GAA8B,KAA9B;AACA,gBAAMtV,QAAQ,GAAG,EAAjB;;AAFkB,yDAGO,KAAK8W,oBAAL,CAA0B3C,WAHjC;AAAA;;AAAA;AAGlB,wEAAgE;AAAA,oBAArDmD,UAAqD;AAC5D,oBAAMC,OAAO,GAAGD,UAAU,CAACC,OAA3B;;AACA,oBAAIA,OAAO,CAACC,QAAZ,EAAsB;AAClBxX,0BAAQ,CAAC9C,IAAT,CAAc;AAAC6R,gCAAY,EAAEwI,OAAO,CAACxI,YAAvB;AAAqCE,8BAAU,EAAEsI,OAAO,CAACtI,UAAzD;AAAqEN,wBAAI,EAAE4I,OAAO,CAAC5I;AAAnF,mBAAd;AACH;;AAJ2D,6DAKtC2I,UAAU,CAACnD,WAL2B;AAAA;;AAAA;AAK5D,4EAA8C;AAAA,wBAAnClU,OAAmC;AAC1C,wBAAMwX,QAAQ,GAAGxX,OAAO,CAACwX,QAAzB;;AACA,wBAAIA,QAAQ,CAACD,QAAb,EAAuB;AACnBxX,8BAAQ,CAAC9C,IAAT,CAAc;AAAC6R,oCAAY,EAAE0I,QAAQ,CAAC1I,YAAxB;AAAsCE,kCAAU,EAAEwI,QAAQ,CAACxI,UAA3D;AAAuEN,4BAAI,EAAE8I,QAAQ,CAAC9I;AAAtF,uBAAd;AACH;AACJ;AAV2D;AAAA;AAAA;AAAA;AAAA;AAW/D;AAdiB;AAAA;AAAA;AAAA;AAAA;;AAelB,iBAAK+I,eAAL,GAAuB;AAAC1X,sBAAQ,EAARA,QAAD;AAAW2X,wBAAU,EAAE,KAAKjC,cAAL,CAAoBpR,KAA3C;AAAkDsT,sBAAQ,EAAE,KAAKjC,YAAL,CAAkBrR;AAA9E,aAAvB;AACA,iBAAKgR,sBAAL,GAA8B,IAA9B;AACH;;;iBAED,8BAAkB;AACd,mBAAO,KAAK7d,UAAL,CAAgBogB,kBAAhB,CAAmC,KAAKC,cAAxC,EAAwDpG,SAAxD,EAAP;AACH;;;iBAEO,+BAAmB;AACvB,gBAAI,KAAK0E,mBAAL,KAA6B1S,SAA7B,IAA0C,KAAK2S,iBAAL,KAA2B3S,SAAzE,EAAoF;AAChF;AACH,aAFD,MAEM;AACFrM,qBAAO,CAACC,GAAR,CAAY,KAAK8e,mBAAjB;AACA/e,qBAAO,CAACC,GAAR,CAAY,KAAK+e,iBAAjB;AACH;;AANsB,yDAQF,KAAKD,mBAAL,CAAyBvG,SAAzB,CAAmC,CAAnC,EAAsCC,aARpC;AAAA;;AAAA;AAQvB,wEAAyE;AAAA,oBAA7D9S,KAA6D;;AACrE,oBAAI,CAAC,KAAK8Y,oBAAL,CAA0BvH,GAA1B,CAA8BvR,KAAK,CAACkF,IAApC,CAAL,EAA+C;AACxC,uBAAK4T,oBAAL,CAA0B5U,GAA1B,CAA8BlE,KAAK,CAACkF,IAApC;AACN;AACJ;AAZsB;AAAA;AAAA;AAAA;AAAA;;AAAA,yDAcF,KAAKmU,iBAAL,CAAuB7G,UAdrB;AAAA;;AAAA;AAcvB,wEAAuD;AAAA,oBAA3CxS,OAA2C;;AACnD,oBAAI,CAAC,KAAK+Y,kBAAL,CAAwBxH,GAAxB,CAA4BvR,OAAK,CAACkF,IAAlC,CAAL,EAA6C;AACzC,uBAAK6T,kBAAL,CAAwB7U,GAAxB,CAA4BlE,OAAK,CAACkF,IAAlC;AACH;AACJ;AAlBsB;AAAA;AAAA;AAAA;AAAA;AAmB1B;;;eAED,eAAoB;AAChB,mBAAO,KAAKiU,iBAAZ;AACH;;;eAED,eAAmB;AACf,mBAAO,KAAKA,iBAAL,CAAuBnW,QAA9B;AACH;;;eAED,eAAuB;AACnB,mBAAO,KAAKqW,iBAAZ;AACH;;;eAED,eAAyB;AACrB,mBAAO,KAAKD,mBAAZ;AACH;;;eAED,eAAiB;AACb,mBAAO,KAAKV,cAAZ;AACH;;;eAED,eAAe;AACX,mBAAO,KAAKC,YAAZ;AACH;;;eAED,eAAmB;AACf,mBAAO,KAAKT,0BAAL,IAAmC,KAAKC,wBAAxC,IAAoE,KAAKC,iBAAhF;AACH;;;eAED,eAAoB;AAChB,mBAAO,KAAKP,iBAAZ;AACH;;;eAED,eAAgB;AACZ,mBAAO,KAAKyB,aAAZ;AACH;;;eAED,eAAqB;AACjB,mBAAO,KAAKoB,eAAZ;AACH;;;eAED,eAAuB;AACnB,mBAAO,KAAKZ,oBAAZ;AACH;;;eAED,eAAuB;AACnB,mBAAO,KAAKhB,oBAAZ;AACH;;;eAED,eAAqB;AACjB,mBAAO,KAAKC,kBAAZ;AACH;;;;;;;yBAtQQnB,U,EAAU,4I;AAAA,O;;;eAAVA,U;AAAU,iBAAVA,UAAU,K;AAAA,oBAFP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRHmD,Y;;;;;yBAAAA,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;AACA;;;;;;;;;;;;;;;;;;;;;ACDA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOY;;AACI;;AACJ;;;;;;;;AADO;;AAAA;;;;;;AAMH;;AAAuD;;AAAI;;;;;;AAC3D;;AAAuD;;AAAI;;;;;;AAC3D;;AAAuD;;AAAQ;;;;;;;;AAG/D;;AACI;;AAA2C;AAAA;;AAAA;;AAAA,gFAAwD,CAAxD;AAAyD,WAAzD;;AACvC;;AAAU;;AAAO;;AACrB;;AACJ;;;;;;AAIJ;;AACI;;AAAG;;AAAS;;AAChB;;;;;;AADO;;AAAA;;;;;;AAeC;;AACI;;AACJ;;;;;;;;AADO;;AAAA;;;;;;AAMH;;AAAiD;;AAAI;;;;;;AACrD;;AAAiD;;AAAI;;;;;;AACrD;;AAAiD;;AAAQ;;;;;;AAS7D;;AACI;;AAAG;;AAAS;;AAChB;;;;;;AADO;;AAAA;;;;;;;;AAzBnB;;AACI;;AACI;;AACI;;AAA8B;AAAA;AAAA;AAAA;;AAAkC;;AACpE;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AAAK;;AAA8C;;AACnD;;AACI;;AACA;;AACA;;AACJ;;AACA;;AACI;;AAA2C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AAAU;;AAAO;;AACrB;;AACJ;;AACJ;;AACA;;AACI;;AAGJ;;AACA;;AAEJ;;AAEJ;;;;;;AA7B0C;;AAAA;;AAGO;;AAAA;;AAK1B;;AAAA;;AAEI;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AASsB;;AAAA;;;;;;AA1BrD;;AACI;;AAAI;;AAAmB;;AACvB;;AAiCJ;;;;;;AAjCwD;;AAAA;;;;UDzB/CC,0B;AAST,4CAAmBhhB,UAAnB,EAAkDE,GAAlD,EAAkFU,OAAlF,EAAsG;AAAA;;AAAnF,eAAAZ,UAAA,GAAAA,UAAA;AAA+B,eAAAE,GAAA,GAAAA,GAAA;AAAgC,eAAAU,OAAA,GAAAA,OAAA;AAPlF,eAAAR,KAAA,GAAe,IAAI,oDAAJ,EAAf;AAIA,eAAA6gB,UAAA,GAAa,IAAb;AACA,eAAAC,aAAA,GAAgB,KAAhB;AAGC;;;;iBAED,oBAAQ,CACP;;;iBAED,4BAAgB;AACZ,iBAAKD,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACA,iBAAKC,aAAL,GAAqB,CAAC,KAAKD,UAA3B;AAEH;;;iBAED,+BAAmB;AACf,iBAAKC,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACA,iBAAKD,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AAEH;;;iBAED,0BAAiBjb,KAAjB,EAAwC;AAAA;;AACpC,gBAAMiU,YAAY,GAAG,IAAI,wEAAJ,EAArB;AAEAA,wBAAY,CAACwB,IAAb,GAAoBzV,KAApB;AACAiU,wBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,wBAAY,CAACE,SAAb,GAAyB,OAAzB;AACAF,wBAAY,CAACG,SAAb,GAAyB,MAAzB;AACAH,wBAAY,CAACI,QAAb,GAAwB,MAAxB;AACAJ,wBAAY,CAACK,QAAb,GAAwB,MAAxB;;AACA,gBAAMC,SAAS,GAAG,KAAK3Z,OAAL,CAAa4Z,IAAb,CAAkB,yFAAlB,EAAwCP,YAAxC,EAAsDQ,WAAtD,GAAoEC,SAApE,GAAgF/X,IAAhF,CAAqF,YAAM;AACzG,qBAAI,CAACzC,GAAL,CAAS6E,aAAT;AACH,aAFiB,CAAlB;AAGH;;;;;;;yBAvCQic,0B,EAA0B,iI,EAAA,gI,EAAA,mI;AAAA,O;;;cAA1BA,0B;AAA0B,+C;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,oc;AAAA;AAAA;ACZvC;;AACI;;AAAI;;AAAe;;AACnB;;AACI;;AACI;;AAA8B;AAAA;AAAA;;AAAiD;;AACnF;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AACA;;AACI;;AACA;;AACA;;AACJ;;AACA;;AACI;;AAKJ;;AACJ;;AACA;;AACI;;AAGJ;;AACA;;AAEJ;;AACA;;AACA;;AAoCJ;;;;AAnE0C;;AAAA;;AAGO;;AAAA;;AAKhC;;AAAA;;AAEU;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGI;;AAAA;;AAQkB;;AAAA;;AAQ9B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCnB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIaG,O;AAKT,yBAAYhY,OAAZ,EAA+BM,aAA/B,EAA8D4C,OAA9D,EAAiF;AAAA;;AAC7E,eAAK+U,SAAL,GAAiBjY,OAAjB;AAEA,eAAKkY,cAAL,GAAsB5X,aAAtB;AAEA,eAAK6X,QAAL,GAAgBjV,OAAhB;AACH;;;;eAED,eAAY;AACR,mBAAO,KAAK+U,SAAZ;AACH;;;eAED,eAAiB;AACb,mBAAO,KAAKC,cAAZ;AACH;;;eAED,eAAW;AACP,mBAAO,KAAKC,QAAZ;AACH;;;iBAEO,yBAAgB7X,aAAhB,EAAuE;AAC3E,gBAAIwM,KAAK,CAACC,OAAN,CAAczM,aAAd,CAAJ,EAAkC;AAC9B,kBAAIA,aAAa,CAAC0M,MAAd,KAAyB,CAA7B,EAAgC;AAC5B;AACH;;AACD,kBAAI1M,aAAa,CAAC,CAAD,CAAb,YAA4B,0DAAhC,EAA8C;AAAA,6DACfA,aADe;AAAA;;AAAA;AAC1C,4EAA0C;AAAA,wBAA/BuC,YAA+B;;AACtC,yBAAKqV,cAAL,CAAoBnb,IAApB,CAAyB8F,YAAzB;AACH;AAHyC;AAAA;AAAA;AAAA;AAAA;AAI7C,eAJD,MAIO;AACH,oBAAMtC,GAAG,GAAG,IAAI,0DAAJ,CAAiBD,aAAjB,CAAZ;;AACA,qBAAK4X,cAAL,CAAoBnb,IAApB,CAAyBwD,GAAzB;AACH;AACJ,aAZD,MAYO;AACH,mBAAK2X,cAAL,CAAoBnb,IAApB,CAAyBuD,aAAzB;AACH;AACJ;;;iBAEO,oBAAWN,OAAX,EAAqC;AACzC,gBAAI8M,KAAK,CAACC,OAAN,CAAc/M,OAAd,CAAJ,EAA4B;AAAA,2DACLA,OADK;AAAA;;AAAA;AACxB,0EAA4B;AAAA,sBAAjB+B,IAAiB;;AACxB,uBAAKkW,SAAL,CAAelb,IAAf,CAAoBgF,IAApB;AACH;AAHuB;AAAA;AAAA;AAAA;AAAA;AAI3B,aAJD,MAIO;AACH,mBAAKkW,SAAL,CAAelb,IAAf,CAAoBiD,OAApB;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UChDQoY,e;AAIT,mCAAc;AAAA;AACb;;;;iBAED,oBAAQ;AACJ,iBAAKC,IAAL;AAwEH;;;;;;;yBAhFQD,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,wI;AAAA;AAAA;ACP5B;;AAA6E;;AAAa;;AAC1F;;AACI;;AAAA;;AACJ;;AAAA;;;;AADU;;AAAA,4FAAkB,aAAlB,EAAkB,IAAlB;;;;;;;;;;;;;;;;;;;;;ACFV;AAAA;;;AAAA;AAAA;AAAA;;UAAaE,Y;AAGT,8BAAY5X,KAAZ,EAA6B;AAAA;;AACzB,eAAK6X,MAAL,GAAc7X,KAAd;AACH;;;;iBAEM,iBAAQqB,IAAR,EAAoB;AACvB,iBAAKwW,MAAL,CAAYxb,IAAZ,CAAiBgF,IAAjB;AACH;;;iBAEM,mBAAU6K,CAAV,EAAyB;AAC5B,mBAAO,KAAKlM,KAAL,CAAWwJ,QAAX,GAAsBtE,aAAtB,CAAoCgH,CAAC,CAAC1C,QAAF,EAApC,CAAP;AACH;;;eAED,eAAS;AACL,mBAAO,KAAKqO,MAAZ;AACH;;;iBAEM,oBAAQ;AACX,mBAAO,KAAK7X,KAAL,CAAWsD,IAAX,EAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACrBL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWawU,W;AAgBX;AAAA;AACC;;;;iBAEM,oBAAQ,CACd;;;;;;;yBApBUA,W;AAAW,O;;;cAAXA,W;AAAW,+B;AAAA;AAAA;sEAIX,iG,EAAsB,C;;sEAGtB,oG,EAAuB,C;;sEAGvB,uG,EAAwB,C;;sEAGxB,8F,EAAqB,C;;;;;;;;;;;;;;;;;;;;ACzBlC;;AACE;;AACA;;AACA;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,Y;AAGT,8BAAYvZ,oBAAZ,EAAwDwZ,cAAxD,EAA8F;AAAA;;AAC1F,eAAKxZ,oBAAL,GAA4BA,oBAA5B;AACA,eAAKwZ,cAAL,GAAsBA,cAAtB;AACA,eAAKvZ,cAAL,GAAsBD,oBAAoB,CAACE,kBAA3C;AACA,eAAKC,KAAL,GAAaH,oBAAoB,CAACG,KAAlC;AACA,eAAKsZ,YAAL,GAAoB,IAAI,gEAAJ,EAApB;AACH;AAWD;;;;;;;;;;;;;;;;iBAYO,oBAAWC,MAAX,EAA2BC,MAA3B,EAA2CC,MAA3C,EAE2D;AAAA;;AAAA,gBADhDC,OACgD,uEAD9B,CAC8B;AAAA,gBAD3BC,OAC2B,uEADT,CACS;AAAA,gBADNC,OACM,uEADY,CACZ;AAAA,gBAAhDC,QAAgD,uEAA7B,CAA6B;AAAA,gBAA1BC,SAA0B,uEAAL,KAAK;AAE9D,iBAAKha,cAAL,CAAoBe,SAApB,CAA8BT,OAA9B,CAAsC,UAACO,OAAD,EAAUjE,KAAV,EAAoB;AACtD,kBAAM+K,CAAC,GAAG8R,MAAM,GAAGG,OAAT,GAAmBhd,KAA7B;AACA,kBAAMgL,CAAC,GAAG8R,MAAM,GAAGG,OAAnB;AACA,kBAAMhS,CAAC,GAAG8R,MAAM,GAAGG,OAAnB;;AAEA,kBAAMpF,OAAO,GAAW,OAAI,CAAC6E,cAAL,CAAoBU,aAApB,CAAkCpZ,OAAlC,CAAxB;;AAEA,kBAAMmE,KAAK,GAAG,OAAI,CAACkV,mBAAL,CAAyBxF,OAAzB,EAAkC,OAAI,CAAC3U,oBAAL,CAA0Boa,UAA5D,EAAwExS,CAAxE,EAA2EC,CAA3E,EAA8EC,CAA9E,EAAiF,GAAjF,EACV,MADU,EACFkS,QADE,EACQ,IADR,CAAd;;AAEA,qBAAI,CAACP,YAAL,CAAkB3X,KAAlB,CAAwBmD,KAAxB;;AACA,kBAAIgV,SAAJ,EAAe;AACX,oBAAMvS,IAAI,GAAG,yDAAY2S,UAAZ,CAAuB,IAAI,6CAAJ,CAAkBzS,CAAlB,EAAqB+R,MAArB,EAA6BC,MAA7B,CAAvB,EAA6D3U,KAAK,CAACE,QAAnE,CAAb;;AACA,uBAAI,CAAChF,KAAL,CAAW0B,GAAX,CAAe6F,IAAf;;AACA,uBAAI,CAAC+R,YAAL,CAAkB3X,KAAlB,CAAwB4F,IAAxB;;AACA,uBAAI,CAAC1H,oBAAL,CAA0Boa,UAA1B,CAAqCvY,GAArC,CAAyC6F,IAAzC;AACH;;AACD,qBAAI,CAAC1H,oBAAL,CAA0Boa,UAA1B,CAAqCvY,GAArC,CAAyCoD,KAAzC;AACH,aAjBD;AAkBH;AAED;;;;;;;;;;;;;;;iBAYO,oBAAWyU,MAAX,EAA2BC,MAA3B,EAA2CC,MAA3C,EAE2D;AAAA;;AAAA,gBADhDC,OACgD,uEAD9B,CAC8B;AAAA,gBAD3BC,OAC2B,uEADT,CACS;AAAA,gBADNC,OACM,uEADY,CACZ;AAAA,gBAAhDC,QAAgD,uEAA7B,CAA6B;AAAA,gBAA1BC,SAA0B,uEAAL,KAAK;AAE9D,iBAAKha,cAAL,CAAoB0N,kBAApB,CAAuCpN,OAAvC,CAA+C,UAACoD,YAAD,EAAe9G,KAAf,EAAyB;AACpE,kBAAMyd,MAAM,GAAa,EAAzB;AACA,kBAAM1S,CAAC,GAAG8R,MAAM,GAAGG,OAAnB;AACA,kBAAMhS,CAAC,GAAG8R,MAAM,GAAGG,OAAT,GAAmBjd,KAA7B;AACA,kBAAMiL,CAAC,GAAG8R,MAAM,GAAGG,OAAnB;AAEApW,0BAAY,CAACpD,OAAb,CAAqB,UAACsC,IAAD,EAAU;AAC3ByX,sBAAM,CAACzc,IAAP,CAAY,OAAI,CAAC2b,cAAL,CAAoBe,kBAApB,CAAuC1X,IAAvC,CAAZ;AACH,eAFD;;AAGA,kBAAM2X,YAAY,GAAG,OAAI,CAAChB,cAAL,CAAoBiB,YAApB,CAAiCH,MAAjC,CAArB;;AACA,kBAAMrV,KAAK,GAAG,OAAI,CAACkV,mBAAL,CAAyBK,YAAzB,EAAuC,OAAI,CAACxa,oBAAL,CAA0Boa,UAAjE,EAA6ExS,CAA7E,EAAgFC,CAAhF,EAAmFC,CAAnF,EAAsF,GAAtF,EACV,MADU,EACFkS,QADE,EACQ,IADR,CAAd;;AAGA,qBAAI,CAACP,YAAL,CAAkB3X,KAAlB,CAAwBmD,KAAxB;;AACA,kBAAIgV,SAAJ,EAAe;AACX,oBAAMvS,IAAI,GAAG,yDAAY2S,UAAZ,CAAuB,IAAI,6CAAJ,CAAkBX,MAAlB,EAA0B7R,CAA1B,EAA6B+R,MAA7B,CAAvB,EAA6D3U,KAAK,CAACE,QAAnE,CAAb;;AACA,uBAAI,CAAChF,KAAL,CAAW0B,GAAX,CAAe6F,IAAf;;AACA,uBAAI,CAAC+R,YAAL,CAAkB3X,KAAlB,CAAwB4F,IAAxB;;AACA,uBAAI,CAAC1H,oBAAL,CAA0Boa,UAA1B,CAAqCvY,GAArC,CAAyC6F,IAAzC;AACH;;AACD,qBAAI,CAAC1H,oBAAL,CAA0Boa,UAA1B,CAAqCvY,GAArC,CAAyCoD,KAAzC;AACH,aArBD;AAsBH;AAED;;;;;;;;;;;;;;;iBAYO,oBAAWyU,MAAX,EAA2BC,MAA3B,EAA2CC,MAA3C,EAE2D;AAAA,gBADhDC,OACgD,uEAD9B,CAC8B;AAAA,gBAD3BC,OAC2B,uEADT,CACS;AAAA,gBADNC,OACM,uEADY,CACZ;AAAA,gBAAhDC,QAAgD,uEAA7B,CAA6B;AAAA,gBAA1BC,SAA0B,uEAAL,KAAK;AAC9D,gBAAM1S,KAAK,GAAG,KAAKtH,cAAL,CAAoBK,UAApB,CAA+BwN,MAA7C;;AACA,iBAAK,IAAI4E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnL,KAApB,EAA2BmL,CAAC,EAA5B,EAAgC;AAC5B,kBAAM9K,CAAC,GAAG8R,MAAM,GAAGG,OAAnB,CAD4B,CAE5B;;AACA,kBAAMhS,CAAC,GAAG8R,MAAM,GAAGG,OAAnB;AACA,kBAAMhS,CAAC,GAAG8R,MAAM,GAAGrS,KAAT,GAAiB,CAAjB,GAAqBmL,CAArB,GAAyBqH,OAAnC;AACA,kBAAM9R,OAAO,GAAG,KAAKhI,cAAL,CAAoBK,UAApB,CAA+BoS,CAA/B,EAAkCvO,IAAlD;AACA,kBAAMc,KAAK,GAAG,KAAKkV,mBAAL,CAAyBlS,OAAzB,EAAkC,KAAKjI,oBAAL,CAA0Boa,UAA5D,EAAwExS,CAAxE,EAA2EC,CAA3E,EAA8EC,CAA9E,EAAiF,GAAjF,EACV,MADU,EACFkS,QADE,EACQ,IADR,CAAd;AAEA,mBAAKP,YAAL,CAAkB3X,KAAlB,CAAwBmD,KAAxB;;AACA,kBAAIgV,SAAJ,EAAe;AACX,oBAAMvS,IAAI,GAAG,yDAAY2S,UAAZ,CAAuB,IAAI,6CAAJ,CAAkBX,MAAlB,EAA0BC,MAA1B,EAAkC7R,CAAlC,CAAvB,EAA6D7C,KAAK,CAACE,QAAnE,CAAb;;AACA,qBAAKhF,KAAL,CAAW0B,GAAX,CAAe6F,IAAf;AACA,qBAAK+R,YAAL,CAAkB3X,KAAlB,CAAwB4F,IAAxB;AACA,qBAAK1H,oBAAL,CAA0Boa,UAA1B,CAAqCvY,GAArC,CAAyC6F,IAAzC;AACH;;AACD,mBAAK1H,oBAAL,CAA0Boa,UAA1B,CAAqCvY,GAArC,CAAyCoD,KAAzC;AACH;AACJ;AAED;;;;;;;;;;;;;;;;iBAaQ,6BAAoBgD,OAApB,EAAqCyS,MAArC,EAE4C;AAAA,gBAFiB9S,CAEjB,uEAF6B,CAE7B;AAAA,gBAFgCC,CAEhC,uEAF4C,CAE5C;AAAA,gBAF+CC,CAE/C,uEAF2D,CAE3D;AAAA,gBADxB6S,UACwB,uEADH,GACG;AAAA,gBADExX,KACF,uEADkB,MAClB;AAAA,gBAD0B6W,QAC1B,uEAD6C,CAC7C;AAAA,gBAAxBvW,OAAwB,uEAAL,KAAK;;AAChD,gBAAMgF,MAAM,GAAG,yDAAYmS,qBAAZ,CAAkCD,UAAlC,EAA8C,EAA9C,EAAkD1S,OAAlD,EAA2D9E,KAA3D,CAAf;;AACA,gBAAM0X,OAAO,GAAG,IAAI,mDAAJ,CAAwBpS,MAAxB,CAAhB,CAFgD,CAGhD;AACA;;AACAoS,mBAAO,CAACC,SAAR,GAAoB,kDAApB;AACAD,mBAAO,CAACE,KAAR,GAAgB,yDAAhB;AACAF,mBAAO,CAACG,KAAR,GAAgB,yDAAhB;AAEA,gBAAMC,aAAa,GAAG,IAAI,oDAAJ,CAAyB;AAC3CC,iBAAG,EAAEL,OADsC;AAE3CM,yBAAW,EAAE;AAF8B,aAAzB,CAAtB;AAIAF,yBAAa,CAACjB,QAAd,GAAyBA,QAAzB;AAEA,gBAAMoB,cAAc,GAAG,IAAvB;AACA,gBAAMnW,KAAK,GAAG,IAAI,4CAAJ,CAAiBgW,aAAjB,CAAd;AACAP,kBAAM,CAAC7Y,GAAP,CAAWoD,KAAX;AACAA,iBAAK,CAACE,QAAN,CAAeC,GAAf,CAAmBwC,CAAnB,EAAsBC,CAAtB,EAAyBC,CAAzB;AACA7C,iBAAK,CAAC0C,KAAN,CAAYC,CAAZ,GAAgBa,MAAM,CAACpB,KAAP,GAAe+T,cAA/B;AACAnW,iBAAK,CAAC0C,KAAN,CAAYE,CAAZ,GAAgBY,MAAM,CAACnB,MAAP,GAAgB8T,cAAhC;AACAnW,iBAAK,CAAC1B,QAAN,CAAe,UAACC,OAAD,EAAa;AACxBA,qBAAO,CAACC,OAAR,GAAkBA,OAAlB;AACH,aAFD;AAGA,mBAAOwB,KAAP;AACH;AAED;;;;;;iBAGO,yBAAa;AAChB,iBAAKwU,YAAL,CAAkBpU,OAAlB;AACH;;;;;;;;;;;;;;;;;;;;;AC1LL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASagW,W;AAWT,6BAAYrb,oBAAZ,EAAwDsb,oBAAxD,EAAoG;AAAA;;AAChG,eAAKtb,oBAAL,GAA4BA,oBAA5B;AACA,eAAKC,cAAL,GAAsBD,oBAAoB,CAACE,kBAA3C;AACA,eAAKC,KAAL,GAAaH,oBAAoB,CAACG,KAAlC;AACA,eAAKob,YAAL,GAAoB,IAAI,0DAAJ,CAAiBvb,oBAAjB,EAAuCsb,oBAAvC,CAApB;AACA,eAAKE,eAAL,GAAuB,IAAI,gEAAJ,CAAoBxb,oBAApB,CAAvB;AACA,eAAKyb,UAAL,GAAkB,IAAI,gEAAJ,EAAlB;AACH;AAED;;;;;;;iBAGO,+BAAmB;AAEtB,gBAAMpU,KAAK,GAAG,KAAKpH,cAAL,CAAoBe,SAApB,CAA8B8M,MAA5C;AACA,gBAAMxG,MAAM,GAAG,CAAf;AACA,gBAAMC,KAAK,GAAG,KAAKtH,cAAL,CAAoBK,UAApB,CAA+BwN,MAA7C;AAEA,iBAAK9N,oBAAL,CAA0Boa,UAA1B,GAAuC,yDAAYsB,iBAAZ,CAA8BrU,KAA9B,EAAqCC,MAArC,EAA6CC,KAA7C,CAAvC;AACA,iBAAKkU,UAAL,CAAgB3Z,KAAhB,CAAsB,KAAK9B,oBAAL,CAA0Boa,UAAhD;AACA,iBAAKja,KAAL,CAAW0B,GAAX,CAAe,KAAK7B,oBAAL,CAA0Boa,UAAzC;AAEA,gBAAMV,MAAM,GAAG,CAACrS,KAAD,GAAS,CAAxB;AACA,gBAAMsS,MAAM,GAAG,CAACrS,MAAD,GAAU,CAAzB;AACA,gBAAMsS,MAAM,GAAGrS,KAAK,GAAG,CAAvB;AAEA,iBAAKgU,YAAL,CAAkBI,UAAlB,CAA6BjC,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqD,GAArD,EAA0D,CAA1D,EAA6D,GAA7D,EAAkErV,IAAI,CAACqX,EAAL,GAAU,CAA5E;AACA,iBAAKL,YAAL,CAAkBM,UAAlB,CAA6BnC,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqD,CAAC,GAAtD,EAA2D,CAA3D,EAA8D,CAAC,GAA/D,EAAoE,CAApE;AAEA,iBAAK4B,eAAL,CAAqBM,YAArB;AAEA,iBAAK9b,oBAAL,CAA0B+b,aAA1B,CAAwCC,YAAxC,GAAuD,KAAvD;AACA,iBAAKhc,oBAAL,CAA0B+b,aAA1B,CAAwCE,SAAxC,GAAoD,KAApD;AACA,gBAAMC,WAAW,GAAG,KAAKlc,oBAAL,CAA0Boa,UAA1B,CAAqCjV,QAArC,CAA8CgX,KAA9C,EAApB;AAEA,gBAAMtU,CAAC,GAAG,KAAK5H,cAAL,CAAoB0N,kBAApB,CAAuCG,MAAvC,GAAgD,CAA1D;;AAEA,gBAAI,KAAK9N,oBAAL,CAA0Boc,aAA1B,YAAmD,uDAAvD,EAAgF;AAC5E,mBAAKpc,oBAAL,CAA0Bqc,YAA1B;AACH;;AAED,iBAAKrc,oBAAL,CAA0Boc,aAA1B,CAAwCjX,QAAxC,CAAiDC,GAAjD,CAAqD8W,WAAW,CAACtU,CAAjE,EAAoEC,CAApE,EAAwEqU,WAAW,CAACpU,CAApF;AACH;AAED;;;;;;iBAGO,gCAAoB;AAEvB,gBAAMT,KAAK,GAAG,KAAKpH,cAAL,CAAoBe,SAApB,CAA8B8M,MAA5C;AACA,gBAAMxG,MAAM,GAAG,KAAKrH,cAAL,CAAoB0N,kBAApB,CAAuCG,MAAtD;AACA,gBAAMvG,KAAK,GAAG,CAAd;AAEA,iBAAKvH,oBAAL,CAA0Boa,UAA1B,GAAuC,yDAAYsB,iBAAZ,CAA8BrU,KAA9B,EAAqCC,MAArC,EAA6CC,KAA7C,CAAvC;AACA,iBAAKkU,UAAL,CAAgB3Z,KAAhB,CAAsB,KAAK9B,oBAAL,CAA0Boa,UAAhD;AACA,iBAAKja,KAAL,CAAW0B,GAAX,CAAe,KAAK7B,oBAAL,CAA0Boa,UAAzC;AAEA,gBAAMV,MAAM,GAAG,CAACrS,KAAD,GAAS,CAAxB;AACA,gBAAMsS,MAAM,GAAG,CAACrS,MAAD,GAAU,CAAzB;AACA,gBAAMsS,MAAM,GAAGrS,KAAK,GAAG,CAAvB;AAEA,iBAAKgU,YAAL,CAAkBI,UAAlB,CAA6BjC,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqD,GAArD,EAA0D,CAAC,GAA3D,EAAgE,CAAhE,EAAmErV,IAAI,CAACqX,EAAL,GAAU,CAA7E;AACA,iBAAKL,YAAL,CAAkBe,UAAlB,CAA6B5C,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqD,CAAC,GAAtD,EAA2D,GAA3D,EAAgE,CAAhE;AAEA,iBAAK4B,eAAL,CAAqBM,YAArB;AAEA,iBAAK9b,oBAAL,CAA0B+b,aAA1B,CAAwCC,YAAxC,GAAuD,KAAvD;AACA,iBAAKhc,oBAAL,CAA0B+b,aAA1B,CAAwCE,SAAxC,GAAoD,KAApD;AACA,gBAAMC,WAAW,GAAG,KAAKlc,oBAAL,CAA0Boa,UAA1B,CAAqCjV,QAArC,CAA8CgX,KAA9C,EAApB;AACA,gBAAMrU,CAAC,GAAG,KAAK7H,cAAL,CAAoBK,UAApB,CAA+BwN,MAA/B,GAAwC,CAAlD;;AAEA,gBAAI,KAAK9N,oBAAL,CAA0Boc,aAA1B,YAAmD,uDAAvD,EAAgF;AAC5E,mBAAKpc,oBAAL,CAA0Bqc,YAA1B;AACH;;AAED,iBAAKrc,oBAAL,CAA0Boc,aAA1B,CAAwCjX,QAAxC,CAAiDC,GAAjD,CAAqD8W,WAAW,CAACtU,CAAjE,EAAoEsU,WAAW,CAACrU,CAAhF,EAAmFC,CAAnF;AACH;AAED;;;;;;iBAGO,0BAAc;AAEjB,gBAAMT,KAAK,GAAG,CAAd;AACA,gBAAMC,MAAM,GAAG,KAAKrH,cAAL,CAAoB0N,kBAApB,CAAuCG,MAAtD;AACA,gBAAMvG,KAAK,GAAG,KAAKtH,cAAL,CAAoBK,UAApB,CAA+BwN,MAA7C;AAEA,iBAAK9N,oBAAL,CAA0Boa,UAA1B,GAAuC,yDAAYsB,iBAAZ,CAA8BrU,KAA9B,EAAqCC,MAArC,EAA6CC,KAA7C,CAAvC;AACA,iBAAKkU,UAAL,CAAgB3Z,KAAhB,CAAsB,KAAK9B,oBAAL,CAA0Boa,UAAhD;AACA,iBAAKja,KAAL,CAAW0B,GAAX,CAAe,KAAK7B,oBAAL,CAA0Boa,UAAzC;AAEA,gBAAMV,MAAM,GAAG,CAACrS,KAAD,GAAS,CAAxB;AACA,gBAAMsS,MAAM,GAAG,CAACrS,MAAD,GAAU,CAAzB;AACA,gBAAMsS,MAAM,GAAGrS,KAAK,GAAG,CAAvB;AAEA,iBAAKgU,YAAL,CAAkBe,UAAlB,CAA6B5C,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqD,CAArD,EAAwD,GAAxD,EAA6D,GAA7D;AACA,iBAAK2B,YAAL,CAAkBM,UAAlB,CAA6B,CAACnC,MAA9B,EAAsCC,MAAtC,EAA8CC,MAA9C,EAAsD,CAAtD,EAAyD,CAAC,GAA1D,EAA+D,CAAC,GAAhE,EAAqErV,IAAI,CAACqX,EAAL,GAAU,CAA/E;AAEA,iBAAKJ,eAAL,CAAqBM,YAArB;AAEA,iBAAK9b,oBAAL,CAA0B+b,aAA1B,CAAwCC,YAAxC,GAAuD,KAAvD;AACA,iBAAKhc,oBAAL,CAA0B+b,aAA1B,CAAwCE,SAAxC,GAAoD,KAApD;AAEA,gBAAMC,WAAW,GAAG,KAAKlc,oBAAL,CAA0Boa,UAA1B,CAAqCjV,QAArC,CAA8CgX,KAA9C,EAApB;AACA,gBAAMvU,CAAC,GAAG,KAAK3H,cAAL,CAAoBe,SAApB,CAA8B8M,MAA9B,GAAuC,CAAjD;;AAEA,gBAAI,KAAK9N,oBAAL,CAA0Boc,aAA1B,YAAmD,uDAAvD,EAAgF;AAC5E,mBAAKpc,oBAAL,CAA0Bqc,YAA1B;AACH;;AAED,iBAAKrc,oBAAL,CAA0Boc,aAA1B,CAAwCjX,QAAxC,CAAiDC,GAAjD,CAAqDwC,CAArD,EAAwDsU,WAAW,CAACrU,CAApE,EAAuEqU,WAAW,CAACpU,CAAnF;AACH;;;iBAEM,uBAAW;AACd,gBAAMT,KAAK,GAAG,KAAKpH,cAAL,CAAoBe,SAApB,CAA8B8M,MAA5C;AACA,gBAAMxG,MAAM,GAAG,KAAKrH,cAAL,CAAoB0N,kBAApB,CAAuCG,MAAtD;AACA,gBAAMvG,KAAK,GAAG,KAAKtH,cAAL,CAAoBK,UAApB,CAA+BwN,MAA7C;AAEA,iBAAK9N,oBAAL,CAA0Boa,UAA1B,GAAuC,yDAAYsB,iBAAZ,CAA8BrU,KAA9B,EAAqCC,MAArC,EAA6CC,KAA7C,CAAvC;AACA,iBAAKkU,UAAL,CAAgB3Z,KAAhB,CAAsB,KAAK9B,oBAAL,CAA0Boa,UAAhD;AACA,iBAAKja,KAAL,CAAW0B,GAAX,CAAe,KAAK7B,oBAAL,CAA0Boa,UAAzC;AAEA,gBAAMV,MAAM,GAAG,CAACrS,KAAD,GAAS,CAAxB;AACA,gBAAMsS,MAAM,GAAG,CAACrS,MAAD,GAAU,CAAzB;AAEA,gBAAMsS,MAAM,GAAGrS,KAAK,GAAG,CAAvB;AACA,iBAAKvH,oBAAL,CAA0B+b,aAA1B,CAAwCC,YAAxC,GAAuD,IAAvD;AACA,iBAAKhc,oBAAL,CAA0B+b,aAA1B,CAAwCE,SAAxC,GAAoD,IAApD;AAEA,iBAAKjc,oBAAL,CAA0B+b,aAA1B,CAAwCQ,MAAxC,CAA+CC,IAA/C,CAAoD,KAAKxc,oBAAL,CAA0Boa,UAA1B,CAAqCjV,QAArC,CAA8CgX,KAA9C,EAApD,EAhBc,CAkBd;;AACA,iBAAKZ,YAAL,CAAkBI,UAAlB,CAA6BjC,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqD,GAArD,EAA0D,CAAC,GAA3D,EAAgE,CAAhE,EAAmErV,IAAI,CAACqX,EAAL,GAAU,CAA7E;AACA,iBAAKL,YAAL,CAAkBe,UAAlB,CAA6B5C,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqD,CAAC,GAAtD,EAA2D,GAA3D,EAAgE,CAAhE;AACA,iBAAK2B,YAAL,CAAkBM,UAAlB,CAA6B,CAACnC,MAA9B,EAAsCC,MAAtC,EAA8CC,MAA9C,EAAsD,GAAtD,EAA2D,CAA3D,EAA8D,CAAC,GAA/D,EArBc,CAuBd;;AACA,iBAAK4B,eAAL,CAAqBM,YAArB;AAEA,iBAAK9b,oBAAL,CAA0B+b,aAA1B,CAAwCC,YAAxC,GAAuD,IAAvD;AACA,iBAAKhc,oBAAL,CAA0B+b,aAA1B,CAAwCE,SAAxC,GAAoD,IAApD;AAEA,gBAAMC,WAAW,GAAG,KAAKlc,oBAAL,CAA0Boa,UAA1B,CAAqCjV,QAArC,CAA8CgX,KAA9C,EAApB;AACA,gBAAM1V,CAAC,GAAG,KAAKxG,cAAL,CAAoBe,SAApB,CAA8B8M,MAAxC;AACA,gBAAMJ,CAAC,GAAG,KAAKzN,cAAL,CAAoB0N,kBAApB,CAAuCG,MAAjD;AACA,gBAAMhG,CAAC,GAAGvD,IAAI,CAACkY,IAAL,CAAU,SAAAhW,CAAA,EAAK,CAAL,IAAS,SAAAiH,CAAA,EAAK,CAAL,CAAnB,IAA6B,CAAvC;AAEA,iBAAK1N,oBAAL,CAA0Boc,aAA1B,CAAwCjX,QAAxC,CAAiDC,GAAjD,CAAqD8W,WAAW,CAACtU,CAAZ,GAAgB,CAArE,EAAwEsU,WAAW,CAACrU,CAAZ,GAAgB,CAAxF,EAA2FC,CAA3F;AACH;AAED;;;;;;iBAGO,sBAAU;AACb,iBAAKyT,YAAL,CAAkBmB,aAAlB;AACA,iBAAKlB,eAAL,CAAqBmB,YAArB;AACA,iBAAKlB,UAAL,CAAgBpW,OAAhB;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChLL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC+CgB;;AACI;;AACJ;;;;;;AAFiF;;AAC7E;;AAAA;;;;;;;;AALhB;;AACI;;AACI;;AAAW;;AAAO;;AAClB;;AAAY;AAAA;;AAAA;;AAAA;AAAA;;AACR;;AAGJ;;AACJ;;AACA;;AACA;;AAAG;;AAAmB;;AACtB;;AACI;;AAA0E;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACJ;;AACA;;AAAqE;AAAA;;AAAA;;AAAA;AAAA;;AACjE;;AACJ;;AACJ;;AACA;;AACA;;AAAG;;AAAmB;;AACtB;;AACI;;AAA8E;AAAA;;AAAA;;AAAA;AAAA;;AAC1E;;AACJ;;AACA;;AAA8E;AAAA;;AAAA;;AAAA;AAAA;;AAC1E;;AACJ;;AACJ;;AACA;;AACA;;AAAG;;AAAa;;AAChB;;AACA;;AAAG;;AAAc;;AACjB;;AACI;;AAA0C;AAAA;;AAAA;;AAAA,mBAAS,OAAAC,aAAA,eAAT;AAAqC,WAArC;;AAAuC;;AAAkB;;AACvG;;AACJ;;;;;;AAjCuD;;AAAA;;AACZ;;AAAA;;AAQjB;;AAAA;;AAGA;;AAAA;;AAOS;;AAAA;;AAGA;;AAAA;;;;UD7D1BsX,uB;AAUT,yCACYpX,EADZ,EAEWF,aAFX,EAEgD;AAAA;;AADpC,eAAAE,EAAA,GAAAA,EAAA;AACD,eAAAF,aAAA,GAAAA,aAAA;AAVX,eAAA7B,OAAA,GAAU,KAAV;AAWC;;;;iBAEM,oBAAQ;AACX,iBAAKoZ,uBAAL,GAA+B,IAAI,0DAAJ,CAAgB,IAAhB,CAA/B;AACA,iBAAKC,kBAAL,GAA0B,IAAI,0DAAJ,CAAgB,IAAhB,CAA1B;AACA,iBAAKC,sBAAL,GAA8B,IAAI,0DAAJ,CAAgB,IAAhB,CAA9B;AACA,iBAAKC,2BAAL,GAAmC,IAAI,0DAAJ,CAAgB,IAAhB,CAAnC;AACA,iBAAKC,mBAAL,GAA2B,IAAI,0DAAJ,CAAgB,EAAhB,CAA3B;AAGH;;;iBAED,wBAAY;AACR,iBAAK3X,aAAL,CAAmB4X,SAAnB,CAA6B,KAAKD,mBAAL,CAAyB/iB,KAAtD;AACH;;;iBAED,8BAAkB;AACd,iBAAKoL,aAAL,CAAmB6X,uBAAnB,CAA2C,KAAKN,uBAAL,CAA6B3iB,KAAxE;AACH;;;iBAED,yBAAa;AACT,iBAAKoL,aAAL,CAAmB8X,kBAAnB,CAAsC,KAAKN,kBAAL,CAAwB5iB,KAA9D;AACH;;;;;;;yBAnCQ0iB,uB,EAAuB,2H,EAAA,oJ;AAAA,O;;;cAAvBA,uB;AAAuB,6C;AAAA,gB;AAAA,e;AAAA,igB;AAAA;AAAA;AC4BpC;;AACI;;AACI;;AACI;;AAAwB;;AAAQ;;AAChC;;AAA0B;AAAA;AAAA;;AAA4B;;AAC1D;;AAEJ;;AACA;;AAqCJ;;;;AArC4B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCrCfS,oB;AAEX,wCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,oB;AAAoB,O;;;cAApBA,oB;AAAoB,yC;AAAA,gB;AAAA,e;AAAA,6G;AAAA;AAAA;ACPjC;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA0JaC,S;;;;;yBAAAA,S;AAAS,O;;;cAATA,S;AAAS,oBAHd,2DAGc;;;mBAfP,CACP,8FADO,EAEP,iEAFO,EAGP;AACIC,iBAAO,EAAE,kEADb;AAEIC,kBAAQ,EAAE;AACNC,6BAAiB,EAAE;AAAA,qBAAM;AAAA;AAAA;AAAA;AAAA,yBAAN;AAAA;AADb;AAFd,SAHO,EASP,wEATO,C;AAUV,kBAxCQ,CACL,uEADK,EAEL,qEAFK,EAGL,oEAHK,EAIL,mEAJK,EAKL,6FALK,EAML,qEANK,EAOL,gEAPK,EAQL,gFARK,EASL,yEATK,EAUL,+EAVK,EAWL,qEAXK,EAYL,yEAZK,EAaL,uEAbK,EAcL,2DAdK,EAeL,6EAfK,EAgBL,oFAhBK,EAiBL,2EAjBK,EAkBL,uEAlBK,EAmBL,yEAnBK,EAoBL,uEApBK,EAqBL,qEArBK,EAsBL,uEAtBK,EAuBL,0EAvBK,EAwBL,8EAxBK,EAyBL,2EAzBK,EA0BL,4FA1BK,EA2BL,oFA3BK,EA4BL,uEA5BK,CAwCR;;;;6HAKQH,S,EAAS;AAAA,yBAnFd,2DAmFc,EAlFd,yEAkFc,EAjFd,wGAiFc,EAhFd,kGAgFc,EA/Ed,oGA+Ec,EA9Ed,sGA8Ec,EA7Ed,kEA6Ec,EA5Ed,0FA4Ec,EA3Ed,qGA2Ec,EA1Ed,gGA0Ec,EAzEd,kFAyEc,EAxEd,yGAwEc,EAvEd,oFAuEc,EAtEd,oFAsEc,EArEd,+HAqEc,EApEd,yIAoEc,EAnEd,+IAmEc,EAlEd,0HAkEc,EAjEd,0GAiEc,EAhEd,mHAgEc,EA/Dd,qHA+Dc,EA9Dd,8IA8Dc,EA7Dd,sIA6Dc,EA5Dd,8HA4Dc,EA3Dd,6GA2Dc,EA1Dd,oEA0Dc,EAzDd,kGAyDc,EAxDd,yEAwDc,EAvDd,oIAuDc,EAtDd,2JAsDc,EArDd,qKAqDc,EApDd,mJAoDc,EAnDd,yJAmDc,EAlDd,iHAkDc,EAjDd,0HAiDc,EAhDd,kHAgDc,EA/Cd,oHA+Cc;AA/CO,oBAGrB,uEAHqB,EAIrB,qEAJqB,EAKrB,oEALqB,EAMrB,mEANqB,EAOrB,6FAPqB,EAQrB,qEARqB,EASrB,gEATqB,EAUrB,gFAVqB,EAWrB,yEAXqB,EAYrB,+EAZqB,EAarB,qEAbqB,EAcrB,yEAdqB,EAerB,uEAfqB,EAgBrB,2DAhBqB,EAiBrB,6EAjBqB,EAkBrB,oFAlBqB,EAmBrB,2EAnBqB,EAoBrB,uEApBqB,EAqBrB,yEArBqB,EAsBrB,uEAtBqB,EAuBrB,qEAvBqB,EAwBrB,uEAxBqB,EAyBrB,0EAzBqB,EA0BrB,8EA1BqB,EA2BrB,2EA3BqB,EA4BrB,4FA5BqB,EA6BrB,oFA7BqB,EA8BrB,uEA9BqB;AA+CP,S;AAjBA,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzItB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUaI,qB;AASX,uCAAoBtlB,UAApB,EAAkE+a,SAAlE,EAA0F;AAAA;;AAAtE,eAAA/a,UAAA,GAAAA,UAAA;AAA8C,eAAA+a,SAAA,GAAAA,SAAA;AAA0B;;;;iBAE5F,oBAAQ;AACN;AACA,iBAAK/J,mBAAL,GAA2B,IAAI,wEAAJ,EAA3B;AACA,iBAAKA,mBAAL,CAAyBC,IAAzB,GAAgC,MAAhC;AACA,iBAAKD,mBAAL,CAAyBE,KAAzB,GAAiC,CAAC,MAAD,CAAjC;AAEA,iBAAKqU,UAAL,GAAmB,+DAAnB;AACA,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKD,UAAL,CAAgB1Y,KAAhB,GAAwB,KAAK2Y,OAA7B;AACD;;;iBAED,0BAAc;AACZ,iBAAKD,UAAL,GAAkB,KAAKE,YAAL,CAAkBjjB,GAAlB,EAAlB;AACA,iBAAK+iB,UAAL,CAAgB1Y,KAAhB,GAAwB,KAAK2Y,OAA7B;AACA,iBAAKC,YAAL,CAAkBzK,IAAlB,GAAyB,KAAKuK,UAA9B;AACD;;;iBAED,gBAAI;AAAA;;AACF,gBAAMG,MAAM,GAAG,KAAKD,YAAL,CAAkBjjB,GAAlB,EAAf;AACA,iBAAKxC,UAAL,CAAgB2lB,cAAhB,CAA+BD,MAA/B,EAAuCzL,SAAvC,GAAmD/X,IAAnD,CACI,YAAM;AACJ,qBAAI,CAACqZ,YAAL,CAAkB,OAAlB;AACD,aAHL,EAII,UAAC9X,KAAD,EAAW;AACT,qBAAI,CAAC8X,YAAL,CAAkB,2BAAlB;AACD,aANL;AAQD;;;iBAED,wBAAY;AACV,iBAAKgK,UAAL,GAAkB,KAAKE,YAAL,CAAkBjjB,GAAlB,EAAlB;AACD;;;iBAED,sBAAayQ,OAAb,EAA8B;AAC5B,iBAAK8H,SAAL,CAAehB,IAAf,CAAoB9G,OAApB,EAA6B,EAA7B,EAAiC;AAACmI,sBAAQ,EAAE;AAAX,aAAjC;AACD;;;;;;;yBA9CUkK,qB,EAAqB,8J,EAAA,wI;AAAA,O;;;cAArBA,qB;AAAqB,2C;AAAA;AAAA;sEAKrB,0E,EAAmB,C;;;;;;;;;;;;;;AChBhC;;AACI;;AAAG;;AAAmC;;AAC1C;;AACA;;AACI;;AAAW;;AAAc;;AACzB;;AAAgB;AAAA;AAAA,eAAqB,eAArB,EAAqB;AAAA,qBAAkB,IAAAM,cAAA,EAAlB;AAAkC,aAAvD;;AAAhB;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AAGA;;AACI;;AAAoD;;AAAK;;AACzD;;AAAgE;AAAA,qBAAS,IAAAlK,IAAA,EAAT;AAAe,aAAf;;AAAuC;;AAAM;;AACjH;;;;AAZoB;;AAAA;;AAIC;;AAAA,yGAA+B,MAA/B,EAA+B,cAA/B;;AAMS;;AAAA;;AACuD;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCTxEmK,kB;AAEX,sCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,kB;AAAkB,O;;;cAAlBA,kB;AAAkB,uC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP/B;;AAAG;;AAAsD;;;;;;;;;;;;;;;;;;;;ACAzD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACiDwB;;AACoC;;AACpC;;;;;;AADY;;AAAwB;;AAAA;;;;;;;;AA7CpD;;AACI;;AACI;;AACI;;AAAW;;AAAe;;AAC1B;;AAAgB;AAAA;;AAAA;;AAAA;AAAA,aAA8D,eAA9D,EAA8D;AAAA;;AAAA;;AAAA;AAAA,WAA9D;;AAAhB;;AACJ;;AACA;;AACI;;AAAW;;AAAS;;AAEpB;;AAAY;AAAA;;AAAA;;AAAA;AAAA,aAA6D,eAA7D,EAA6D;AAAA;;AAAA;;AAAA;AAAA,WAA7D;;AACR;;AAAmC;;AAAc;;AACrD;;AACJ;;AACA;;AACI;;AAAW;;AAAI;;AACf;;AAAY;AAAA;;AAAA;;AAAA;AAAA,aAAwD,eAAxD,EAAwD;AAAA;;AAAA;;AAAA;AAAA,WAAxD;;AACR;;AAA4B;;AAAO;;AACnC;;AAA0B;;AAAK;;AACnC;;AACJ;;AACA;;AACI;;AAAW;;AAAO;;AAElB;;AAAiB;AAAA;;AAAA;;AAAA;AAAA,aAA2D,eAA3D,EAA2D;AAAA;;AAAA;;AAAA;AAAA,WAA3D;;AAAjB;;AAEJ;;AACA;;AACI;;AAAW;;AAAoB;;AAC/B;;AAAiB;AAAA;;AAAA;;AAAA;AAAA,aAAwE,eAAxE,EAAwE;AAAA;;AAAA;;AAAA;AAAA,WAAxE;;AAAjB;;AAEJ;;AACA;;AACI;;AAAW;;AAAW;;AACtB;;AAAiB;AAAA;;AAAA;;AAAA;AAAA,aAA+D,eAA/D,EAA+D;AAAA;;AAAA;;AAAA;AAAA,WAA/D;;AAAjB;;AAEJ;;AACA;;AACI;;AAAW;;AAAc;;AACzB;;AAAgB;AAAA;;AAAA;;AAAA;AAAA,aAAkE,eAAlE,EAAkE;AAAA;;AAAA;;AAAA;AAAA,WAAlE;;AAAhB;;AACJ;;AACA;;AACI;;AAAW;;AAAQ;;AACnB;;AAAY;AAAA;;AAAA;;AAAA;AAAA,aAAsD,eAAtD,EAAsD;AAAA;;AAAA;;AAAA;AAAA,WAAtD;;AACR;;AAAyB;;AAAI;;AAC7B;;AAGJ;;AACJ;;AACJ;;AACJ;;;;;;AA9C4B;;AAAA;;AAKJ;;AAAA;;AAMA;;AAAA;;AAQK;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKD;;AAAA;;AAIJ;;AAAA;;AAEsB;;AAAA;;;;;;AAS9C;;AACI;;AACJ;;;;;;AADiB;;AAAA,0GAA+B,MAA/B,EAA+B,4CAA/B;;;;UD7CZC,8B;AAkBT,gDACY9lB,UADZ,EAEY+a,SAFZ,EAGoCC,IAHpC,EAGkD;AAAA;;AAAA;;AAFtC,eAAAhb,UAAA,GAAAA,UAAA;AACA,eAAA+a,SAAA,GAAAA,SAAA;AACwB,eAAAC,IAAA,GAAAA,IAAA;AAVpC,eAAA+K,YAAA,GAAe,KAAf;AAYI,eAAK/lB,UAAL,CAAgBiC,YAAhB,GAA+BC,IAA/B,CAAoC,UAACC,GAAD,EAAkC;AAClE,mBAAI,CAACC,SAAL,GAAiBD,GAAG,CAACC,SAArB;AACH,WAFD;AAGH;;;;iBAED,oBAAQ;AAAA;;AACJ,iBAAK4jB,eAAL,GAAuB,KAAKhL,IAA5B;AAEA,iBAAKhK,mBAAL,GAA2B,IAAI,wEAAJ,EAA3B;AACA,iBAAKA,mBAAL,CAAyBC,IAAzB,GAAgC,MAAhC;AACA,iBAAKD,mBAAL,CAAyBE,KAAzB,GAAiC,CAAC,MAAD,CAAjC;AACA,iBAAK+U,2BAAL,GAAmC,IAAI,wEAAJ,EAAnC;AACA,iBAAKA,2BAAL,CAAiChV,IAAjC,GAAwC,MAAxC;AACA,iBAAKgV,2BAAL,CAAiC/U,KAAjC,GAAyC,CAAC,MAAD,CAAzC;AAEA,iBAAKlR,UAAL,CAAgBkmB,0BAAhB,CAA2C,KAAKlL,IAAhD,EAAsD9Y,IAAtD,CAA2D,UAACC,GAAD,EAA6B;AACpF,qBAAI,CAACgkB,uBAAL,GAA+BhkB,GAA/B;AACA,gEAAW6K,GAAX,CAAe,UAAf,EAA2B,MAA3B;AACA,gEAAWA,GAAX,CAAe,UAAf,EAA2B,oDAA3B;AAEA,qBAAI,CAACoZ,SAAL,GAAiB,gDAAS,OAAI,CAACjL,MAAL,CAAYlJ,aAArB,CAAjB,CALoF,CAMpF;;AACA,qBAAI,CAACmU,SAAL,CAAeC,OAAf,CAAuBC,OAAvB,CAA+B,cAA/B;;AACA,qBAAI,CAACF,SAAL,CAAeC,OAAf,CAAuB5jB,QAAvB,CAAgC,OAAI,CAAC0jB,uBAAL,CAA6BI,cAA7D;AACH,aATD;AAUH;;;iBAED,yBAAa;AACT,iBAAKd,YAAL,CAAkBzK,IAAlB,GAAyB,KAAKmL,uBAAL,CAA6BK,aAAtD;AACA,iBAAKL,uBAAL,CAA6BK,aAA7B,GAA6C,KAAKf,YAAL,CAAkBjjB,GAAlB,EAA7C;AACH;;;iBAED,wBAAY;AACR,iBAAK2jB,uBAAL,CAA6BK,aAA7B,GAA6C,KAAKf,YAAL,CAAkBjjB,GAAlB,EAA7C;AACH;;;iBAED,sBAAayQ,OAAb,EAA8B;AAC1B,iBAAK8H,SAAL,CAAehB,IAAf,CAAoB9G,OAApB,EAA6B,EAA7B,EAAiC;AAACmI,sBAAQ,EAAE;AAAX,aAAjC;AACH;;;iBAED,gBAAI;AAAA;;AACA,gBAAMsK,MAAM,GAAG,KAAKD,YAAL,CAAkBjjB,GAAlB,EAAf;AACA,gBAAM+jB,cAAc,GAAG,KAAKH,SAAL,CAAeC,OAAf,CAAuBI,QAAvB,EAAvB;AACA,iBAAKzmB,UAAL,CAAgB0mB,gBAAhB,CAAiC,KAAKV,eAAtC,EAAuDN,MAAvD,EAA+Da,cAA/D,EAA+EtM,SAA/E,GAA2F/X,IAA3F,CACI,YAAM;AACF,qBAAI,CAACqZ,YAAL,CAAkB,OAAlB;AACH,aAHL,EAII,UAAC9X,KAAD,EAAW;AACP,qBAAI,CAAC8X,YAAL,CAAkB,wBAAlB;AACH,aANL;AAQH;;;iBAED,mBAAM;AAAA;;AACF,iBAAKvb,UAAL,CAAgB2mB,gBAAhB,CAAiC,KAAKX,eAAtC,EAAuD/L,SAAvD,GAAmE/X,IAAnE,CACI,YAAM;AACF,qBAAI,CAACqZ,YAAL,CAAkB,OAAlB;AACH,aAHL,EAII,UAAC9X,KAAD,EAAW;AACP,qBAAI,CAAC8X,YAAL,CAAkB,kBAAlB;AACH,aANL;AAQH;;;;;;;yBArFQuK,8B,EAA8B,8J,EAAA,wI,EAAA,gEAqB3B,wEArB2B,C;AAqBZ,O;;;cArBlBA,8B;AAA8B,mD;AAAA;AAAA;sEAQ5B,0E,EAAmB,C;;;;;;;;;;;;;;;;;ACtBlC;;AACI;;AAAG;;AAAW;;AAAK;;AACvB;;AACA;;AAAuC;AAAA,qBAAuB,IAAArK,YAAA,EAAvB;AAAqC,aAArC;;AACnC;;AACI;;AAmDJ;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AACJ;;AACJ;;AAGA;;AACI;;AAAoD;;AAAK;;AACzD;;AAAgE;AAAA,qBAAS,IAAAC,IAAA,EAAT;AAAe,aAAf;;AAAiB;;AAAI;;AACrF;;AAA6D;AAAA,qBAAS,eAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAC1F;;;;AAvEuB;;AAAA;;AAIA;;AAAA;;AAqDA;;AAAA;;AAWO;;AAAA;;;;;;;;;;;;;;;;;;;;;ACrE9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYakL,sB;AAWX,wCAAoB5mB,UAApB,EAAkE+a,SAAlE,EAA0F;AAAA;;AAAtE,eAAA/a,UAAA,GAAAA,UAAA;AAA8C,eAAA+a,SAAA,GAAAA,SAAA;AAA0B;;;;iBAE5F,oBAAQ;AACN;AACA,iBAAK/J,mBAAL,GAA2B,IAAI,wEAAJ,EAA3B;AACA,iBAAKA,mBAAL,CAAyBC,IAAzB,GAAgC,MAAhC;AACA,iBAAKD,mBAAL,CAAyBE,KAAzB,GAAiC,CAAC,MAAD,CAAjC;AACA,iBAAK+U,2BAAL,GAAmC,IAAI,wEAAJ,EAAnC;AACA,iBAAKA,2BAAL,CAAiChV,IAAjC,GAAwC,MAAxC;AACA,iBAAKgV,2BAAL,CAAiC/U,KAAjC,GAAyC,CAAC,MAAD,CAAzC;AAEA,iBAAK2V,WAAL,GAAoB,gEAApB;AACA,iBAAKC,QAAL,GAAgB,EAAhB;AACA,iBAAKrB,YAAL,CAAkBzK,IAAlB,GAAyB,KAAK6L,WAA9B;AACD;;;iBAED,2BAAe;AACb,iBAAKA,WAAL,GAAmB,KAAKpB,YAAL,CAAkBjjB,GAAlB,EAAnB;AACA,iBAAKqkB,WAAL,CAAiBha,KAAjB,GAAyB,KAAKia,QAA9B;AACA,iBAAKrB,YAAL,CAAkBzK,IAAlB,GAAyB,KAAK6L,WAA9B;AACA,iBAAK9K,gBAAL,GAAwB,KAAK0J,YAAL,CAAkBjjB,GAAlB,EAAxB;AACD;;;iBAED,wBAAY;AACV,iBAAKqkB,WAAL,GAAmB,KAAKpB,YAAL,CAAkBjjB,GAAlB,EAAnB;AACD;;;iBAED,gBAAI;AAAA;;AACF,gBAAMkjB,MAAM,GAAG,KAAKD,YAAL,CAAkBjjB,GAAlB,EAAf;AACA,iBAAKxC,UAAL,CAAgB+mB,SAAhB,CAA0BrB,MAA1B,EAAkCzL,SAAlC,GAA8C/X,IAA9C,CACI,YAAM;AACJ,qBAAI,CAACqZ,YAAL,CAAkB,OAAlB;AACD,aAHL,EAII,UAAC9X,KAAD,EAAW;AACT,qBAAI,CAAC8X,YAAL,CAAkB,2BAAlB;AACD,aANL;AAQD;;;iBAED,sBAAatI,OAAb,EAA8B;AAC5B,iBAAK8H,SAAL,CAAehB,IAAf,CAAoB9G,OAApB,EAA6B,EAA7B,EAAiC;AAACmI,sBAAQ,EAAE;AAAX,aAAjC;AACD;;;;;;;yBApDUwL,sB,EAAsB,8J,EAAA,wI;AAAA,O;;;cAAtBA,sB;AAAsB,4C;AAAA;AAAA;sEAMtB,0E,EAAmB,C;;;;;;;;;;;;;;ACnBhC;;AACI;;AAAG;;AAAqC;;AAC5C;;AACA;;AACI;;AAAW;;AAAS;;AACpB;;AAAgB;AAAA;AAAA,eAAsB,eAAtB,EAAsB;AAAA,qBAAkB,IAAAI,eAAA,EAAlB;AAAmC,aAAzD;;AAAhB;;AACJ;;AACA;;AAAuC;AAAA,qBAAuB,IAAAvL,YAAA,EAAvB;AAAqC,aAArC;;AACnC;;AACI;;AACJ;;AACJ;;AAGA;;AACI;;AAAoD;;AAAK;;AACzD;;AAAgF;AAAA,qBAAS,IAAAC,IAAA,EAAT;AAAe,aAAf;;AAAgD;;AAAM;;AAC1I;;;;AAZoB;;AAAA;;AAIC;;AAAA,yGAA+B,MAA/B,EAA+B,eAA/B;;AAMS;;AAAA;;AACgB;;AAAA,+GAAqC,UAArC,EAAqC,qBAArC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACMgB;;AACI;;AAAuC;AAAA;;AAAA;;AAAA,mBAAS,OAAAuL,aAAA,OAAT;AAA6B,WAA7B;;AAA+B;;AAAM;;AAChF;;;;;;AACA;;AACI;;AAAyD;;AAAI;;AACjE;;;;;;;;AAVZ;;AACI;;AACI;;AACI;;AAA6C;;AAAQ;;AACrD;;AACA;;AAGA;;AAGJ;;AACA;;AACA;;AACI;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAM;;AAC/E;;AACJ;;AACJ;;;;;;;;;;AAb8B;;AAAA;;AACH;;AAAA;;AAGA;;AAAA;;AAIK;;AAAA;;;;UDCvBC,8B;AAMT,gDAAmB3nB,UAAnB,EAAkDE,GAAlD,EAAkFU,OAAlF,EAAsG;AAAA;;AAAnF,eAAAZ,UAAA,GAAAA,UAAA;AAA+B,eAAAE,GAAA,GAAAA,GAAA;AAAgC,eAAAU,OAAA,GAAAA,OAAA;AAFxE,eAAA8mB,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAGT;;;;iBAED,oBAAQ,CAAW;;;iBAEnB,eAAM;AACFrnB,mBAAO,CAACC,GAAR,CAAY,KAAKN,UAAL,CAAgBkd,mBAA5B;AACH;;;iBAED,0BAAiBhY,KAAjB,EAAgC;AAC5B,iBAAKlF,UAAL,CAAgBkd,mBAAhB,CAAoCC,WAApC,CAAgDC,MAAhD,CAAuDlY,KAAvD,EAA8D,CAA9D;AACH;;;;;;;yBAjBQyiB,8B,EAA8B,iI,EAAA,gI,EAAA,mI;AAAA,O;;;cAA9BA,8B;AAA8B,oD;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACd3C;;AACI;;AAkBJ;;;;AAlBgD;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDhD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAEaC,U;AAKT,8BAA+B;AAAA,cAAnBC,KAAmB,uEAAH,CAAG;;AAAA;;AAC3B,eAAKC,SAAL,GAAiB,IAAI,+CAAJ,EAAjB;AACA,eAAKC,YAAL,GAAoB,IAApB;AACA,eAAKC,sBAAL,GAA8B,CAA9B;AAEA,eAAKF,SAAL,CAAeza,MAAf,CAAsBI,GAAtB,CAA0Boa,KAA1B;AACA,eAAKC,SAAL,CAAeza,MAAf,CAAsB3J,MAAtB,CAA6BmkB,KAA7B;AACH;;;;iBAEM,cAAKI,kBAAL,EAAyBzf,KAAzB,EAAgC0f,MAAhC,EAAsC;AACzC;AACA,gBAAI,KAAKH,YAAT,EAAuB;AACnB;AACA,mBAAKA,YAAL,CAAkBtY,QAAlB,CAA2BxC,KAA3B,CAAiCkb,MAAjC,CAAwC,KAAKH,sBAA7C;AACA,mBAAKD,YAAL,CAAkBK,QAAlB,CAA2Bxf,OAA3B,CAAoC,UAACma,MAAD;AAAA,uBAAYA,MAAM,CAACjX,OAAP,GAAiB,KAA7B;AAAA,eAApC;AACA,mBAAKic,YAAL,GAAoBrb,SAApB;AAEH,aARwC,CAUzC;;;AACA,iBAAKob,SAAL,CAAeO,aAAf,CAA6BJ,kBAA7B,EAAiDC,MAAjD,EAXyC,CAYzC;;AACA,gBAAMI,kBAAkB,GAAG,KAAKR,SAAL,CAAeS,gBAAf,CAAgC/f,KAAK,CAAC4f,QAAtC,CAA3B,CAbyC,CAczC;;AACA,gBAAIE,kBAAkB,CAACnS,MAAvB,EAA+B;AAC3B;AACA,mBAAK4R,YAAL,GAAoBO,kBAAkB,CAAC,CAAD,CAAlB,CAAsBvF,MAA1C;AACA,mBAAKgF,YAAL,CAAkBK,QAAlB,CAA2Bxf,OAA3B,CAAoC,UAACma,MAAD;AAAA,uBAAYA,MAAM,CAACjX,OAAP,GAAiB,IAA7B;AAAA,eAApC,EAH2B,CAI3B;AACA;;AACA,mBAAKkc,sBAAL,GAA8B,KAAKD,YAAL,CAAkBtY,QAAlB,CAA2BxC,KAA3B,CAAiCub,MAAjC,EAA9B,CAN2B,CAO3B;AACA;;AACA,mBAAKT,YAAL,CAAkBtY,QAAlB,CAA2BxC,KAA3B,CAAiCkb,MAAjC,CAAwC,QAAxC;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaM,a;AAIT,+BAAmBzoB,UAAnB,EAA2C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAClB;;;;iBAED,oBAAQ;AACN,iBAAKA,UAAL,CAAgBuE,SAAhB;AACD;;;;;;;yBATQkkB,a,EAAa,iI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACT1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,M;AAKT,wBAAYlc,IAAZ,EAA0BjK,KAA1B,EAAyC;AAAA;;AACrC,eAAKyM,KAAL,GAAaxC,IAAb;AACA,eAAKmc,MAAL,GAAcpmB,KAAd;AACH;;;;eAED,eAAQ;AACJ,mBAAO,KAAKyM,KAAZ;AACH;;;eAED,eAAS;AACL,mBAAO,KAAK2Z,MAAZ;AACH;;;;;;;;;;;;;;;;;;;;;ACfL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIY;;AAAuC;;AAAG;;;;;;AAC1C;;AAAuC;;AAAyB;;;;;;;;AAAzB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAK;;;;;;AAC3C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKxC;;AAAsC;;AAAI;;;;;;AAC1C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKxC;;AAAsC;;AAAM;;;;;;AAC5C;;AAAwC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAIxC;;AAAsC;;AAAO;;;;;;;;AAC7C;;AACI;;AAA2C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AAAuD;;AAAO;;AAClE;;AACJ;;;;;;AAGJ;;;;;;AACA;;;;UDvBKC,oB;AAKT,sCAAoBnoB,UAApB,EAAkEG,OAAlE,EAAsF;AAAA;;AAAlE,eAAAH,UAAA,GAAAA,UAAA;AAA8C,eAAAG,OAAA,GAAAA,OAAA;AAHlE,eAAAioB,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,QAA3B,EAAqC,SAArC,CAA7B;AAKC;;;;iBAED,oBAAQ;AACJ,iBAAKC,QAAL;AACH;;;iBAED,oBAAW;AAAA;;AACP,iBAAKroB,UAAL,CAAgBqC,OAAhB,GAA0BH,IAA1B,CAA+B,UAACC,GAAD,EAAwB;AACnD,qBAAI,CAACG,IAAL,GAAYH,GAAG,CAACG,IAAhB;AACH,aAFD;AAGH;;;iBAED,4BAAmBgmB,GAAnB,EAA4B;AAAA;;AACxB1oB,mBAAO,CAACC,GAAR,CAAYyoB,GAAZ;AAEA,gBAAM9O,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,wBAAY,CAACwB,IAAb,GAAoBsN,GAApB,CAJwB,CAKxB;;AACA9O,wBAAY,CAAC+O,YAAb,GAA4B,IAA5B;AACA/O,wBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,wBAAY,CAACE,SAAb,GAAyB,OAAzB;AACAF,wBAAY,CAACI,QAAb,GAAwB,MAAxB;;AAEA,gBAAME,SAAS,GAAG,KAAK3Z,OAAL,CAAa4Z,IAAb,CAAkB,kGAAlB,EAA2CP,YAA3C,EAAyDQ,WAAzD,GAAuEC,SAAvE,GAAmF/X,IAAnF,CAAwF;AAAA,qBAAM,OAAI,CAACmmB,QAAL,EAAN;AAAA,aAAxF,CAAlB;AACH;;;iBAED,yBAAa;AAAA;;AACT,gBAAM7O,YAAY,GAAG,IAAI,wEAAJ,EAArB,CADS,CAET;;AACAA,wBAAY,CAAC+O,YAAb,GAA4B,IAA5B;AACA/O,wBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,wBAAY,CAACE,SAAb,GAAyB,OAAzB;AACAF,wBAAY,CAACI,QAAb,GAAwB,MAAxB;;AACA,gBAAME,SAAS,GAAG,KAAK3Z,OAAL,CAAa4Z,IAAb,CAAkB,iGAAlB,EAA0CP,YAA1C,CAAlB;;AACAM,qBAAS,CAACE,WAAV,GAAwBC,SAAxB,GAAoC/X,IAApC,CAAyC;AAAA,qBAAM,OAAI,CAACmmB,QAAL,EAAN;AAAA,aAAzC;AAEH;;;;;;;yBA3CQF,oB,EAAoB,8J,EAAA,mI;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA,iB;AAAA,e;AAAA,6lB;AAAA;AAAA;ACdjC;;AACI;;AAA0C;AAAA,qBAAS,IAAAK,aAAA,EAAT;AAAwB,aAAxB;;AAA0B;;AAAO;;AAC3E;;AAEI;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AAKJ;;AAEA;;AACA;;AACJ;;AACJ;;;;AArCqB;;AAAA;;AAkCO;;AAAA;;AACa;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAEA;;;UAEaC,e;AAGT,mCAAc;AAAA;;AACV,eAAKC,SAAL,GAAiB,IAAIvnB,GAAJ,EAAjB;AACH;;;;iBAED,eAAMwnB,QAAN,EAAgB;AAAA;;AACZ,gBAAI,CAACA,QAAL,EAAe;AACX,qBAAOA,QAAP;AACH,aAHW,CAKZ;AACA;;;AACA,gBAAInT,KAAK,CAACC,OAAN,CAAckT,QAAd,CAAJ,EAA6B;AACzBA,sBAAQ,CAACxgB,OAAT,CAAiB,UAAAhG,GAAG;AAAA,uBAAI,OAAI,CAACuH,KAAL,CAAWvH,GAAX,CAAJ;AAAA,eAApB;AACA,qBAAOwmB,QAAP;AACH;;AAED,gBAAIA,QAAQ,CAAC1b,OAAT,IAAoB0b,QAAQ,YAAY,8CAA5C,EAA4D;AACxD,mBAAKD,SAAL,CAAejf,GAAf,CAAmBkf,QAAnB;AACH;;AACD,gBAAIA,QAAQ,YAAY,0CAAxB,EAAoC;AAChC,mBAAKjf,KAAL,CAAWif,QAAQ,CAAC7Z,QAApB;AACA,mBAAKpF,KAAL,CAAWif,QAAQ,CAAC3Z,QAApB;AACA,mBAAKtF,KAAL,CAAWif,QAAQ,CAAChB,QAApB;AACH,aAJD,MAIO,IAAIgB,QAAQ,YAAY,8CAAxB,EAAwC;AAC3C;AACA,iDAAoBC,MAAM,CAACC,MAAP,CAAcF,QAAd,CAApB,sCAA6C;AAAxC,oBAAM7mB,KAAK,sBAAX;;AACD,oBAAIA,KAAK,YAAY,6CAArB,EAAoC;AAChC,uBAAK4H,KAAL,CAAW5H,KAAX;AACH;AACJ;AACJ;;AACD,mBAAO6mB,QAAP;AACH;;;iBAED,iBAAQA,QAAR,EAAkB;AACd,iBAAKD,SAAL,WAAsBC,QAAtB;AACH;;;iBAED,mBAAU;AAAA,yDACiB,KAAKD,SADtB;AAAA;;AAAA;AACN,wEAAuC;AAAA,oBAA5BC,QAA4B;;AACnC,oBAAIA,QAAQ,YAAY,8CAAxB,EAAwC;AACpC,sBAAIA,QAAQ,CAACG,MAAb,EAAqB;AACjBH,4BAAQ,CAACG,MAAT,CAAgBC,MAAhB,CAAuBJ,QAAvB;AACH;AACJ;;AACD,oBAAIA,QAAQ,CAAC1b,OAAb,EAAsB;AAClB0b,0BAAQ,CAAC1b,OAAT;AACH;AACJ;AAVK;AAAA;AAAA;AAAA;AAAA;;AAWN,iBAAKyb,SAAL,CAAehR,KAAf;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UClDQsR,wB;AAEX,4CAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPrC;;AAAG;;AAAuB;;;;;;;;;;;;;;;;;;;;ACE1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGY;;AAAsC;;AAAG;;;;;;AACzC;;AAAuC;;AAAgC;;;;;;;;AAAhC;;AAAA;;;;;;AAKvC;;AAAsC;;AAAK;;;;;;AAC3C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKxC;;AAAsC;;AAAI;;;;;;AAC1C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAIxC;;AAAsC;;AAAM;;;;;;AAExC;;AAA6E;;AAAS;;;;;;AACtF;;AAA+E;;AAAW;;;;;;AAF9F;;AACI;;AACA;;AACJ;;;;;;AAFe;;AAAA;;AACA;;AAAA;;;;;;AAKf;;AAAsC;;AAAO;;;;;;;;AAC7C;;AACI;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AAAuD;;AAAO;;AAClE;;AACJ;;;;;;AAGJ;;;;;;AACA;;;;UD1BKC,4B;AAMT,8CAAoBC,WAApB,EAAmE/oB,OAAnE,EAAuF;AAAA;;AAAnE,eAAA+oB,WAAA,GAAAA,WAAA;AAA+C,eAAA/oB,OAAA,GAAAA,OAAA,CAAoB,CALvF;;AACA,eAAAioB,gBAAA,GAA6B,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,QAA1B,EAAoC,SAApC,CAA7B;AAMC;;;;iBAED,oBAAQ;AACJ,iBAAKe,UAAL;AACH;;;iBAED,mCAA0Bpd,IAA1B,EAAsC;AAAA;;AAClC,gBAAMyN,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,wBAAY,CAACwB,IAAb,GAAoBjP,IAApB,CAFkC,CAGlC;;AACAyN,wBAAY,CAAC+O,YAAb,GAA4B,IAA5B;AACA/O,wBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,wBAAY,CAACE,SAAb,GAAyB,OAAzB;AACAF,wBAAY,CAACI,QAAb,GAAwB,MAAxB;;AAEA,gBAAME,SAAS,GAAG,KAAK3Z,OAAL,CAAa4Z,IAAb,CAAkB,uHAAlB,EAAkDP,YAAlD,CAAlB;;AACAM,qBAAS,CAACE,WAAV,GAAwBC,SAAxB,GAAoC/X,IAApC,CAAyC;AAAA,qBAAM,OAAI,CAACinB,UAAL,EAAN;AAAA,aAAzC;AACH;;;iBAED,gCAAoB;AAAA;;AAChB,gBAAM3P,YAAY,GAAG,IAAI,wEAAJ,EAArB,CADgB,CAEhB;;AACAA,wBAAY,CAAC+O,YAAb,GAA4B,IAA5B;AACA/O,wBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,wBAAY,CAACE,SAAb,GAAyB,OAAzB;AACAF,wBAAY,CAACI,QAAb,GAAwB,MAAxB;;AACA,gBAAME,SAAS,GAAG,KAAK3Z,OAAL,CAAa4Z,IAAb,CAAkB,sHAAlB,EAAiDP,YAAjD,CAAlB;;AACAM,qBAAS,CAACE,WAAV,GAAwBC,SAAxB,GAAoC/X,IAApC,CAAyC;AAAA,qBAAM,OAAI,CAACinB,UAAL,EAAN;AAAA,aAAzC;AAEH;;;iBAED,sBAAU;AAAA;;AACN,iBAAKD,WAAL,CAAiBE,cAAjB,GAAkC9lB,SAAlC,CAA4C,UAACnB,GAAD,EAA+B;AACvE,qBAAI,CAACknB,WAAL,GAAmBlnB,GAAG,CAACknB,WAAvB;AACH,aAFD;AAGH;;;;;;;yBA3CQJ,4B,EAA4B,8J,EAAA,mI;AAAA,O;;;cAA5BA,4B;AAA4B,iD;AAAA,iB;AAAA,e;AAAA,4xB;AAAA;AAAA;ACbzC;;AACI;;AAA0C;AAAA,qBAAS,IAAAK,oBAAA,EAAT;AAA+B,aAA/B;;AAAiC;;AAAc;;AACzF;;AAEI;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AAIJ;;AAEA;;AACI;;AACA;;AAKJ;;AAEA;;AACA;;AACJ;;AACJ;;;;AAvCqB;;AAAA;;AAoCO;;AAAA;;AACa;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UClC5BC,a;;;;;;;iBAET,mBAAUC,SAAV,EAA6BC,WAA7B,EAAgD;AAC5C,gBAAI,CAACA,WAAL,EAAkB;AACd,qBAAOD,SAAP;AACH;;AACD,gBAAME,EAAE,GAAG,IAAIC,MAAJ,CAAWF,WAAX,EAAwB,IAAxB,CAAX;AACA,mBAAOD,SAAS,CAAClf,OAAV,CAAkBof,EAAlB,EAAsB,iBAAtB,CAAP;AACH;;;;;;;yBARQH,a;AAAa,O;;;;cAAbA,a;AAAa;;;;;;;;;;;;;;;;;ACL1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACqDoB;;AACoC;;AACpC;;;;;;AADY;;AAAwB;;AAAA;;;;UDzC3CK,6B;AAmBT,+CAAoB5pB,UAApB,EAAkE+a,SAAlE,EAA0F;AAAA;;AAAA;;AAAtE,eAAA/a,UAAA,GAAAA,UAAA;AAA8C,eAAA+a,SAAA,GAAAA,SAAA;AAN3D,eAAAwL,cAAA,GAAiB,EAAjB;AAEP,eAAAR,YAAA,GAAe,KAAf;AAKI,eAAK/lB,UAAL,CAAgBiC,YAAhB,GAA+BC,IAA/B,CAAoC,UAACC,GAAD,EAAkC;AAClE,mBAAI,CAACC,SAAL,GAAiBD,GAAG,CAACC,SAArB;AACH,WAFD;AAGH;;;;iBAED,oBAAQ;AACJ;AACA,iBAAK4O,mBAAL,GAA2B,IAAI,wEAAJ,EAA3B;AACA,iBAAKA,mBAAL,CAAyBC,IAAzB,GAAgC,MAAhC;AACA,iBAAKD,mBAAL,CAAyBE,KAAzB,GAAiC,CAAC,MAAD,CAAjC;AAEA,iBAAK+U,2BAAL,GAAmC,IAAI,wEAAJ,EAAnC;AACA,iBAAKA,2BAAL,CAAiChV,IAAjC,GAAwC,MAAxC;AAEA,iBAAKgV,2BAAL,CAAiC/U,KAAjC,GAAyC,CAAC,MAAD,CAAzC;AACA,iBAAK2Y,kBAAL,GAA2B,uEAA3B;AACA,iBAAK7D,eAAL,GAAuB,EAAvB;AACH;;;iBAED,2BAAe;AAAA;;AACX;AACA,8DAAWhZ,GAAX,CAAe,UAAf,EAA2B,MAA3B;AACA,8DAAWA,GAAX,CAAe,UAAf,EAA2B,oDAA3B;AAEA,iBAAKoZ,SAAL,GAAiB,gDAAS,KAAKjL,MAAL,CAAYlJ,aAArB,CAAjB,CALW,CAMX;;AACA,iBAAKmU,SAAL,CAAeC,OAAf,CAAuBC,OAAvB,CAA+B,cAA/B;AACA,iBAAKF,SAAL,CAAeC,OAAf,CAAuB5jB,QAAvB,CAAgC,IAAhC;AACA,iBAAK2jB,SAAL,CAAe0D,EAAf,CAAkB,QAAlB,EAA4B,YAAM;AAC9B,qBAAI,CAACC,sBAAL;AACH,aAFD;AAGH;;;iBAED,kCAAsB;AAClB,iBAAKxD,cAAL,GAAsB,KAAKH,SAAL,CAAeC,OAAf,CAAuBI,QAAvB,EAAtB;AACH;;;iBAED,kCAAsB;AAClB,iBAAKoD,kBAAL,GAA0B,KAAKpE,YAAL,CAAkBjjB,GAAlB,EAA1B;AACA,iBAAKqnB,kBAAL,CAAwBG,UAAxB,GAAqC,MAAM,KAAKhE,eAAX,GAA6B,aAAlE;AACA,iBAAK6D,kBAAL,CAAwBtD,cAAxB,GAAyC,MAAM,KAAKP,eAAX,GAA6B,GAA7B,GAAmC,KAAKA,eAAxC,GAA0D,WAAnG;AACA,iBAAKP,YAAL,CAAkBzK,IAAlB,GAAyB,KAAK6O,kBAA9B;AACA,iBAAK1D,uBAAL,GAA+B,KAAKV,YAAL,CAAkBjjB,GAAlB,EAA/B;AACH;;;iBAED,wBAAY;AACR,iBAAKqnB,kBAAL,GAA0B,KAAKpE,YAAL,CAAkBjjB,GAAlB,EAA1B;AACH;;;iBAED,yBAAa;AACT,iBAAKijB,YAAL,CAAkBzK,IAAlB,GAAyB,KAAK6O,kBAA9B;AACA,iBAAK1D,uBAAL,GAA+B,KAAKV,YAAL,CAAkBjjB,GAAlB,EAA/B;AACH;;;iBAED,gBAAI;AAAA;;AACA,gBAAMkjB,MAAM,GAAG,KAAKD,YAAL,CAAkBjjB,GAAlB,EAAf;AACA,gBAAM+jB,cAAc,GAAG,KAAKH,SAAL,CAAeC,OAAf,CAAuBI,QAAvB,EAAvB;AACA,iBAAKzmB,UAAL,CAAgBiqB,gBAAhB,CAAiC,KAAKjE,eAAtC,EAAuDN,MAAvD,EAA+Da,cAA/D,EAA+EtM,SAA/E,GAA2F/X,IAA3F,CACI,YAAM;AACF,qBAAI,CAACqZ,YAAL,CAAkB,OAAlB;AACH,aAHL,EAII,UAAC9X,KAAD,EAAW;AACP,qBAAI,CAAC8X,YAAL,CAAkB,2BAAlB;AACH,aANL;AAQH;;;iBAED,sBAAatI,OAAb,EAA8B;AAC1B,iBAAK8H,SAAL,CAAehB,IAAf,CAAoB9G,OAApB,EAA6B,EAA7B,EAAiC;AAACmI,sBAAQ,EAAE;AAAX,aAAjC;AACH;;;;;;;yBAzFQwO,6B,EAA6B,8J,EAAA,wI;AAAA,O;;;cAA7BA,6B;AAA6B,mD;AAAA;AAAA;;;sEAS3B,0E,EAAmB,C;;;;;;;;;;;;;;;ACtBgD;;AAC9E;;AAAG;;AAA8B;;AACrC;;AACA;;AAAuC;AAAA,qBAAuB,IAAAnO,YAAA,EAAvB;AAAqC,aAArC;;AACnC;;AACI;;AACI;;AACI;;AAAW;;AAAgB;;AAE3B;;AAAgB;AAAA;AAAA,eAA6B,eAA7B,EAA6B;AAAA,qBAAkB,IAAAyO,sBAAA,EAAlB;AAA0C,aAAvE;;AAAhB;;AACJ;;AACA;;AACI;;AAAW;;AAAe;;AAC1B;;AAAgB;AAAA;AAAA,eAA2C,eAA3C,EAA2C;AAAA,qBAAkB,IAAAC,aAAA,EAAlB;AAAiC,aAA5E;;AAAhB;;AACJ;;AACA;;AACI;;AAAW;;AAAS;;AAEpB;;AAAY;AAAA;AAAA,eAA0C,eAA1C,EAA0C;AAAA,qBAAkB,IAAAA,aAAA,EAAlB;AAAiC,aAA3E;;AACR;;AAAmC;;AAAc;;AACrD;;AACJ;;AACA;;AACI;;AAAW;;AAAI;;AACf;;AAAY;AAAA;AAAA,eAAqC,eAArC,EAAqC;AAAA,qBAAkB,IAAAA,aAAA,EAAlB;AAAiC,aAAtE;;AACR;;AAA4B;;AAAO;;AACnC;;AAA0B;;AAAK;;AACnC;;AACJ;;AACA;;AACI;;AAAW;;AAAO;;AAElB;;AAAiB;AAAA;AAAA,eAAwC,eAAxC,EAAwC;AAAA,qBACjC,IAAAA,aAAA,EADiC;AAClB,aADtB;;AAAjB;;AAEJ;;AACA;;AACI;;AAAW;;AAAoB;;AAC/B;;AAAiB;AAAA;AAAA,eAAqD,eAArD,EAAqD;AAAA,qBAC9C,IAAAA,aAAA,EAD8C;AAC/B,aADtB;;AAAjB;;AAEJ;;AACA;;AACI;;AAAW;;AAAW;;AACtB;;AAAiB;AAAA;AAAA,eAA4C,eAA5C,EAA4C;AAAA,qBACrC,IAAAA,aAAA,EADqC;AACtB,aADtB;;AAAjB;;AAEJ;;AACA;;AACI;;AAAW;;AAAc;;AACzB;;AAAgB;AAAA;AAAA,eAA+C,eAA/C,EAA+C;AAAA,qBAAkB,IAAAA,aAAA,EAAlB;AAAiC,aAAhF;;AAAhB;;AACJ;;AACA;;AACI;;AAAW;;AAAQ;;AACnB;;AAAY;AAAA;AAAA,eAAmC,eAAnC,EAAmC;AAAA,qBAAkB,IAAAA,aAAA,EAAlB;AAAiC,aAApE;;AACR;;AAAyB;;AAAI;;AAC7B;;AAGJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AAGA;;AACI;;AAAoD;;AAAK;;AACzD;;AAAgE;AAAA,qBAAS,IAAAzO,IAAA,EAAT;AAAe,aAAf;;AAClB;;AAC9C;;AACJ;;;;AAjEgC;;AAAA;;AAIA;;AAAA;;AAKJ;;AAAA;;AAMA;;AAAA;;AAQK;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKD;;AAAA;;AAIJ;;AAAA;;AAEsB;;AAAA;;AAQ7B;;AAAA,yGAA+B,MAA/B,EAA+B,sBAA/B;;AASS;;AAAA;;AAElB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UChEC0O,iB;AAOT,mCAAmBlT,IAAnB,EAEwF;AAAA,cADrEmT,UACqE,uEAD9B,IAAIvW,GAAJ,EAC8B;AAAA,cAArEwW,QAAqE,uEAAhC,IAAIxW,GAAJ,EAAgC;;AAAA;;AACpF,eAAKyW,WAAL,GAAmBF,UAAnB;AACA,eAAKG,SAAL,GAAiBF,QAAjB;AACA,eAAKG,MAAL,GAAc,IAAItpB,GAAJ,EAAd;AACA,eAAKupB,KAAL,GAAaxT,IAAb;AACH;;;;;AAsBD;;;;AAIA,+BAAYjB,QAAZ,EAA+B;AAC3B,iBAAKA,QAAL,GAAgBA,QAAhB;AACH;;;iBAEM,sBAAa0U,EAAb,EAAyBvV,IAAzB,EAA4C;AAC/C,iBAAKmV,WAAL,CAAiBvd,GAAjB,CAAqB2d,EAArB,EAAyBvV,IAAzB;AACH;;;iBAEM,oBAAWuV,EAAX,EAAuBvV,IAAvB,EAA0C;AAC7C,iBAAKoV,SAAL,CAAexd,GAAf,CAAmB2d,EAAnB,EAAuBvV,IAAvB;AACH;;;iBAEM,qBAAY;AACf,iBAAK8E,WAAL;;AADe,yDAES,KAAKqQ,WAAL,CAAiB1B,MAAjB,EAFT;AAAA;;AAAA;AAEf,wEAAmD;AAAA,oBAAxC1R,SAAwC;;AAAA,6DACzB,KAAKqT,SAAL,CAAe3B,MAAf,EADyB;AAAA;;AAAA;AAC/C,4EAA+C;AAAA,wBAApCzR,OAAoC;AAC3C,wBAAM9H,IAAI,GAAG,IAAIsb,UAAJ,CACTzT,SADS,EAETC,OAFS,CAAb;AAIA9H,wBAAI,CAACub,UAAL,CAAgB;AACZC,iCAAW,EAAE,OADD;AACUC,+BAAS,EAAE,MADrB;AAC6Bve,2BAAK,EAAE;AADpC,qBAAhB;;AAIA,4BAAQ,KAAKke,KAAb;AACI,2BAAK,oDAAYM,UAAjB;AACI1b,4BAAI,CAACub,UAAL,CAAgB;AACZI,mCAAS,EAAE,QADC;AACSC,iCAAO,EAAE;AADlB,yBAAhB;AAGA;;AACJ,2BAAK,oDAAYC,UAAjB;AACI7b,4BAAI,CAACub,UAAL,CAAgB;AACZI,mCAAS,EAAE,QADC;AACSC,iCAAO,EAAE;AADlB,yBAAhB;AAGA;;AACJ,2BAAK,oDAAYE,aAAjB;AACI9b,4BAAI,CAACub,UAAL,CAAgB;AACZI,mCAAS,EAAE,QADC;AACSC,iCAAO,EAAE;AADlB,yBAAhB;AAGA;AAfR;;AAkBA,yBAAKT,MAAL,CAAYhhB,GAAZ,CAAgB6F,IAAhB;;AACA6H,6BAAS,CAACkU,SAAV,CAAoB5hB,GAApB,CAAwB,MAAxB;AACA2N,2BAAO,CAACiU,SAAR,CAAkB5hB,GAAlB,CAAsB,MAAtB;AACA6F,wBAAI,CAACvC,QAAL;AACH;AAhC8C;AAAA;AAAA;AAAA;AAAA;AAiClD;AAnCc;AAAA;AAAA;AAAA;AAAA;AAoClB;;;iBAEM,uBAAW;AAAA,yDACK,KAAK0d,MADV;AAAA;;AAAA;AACd,wEAAgC;AAAA,oBAArBnb,IAAqB;AAC5BA,oBAAI,CAACyZ,MAAL;AACH;AAHa;AAAA;AAAA;AAAA;AAAA;;AAId,iBAAK0B,MAAL,CAAY/S,KAAZ;AACH;;;iBAEY,uBAAW;;;;;;;;;AACpB,6BAAM,6CAAM/S,KAAN,CAAY,EAAZ,CAAN;;;+DACmB,KAAK8lB,M;;;AAAxB,kFAAgC;AAArBnb,8BAAqB;;AAC5B,8BAAIA,IAAI,CAACgc,KAAL,CAAWD,SAAX,CAAqBjmB,QAArB,CAA8B,MAA9B,KAAyCkK,IAAI,CAACic,GAAL,CAASF,SAAT,CAAmBjmB,QAAnB,CAA4B,MAA5B,CAA7C,EAAkF;AAC9EkK,gCAAI,CAACkc,IAAL,CAAU,MAAV;AACH,2BAFD,MAEO;AACHlc,gCAAI,CAACmc,IAAL;AACH;;AACDnc,8BAAI,CAACvC,QAAL;AACH;;;;;;;;;;;;;;AACJ;AAED;;;;;;;;iBAKQ,sBAAaP,KAAb,EAA4B;AAAA,yDACb,KAAKie,MADQ;AAAA;;AAAA;AAChC,wEAAgC;AAAA,oBAArBnb,IAAqB;AAC5BA,oBAAI,CAACub,UAAL,CAAgB;AACZre,uBAAK,EAALA;AADY,iBAAhB;AAGH;AAL+B;AAAA;AAAA;AAAA;AAAA;AAMnC;AAED;;;;;;;;iBAKQ,wBAAe0K,IAAf,EAAkC;AACtC,iBAAKwT,KAAL,GAAaxT,IAAb;AACA,iBAAKmD,SAAL;AACH;;;eAED,eAAc;AACV,mBAAO,KAAKkQ,WAAZ;AACH;;;eAED,eAAY;AACR,mBAAO,KAAKC,SAAZ;AACH;;;eAED,eAAQ;AACJ,mBAAO,KAAKE,KAAZ;AACH;;;eAED,eAAS;AACL,mBAAO,KAAKD,MAAZ;AACH;;;iBAlIM,eAAajiB,OAAb,EAAgC;AACnC,gBAAM6hB,UAAU,GAA6B,IAAIvW,GAAJ,EAA7C;AACA,gBAAMwW,QAAQ,GAA6B,IAAIxW,GAAJ,EAA3C;;AAFmC,yDAIVtL,OAAO,CAAC8O,YAJE;AAAA;;AAAA;AAInC,wEAA+C;AAAA,oBAApCb,UAAoC;AAC3C,oBAAMU,SAAS,GAAgBpN,QAAQ,CAAC8M,cAAT,CAAwBJ,UAAU,CAACE,IAAnC,CAA/B;AACA0T,0BAAU,CAACrd,GAAX,CAAeyJ,UAAU,CAACE,IAA1B,EAAgCQ,SAAhC;AACH;AAPkC;AAAA;AAAA;AAAA;AAAA;;AAAA,yDASZ3O,OAAO,CAACgP,UATI;AAAA;;AAAA;AASnC,wEAA2C;AAAA,oBAAhCP,QAAgC;AACvC,oBAAMG,OAAO,GAAgBrN,QAAQ,CAAC8M,cAAT,CAAwBI,QAAQ,CAACN,IAAjC,CAA7B;AACA2T,wBAAQ,CAACtd,GAAT,CAAaiK,QAAQ,CAACN,IAAtB,EAA4BS,OAA5B;AACH;AAZkC;AAAA;AAAA;AAAA;AAAA;;AAcnC,gBAAMjJ,UAAU,GAAsB,IAAIic,iBAAJ,CAAsB5hB,OAAO,CAAC0O,IAA9B,EAAoCmT,UAApC,EAAgDC,QAAhD,CAAtC;AAEA,mBAAOnc,UAAP;AACH;;;;;;UAoHQud,mB;AAKT,qCAAYC,MAAZ,EAA+B;AAAA;;AAC3B,eAAK9d,SAAL,GAAiB,IAAI1M,GAAJ,EAAjB;AACA,eAAK8U,QAAL,GAAgB0V,MAAhB;AACH;;;;eAED,eAAY;AACR,mBAAO,KAAK9d,SAAZ;AACH;;;iBA2BD,oBAAWrF,OAAX,EAA4D;AAAA,gBAArBojB,IAAqB,uEAAL,KAAK;;AACxD,iBAAK/d,SAAL,CAAepE,GAAf,CAAmBjB,OAAnB;;AACAA,mBAAO,CAACqjB,WAAR,CAAoB,KAAK5V,QAAzB;;AACA,gBAAI2V,IAAJ,EAAU;AACNpjB,qBAAO,CAAC6R,SAAR;AACH;AACJ;;;iBAED,uBAAc7R,OAAd,EAAiC;AAC7B,gBAAM2F,UAAU,GAAsBic,iBAAiB,CAAC7T,KAAlB,CAAwB/N,OAAxB,CAAtC;AACA,iBAAKiP,UAAL,CAAgBtJ,UAAhB;AACH;;;iBAED,yBAAa,CAEZ;;;iBAED,qBAAS;AAAA,yDACiB,KAAKN,SADtB;AAAA;;AAAA;AACL,wEAAsC;AAAA,oBAA3BrF,OAA2B;AAClCA,uBAAO,CAAC6R,SAAR;AACH;AAHI;AAAA;AAAA;AAAA;AAAA;AAIR;;;iBAED,uBAAW;AAAA,yDACe,KAAKxM,SADpB;AAAA;;AAAA;AACP,wEAAsC;AAAA,oBAA3BrF,OAA2B;AAClCA,uBAAO,CAACmP,WAAR;AACH;AAHM;AAAA;AAAA;AAAA;AAAA;AAIV;;;iBAED,qBAAS;AAAA,yDACiB,KAAK9J,SADtB;AAAA;;AAAA;AACL,wEAAsC;AAAA,oBAA3BrF,OAA2B;;AAAA,6DACfA,OAAO,CAACsjB,KADO;AAAA;;AAAA;AAClC,4EAAkC;AAAA,wBAAvBxc,IAAuB;AAC9BA,wBAAI,CAACkc,IAAL,CAAU,MAAV;AACAlc,wBAAI,CAACvC,QAAL;AACH;AAJiC;AAAA;AAAA;AAAA;AAAA;AAKrC;AANI;AAAA;AAAA;AAAA;AAAA;AAOR;;;iBAED,qBAAS;AACL,iBAAK4K,WAAL;AACH;;;iBAED,uBAAW;AAAA,yDACe,KAAK9J,SADpB;AAAA;;AAAA;AACP,wEAAsC;AAAA,oBAA3BrF,OAA2B;AAClCA,uBAAO,CAAC0R,WAAR;AACH;AAHM;AAAA;AAAA;AAAA;AAAA;AAIV;;;iBAED,uBAAc1R,OAAd,EAAwC;AACpC,iBAAKD,QAAL,WAAqBC,OAArB;AACA,iBAAK0R,WAAL;AACA,iBAAKG,SAAL;;AACA,yDAAM1V,KAAN,CAAY,EAAZ;;AACA,iBAAKgT,WAAL;AACH;;;iBA/EM,eAAavP,SAAb,EAAsCujB,MAAtC,EAAuD;AAC1D,gBAAMI,UAAU,GAAG,IAAIL,mBAAJ,CAAwBC,MAAxB,CAAnB;;AAD0D,yDAEpCvjB,SAAS,CAACG,QAF0B;AAAA;;AAAA;AAE1D,wEAA0C;AAAA,oBAA/BC,OAA+B;AACtC,oBAAM6hB,UAAU,GAA6B,IAAIvW,GAAJ,EAA7C;AACA,oBAAMwW,QAAQ,GAA6B,IAAIxW,GAAJ,EAA3C;;AAFsC,6DAIbtL,OAAO,CAAC8O,YAJK;AAAA;;AAAA;AAItC,4EAA+C;AAAA,wBAApCb,UAAoC;AAC3C,wBAAMU,SAAS,GAAgBpN,QAAQ,CAAC8M,cAAT,CAAwBJ,UAAU,CAACE,IAAnC,CAA/B;AAEA0T,8BAAU,CAACrd,GAAX,CAAeyJ,UAAU,CAACE,IAA1B,EAAgCQ,SAAhC;AACH;AARqC;AAAA;AAAA;AAAA;AAAA;;AAAA,6DAUf3O,OAAO,CAACgP,UAVO;AAAA;;AAAA;AAUtC,4EAA2C;AAAA,wBAAhCP,QAAgC;AACvC,wBAAMG,OAAO,GAAgBrN,QAAQ,CAAC8M,cAAT,CAAwBI,QAAQ,CAACN,IAAjC,CAA7B;AACA2T,4BAAQ,CAACtd,GAAT,CAAaiK,QAAQ,CAACN,IAAtB,EAA4BS,OAA5B;AACH;AAbqC;AAAA;AAAA;AAAA;AAAA;;AAetC,oBAAMjJ,UAAU,GAAsB,IAAIic,iBAAJ,CAAsB5hB,OAAO,CAAC0O,IAA9B,EAAoCmT,UAApC,EAAgDC,QAAhD,CAAtC;AAEAyB,0BAAU,CAACtU,UAAX,CAAsBtJ,UAAtB,EAAkC,KAAlC;AACH;AApByD;AAAA;AAAA;AAAA;AAAA;;AAsB1D,mBAAO4d,UAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClML;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaC,wB;AAET,0CAA0B9e,aAA1B,EAA+D;AAAA;;AAArC,eAAAA,aAAA,GAAAA,aAAA;AACzB;;;;iBAEM,oBAAQ,CACd;;;;;;;yBANQ8e,wB,EAAwB,oJ;AAAA,O;;;cAAxBA,wB;AAAwB,8C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPrC;;AACE;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBaC,wB;AAET,0CAAoBC,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AACnB;;;;iBAEK,mBAAU;;;;;;;AACL,6BAAM,KAAKA,UAAL,CAAgB1pB,GAAhB,CAAoB,sEAAYsE,OAAZ,GAAsB,sEAAYE,kBAAtD,EAA0EiT,SAA1E,EAAN;;;;;;;;;;;;AACV;;;iBAEK,oCAA2BlO,IAA3B,EAAyC;;;;;;;AACrCogB,0B,GAAO;AACTlb,4BAAI,EAAE,uBADG;AAETlF,4BAAI,EAAJA;AAFS,uB;wDAIN,KAAKmgB,UAAL,CAAgBE,IAAhB,CAAyC,sEAAYtlB,OAAZ,GAAsB,sEAAYC,yBAA3E,EAAsGolB,IAAtG,EAA4GlS,SAA5G,E;;;;;;;;;AACV;;;iBAEK,8BAAqB1X,MAArB,EAAqC;;;;;;;AACnC8pB,iC,GAAc,IAAI,+DAAJ,E;AAClBA,iCAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmB,OAAnB,EAA4B/pB,MAA5B,CAAd;;AACO,6BAAM,KAAK2pB,UAAL,CAAgB1pB,GAAhB,CACT,sEAAYsE,OAAZ,GAAsB,sEAAYM,iBADzB,EAET;AAACmlB,8BAAM,EAAEF;AAAT,uBAFS,EAGXpS,SAHW,EAAN;;;;;;;;;;;;AAIV;;;iBAEK,4BAAmBuS,OAAnB,EAAkC;;;;;;;AAChCH,iC,GAAc,IAAI,+DAAJ,E;AAClBA,iCAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmB,OAAnB,EAA4BE,OAA5B,CAAd;;AACO,6BAAM,KAAKN,UAAL,CAAgB1pB,GAAhB,CACT,sEAAYsE,OAAZ,GAAsB,sEAAYE,kBADzB,EAET;AAACulB,8BAAM,EAAEF;AAAT,uBAFS,EAGXpS,SAHW,EAAN;;;;;;;;;;;;AAIV;;;iBAED,sBAAauS,OAAb,EAA8B1qB,KAA9B,EAA6C6d,KAA7C,EAA2D;AAEvD,gBAAMwM,IAAI,GAAG;AACTtf,mBAAK,EAAE2f,OADE;AAET1qB,mBAAK,EAALA,KAFS;AAGT6d,mBAAK,EAALA;AAHS,aAAb;AAMA,mBAAO,KAAKuM,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYG,eAD/B,EAEHklB,IAFG,CAAP;AAIH,W,CAED;;;;iBACM,wBAAe;;;;;;;AACV,6BAAM,KAAKD,UAAL,CAAgB1pB,GAAhB,CAAoB,sEAAYsE,OAAZ,GAAsB,sEAAYM,iBAAtD,EAAyE6S,SAAzE,EAAN;;;;;;;;;;;;AACV;;;iBAED,gCAAuB1X,MAAvB,EAAqC;AACjC,gBAAI8pB,WAAW,GAAG,IAAI,+DAAJ,EAAlB;AACAA,uBAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmB,OAAnB,EAA4B/pB,MAA5B,CAAd;AACA,mBAAO,KAAK2pB,UAAL,CAAgB1pB,GAAhB,CACH,sEAAYsE,OAAZ,GAAsB,sEAAYO,gBAD/B,EAEH;AAACklB,oBAAM,EAAEF;AAAT,aAFG,CAAP;AAIH;;;iBAED,wBAAe9pB,MAAf,EAA+B4C,SAA/B,EAAkDnD,SAAlD,EAAqEyqB,KAArE,EAAoF;AAChF,gBAAMN,IAAI,GAAG;AACTtf,mBAAK,EAAEtK,MADE;AAET4C,uBAAS,EAATA,SAFS;AAGTnD,uBAAS,EAATA,SAHS;AAIT;AACA;AACAyqB,mBAAK,EAALA;AANS,aAAb;AASA,mBAAO,KAAKP,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYQ,uBAD/B,EAEH6kB,IAFG,CAAP;AAIH;;;iBAED,wBAAeO,KAAf,EAAsBC,KAAtB,EAA6B;AACzB,gBAAMR,IAAI,GAAG;AACTlb,kBAAI,EAAE,QADG;AAET2b,gBAAE,EAAEF,KAFK;AAGTC,mBAAK,EAALA;AAHS,aAAb;AAKA,mBAAO,KAAKT,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYM,iBAD/B,EAEH+kB,IAFG,CAAP;AAIH;;;iBAED,wBAAetf,KAAf,EAA8B;AAC1B,gBAAMsf,IAAI,GAAG;AACTlb,kBAAI,EAAE,QADG;AAETpE,mBAAK,EAALA;AAFS,aAAb;AAIA,mBAAO,KAAKqf,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYM,iBAD/B,EAEH+kB,IAFG,CAAP;AAIH;;;iBAED,wBAAezG,MAAf,EAAqB;AACjB,gBAAMyG,IAAI,GAAG;AACTlb,kBAAI,EAAE,KADG;AAET2b,gBAAE,EAAElH;AAFK,aAAb;AAIA,mBAAO,KAAKwG,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYM,iBAD/B,EAEH+kB,IAFG,CAAP;AAIH,W,CAED;;;;iBACA,0BAAiB;AACb,mBAAO,KAAKD,UAAL,CAAgB1pB,GAAhB,CAAoB,sEAAYsE,OAAZ,GAAsB,sEAAYC,yBAAtD,CAAP;AACH;;;iBAED,0BAAiB8F,KAAjB,EAAgC2Z,aAAhC,EAA+CD,cAA/C,EAAuE;AACnE,gBAAM4F,IAAI,GAAG;AACTpgB,kBAAI,EAAEc,KADG;AAEToE,kBAAI,EAAE,KAFG;AAGTuV,2BAAa,EAAbA,aAHS;AAITD,4BAAc,EAAdA;AAJS,aAAb;AAMA,mBAAO,KAAK2F,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYC,yBAD/B,EAEHolB,IAFG,CAAP;AAIH;;;iBAED,0BAAiBtf,KAAjB,EAAgC2Z,aAAhC,EAA+CD,cAA/C,EAAuE;AACnE,gBAAMsG,SAAS,GAAGrG,aAAa,CAACD,cAAd,CAA6BuG,WAA7B,CAAyC,IAAzC,CAAlB;AACA,gBAAMC,kBAAkB,GAAGvG,aAAa,CAACD,cAAd,CAA6ByG,SAA7B,CAAuCH,SAAS,GAAG,CAAnD,CAA3B;AAEA,gBAAMV,IAAI,GAAG;AACTpgB,kBAAI,EAAEc,KADG;AAEToE,kBAAI,EAAE,QAFG;AAGTuV,2BAAa,EAAbA,aAHS;AAITD,4BAAc,EAAdA,cAJS;AAKTwG,gCAAkB,EAAlBA;AALS,aAAb;AAOA,mBAAO,KAAKb,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYC,yBAD/B,EAEHolB,IAFG,CAAP;AAIH;;;iBAED,0BAAiBc,cAAjB,EAAiC;AAC7B,gBAAMd,IAAI,GAAG;AACTlb,kBAAI,EAAE,QADG;AAETlF,kBAAI,EAAEkhB;AAFG,aAAb;AAIA,mBAAO,KAAKf,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYC,yBAD/B,EAEHolB,IAFG,CAAP;AAIH,W,CAED;;;;iBACA,mBAAUe,MAAV,EAAkBjZ,MAAlB,EAA0B;AACtB,gBAAMkY,IAAI,GAAG;AACTlb,kBAAI,EAAE,QADG;AAETqX,iBAAG,EAAE4E,MAFI;AAGTjZ,oBAAM,EAANA;AAHS,aAAb;AAKA,mBAAO,KAAKiY,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYE,kBAD/B,EAEHmlB,IAFG,CAAP;AAIH;;;iBAED,mBAAUtf,KAAV,EAAyB;AACrB,gBAAMsf,IAAI,GAAG;AACTlb,kBAAI,EAAE,QADG;AAETpE,mBAAK,EAALA;AAFS,aAAb;AAIA,mBAAO,KAAKqf,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYE,kBAD/B,EAEHmlB,IAFG,CAAP;AAIH;;;iBAED,mBAAUzG,MAAV,EAAgB;AACZ,gBAAMyG,IAAI,GAAG;AACTlb,kBAAI,EAAE,KADG;AAETqX,iBAAG,EAAE5C;AAFI,aAAb;AAIA,mBAAO,KAAKwG,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYE,kBAD/B,EAEHmlB,IAFG,CAAP;AAIH,W,CAED;;;;iBACA,wBAAe7Y,IAAf,EAA0B;AACtB,mBAAO,KAAK4Y,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYI,aAD/B,EAEHoM,IAFG,CAAP;AAIH;;;iBAED,sBAAa6Z,QAAb,EAA4BC,QAA5B,EAA2C;AACvC,gBAAMjB,IAAI,GAAG;AACTgB,sBAAQ,EAARA,QADS;AAETC,sBAAQ,EAARA;AAFS,aAAb;AAIA,mBAAO,KAAKlB,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYK,gBAD/B,EAEHglB,IAFG,CAAP;AAIH;;;iBAED,yBAAgB5jB,QAAhB,EAAwC;AACpC,gBAAM4jB,IAAI,GAAG;AACT5jB,sBAAQ,EAARA;AADS,aAAb;AAGA,mBAAO,KAAK2jB,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYS,cAD/B,EAEH4kB,IAFG,CAAP;AAIH;;;iBAED,4BAAmB9L,cAAnB,EAAoD;AAChD,mBAAO,KAAK6L,UAAL,CAAgBE,IAAhB,CACH,sEAAYtlB,OAAZ,GAAsB,sEAAYU,iBAD/B,EAEH;AAAC2Y,sBAAQ,EAAEE,cAAc,CAACF,QAA1B;AAAoCD,wBAAU,EAAEG,cAAc,CAACH,UAA/D;AAA2E9X,uBAAS,EAAEiY;AAAtF,aAFG,CAAP;AAIH;;;;;;;yBApOQ4L,wB,EAAwB,uH;AAAA,O;;;eAAxBA,wB;AAAwB,iBAAxBA,wBAAwB,K;AAAA,oBAFrB;;;;;;;;;;;;;;;;;AChBhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAGaoB,K;;;;;;;;AAWT;;;;AAIA,8BAAWC,GAAX,EAAsB;AAClB,mBAAO,2CAAIC,OAAJ,CAAYD,GAAZ,CAAP;AACH;;;iBAED,8BAAqBE,MAArB,EAAgC;AAAA,yDACRA,MAAM,CAACpV,SAAP,CAAiB,CAAjB,EAAoBC,aADZ;AAAA;;AAAA;AAC5B,wEAAsD;AAAA,oBAA3C9S,KAA2C;AAClDA,qBAAK,CAACoR,IAAN,GAAa,2CAAI4W,OAAJ,CAAYhoB,KAAK,CAACkF,IAAN,GAAalF,KAAK,CAACzD,KAA/B,EAAsC8Q,QAAtC,EAAb;AACH;AAH2B;AAAA;AAAA;AAAA;AAAA;AAI/B;;;iBAED,4BAAmB4a,MAAnB,EAA8B;AAC1B5tB,mBAAO,CAACC,GAAR,CAAY2tB,MAAZ;;AAD0B,yDAENA,MAAM,CAACzV,UAFD;AAAA;;AAAA;AAE1B,wEAAsC;AAAA,oBAA3BxS,KAA2B;AAClCA,qBAAK,CAACoR,IAAN,GAAa,2CAAI4W,OAAJ,CAAYhoB,KAAK,CAACkF,IAAN,GAAalF,KAAK,CAACzD,KAA/B,EAAsC8Q,QAAtC,EAAb;AACH;AAJyB;AAAA;AAAA;AAAA;AAAA;AAK7B;;;iBAED,uBAAcnI,IAAd,EAA0B;AACtB,gBAAM8R,OAAO,GAAa9R,IAAI,CAACJ,KAAL,CAAW,0DAAShE,cAApB,CAA1B;;AACA,iBAAK,IAAIiU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,OAAO,CAAC7G,MAA5B,EAAoC4E,CAAC,EAArC,EAAyC;AACrCiC,qBAAO,CAACjC,CAAD,CAAP,GAAaiC,OAAO,CAACjC,CAAD,CAAP,CAAWhQ,OAAX,CAAmB,0DAAShE,eAA5B,EAA6C,EAA7C,CAAb;AACH,aAJqB,CAKtB;;;AACA,iBAAK,IAAIgU,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGiC,OAAO,CAAC7G,MAA5B,EAAoC4E,GAAC,EAArC,EAAyC;AACrCiC,qBAAO,CAACjC,GAAD,CAAP,GAAaiC,OAAO,CAACjC,GAAD,CAAP,CAAWhQ,OAAX,CAAmB,0DAAS/D,uBAA5B,EAAqD,EAArD,CAAb;AACH;;AACD,mBAAOgW,OAAO,CAAC7P,IAAR,EAAP;AACH;;;iBAED,8BAAqBjC,IAArB,EAAiC;AAC7B,gBAAM8R,OAAO,GAAa9R,IAAI,CAACJ,KAAL,CAAW,0DAASnE,cAApB,CAA1B;;AACA,iBAAK,IAAIoU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,OAAO,CAAC7G,MAA5B,EAAoC4E,CAAC,EAArC,EAAyC;AACrCiC,qBAAO,CAACjC,CAAD,CAAP,GAAaiC,OAAO,CAACjC,CAAD,CAAP,CAAWhQ,OAAX,CAAmB,0DAASnE,eAA5B,EAA6C,EAA7C,CAAb;AACH;;AACD,mBAAOoW,OAAO,CAAC7P,IAAR,EAAP;AACH;;;iBAED,yBAAgBjC,IAAhB,EAA4B;AACxB,gBAAMrB,KAAK,GAAaqB,IAAI,CAACgjB,KAAL,CAAW,IAAX,CAAxB;AACA,gBAAMC,cAAc,GAAG,EAAvB;;AAFwB,yDAGFtkB,KAHE;AAAA;;AAAA;AAGxB,wEAA4B;AAAA,oBAAjBukB,OAAiB;AACxBD,8BAAc,CAACjoB,IAAf,CAAoB,KAAKmoB,oBAAL,CAA0BD,OAA1B,CAApB;AACH;AALuB;AAAA;AAAA;AAAA;AAAA;;AAMxB,mBAAOD,cAAc,CAAChhB,IAAf,CAAoB,MAApB,CAAP;AACH;;;iBAED,sBAAatD,KAAb,EAA4B;AACxB,mBAAOA,KAAK,CAACsD,IAAN,CAAW,0DAAStG,UAApB,CAAP;AACH;;;;AA7DD;;;;;AAKO,yBAAaynB,EAAb,EAAyB;AAC5B,mBAAO,IAAIC,OAAJ,CAAa,UAAAC,OAAO;AAAA,qBAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAd;AAAA,aAApB,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACXL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAaA,UAAMI,MAAM,GAAW,CACnB;AAACxjB,YAAI,EAAE,EAAP;AAAWyjB,kBAAU,EAAE,OAAvB;AAAgCC,iBAAS,EAAE;AAA3C,OADmB,EAEnB;AAAC1jB,YAAI,EAAE,OAAP;AAAgB2jB,iBAAS,EAAE;AAA3B,OAFmB,EAGnB;AAAC3jB,YAAI,EAAE,UAAP;AAAmB2jB,iBAAS,EAAE;AAA9B,OAHmB,EAInB;AAAC3jB,YAAI,EAAE,UAAP;AAAmB2jB,iBAAS,EAAE;AAA9B,OAJmB,EAKnB;AAAC3jB,YAAI,EAAE,aAAP;AAAsB2jB,iBAAS,EAAE;AAAjC,OALmB,EAMnB;AAAC3jB,YAAI,EAAE,QAAP;AAAiB2jB,iBAAS,EAAE;AAA5B,OANmB,EAOnB;AAAC3jB,YAAI,EAAE,qBAAP;AAA8B2jB,iBAAS,EAAE;AAAzC,OAPmB,EAQnB;AAAC3jB,YAAI,EAAE,SAAP;AAAkB2jB,iBAAS,EAAE;AAA7B,OARmB,EASnB;AAAC3jB,YAAI,EAAE,qBAAP;AAA8B2jB,iBAAS,EAAE;AAAzC,OATmB,EAUnB;AAAC3jB,YAAI,EAAE,MAAP;AAAe2jB,iBAAS,EAAE;AAA1B,OAVmB,EAWnB;AAAC3jB,YAAI,EAAE,UAAP;AAAmB2jB,iBAAS,EAAE;AAA9B,OAXmB,EAYnB;AAAC3jB,YAAI,EAAE,QAAP;AAAiB2jB,iBAAS,EAAE;AAA5B,OAZmB,CAAvB;;UAmBaC,gB;;;;;yBAAAA,gB;AAAgB,O;;;cAAhBA;;;kBAHA,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,C,EACC,4D;;;;6HAEDI,gB,EAAgB;AAAA;AAAA,oBAFf,4DAEe;AAAA,S;AAFH,O;;;;;;;;;;;;;;;;;AC/B1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaE,oB;AAET,sCAA2BC,MAA3B,EAAkDpN,cAAlD,EAAwF;AAAA;;AAA7D,eAAAoN,MAAA,GAAAA,MAAA;AAAuB,eAAApN,cAAA,GAAAA,cAAA;AAUlD,eAAAhX,eAAA,GAAkB,IAAlB;AACA,eAAAO,oBAAA,GAAuB,IAAvB,CAXwF,CAaxF;;AACQ,eAAAnE,qBAAA,GAAwB,CAAxB;AACA,eAAAioB,WAAA,GAAc,EAAd;AACA,eAAAC,OAAA,GAAkB,IAAlB;AAEA,eAAAC,uBAAA,GAA0B,CAA1B;AACA,eAAAC,qBAAA,GAAwB,CAAxB;AACA,eAAAC,+BAAA,GAAkC,CAAlC;AAnBJ,eAAKC,YAAL,GAAoB;AAACtf,aAAC,EAAE,CAAJ;AAAOC,aAAC,EAAE;AAAV,WAApB;AACA,eAAKzH,WAAL,GAAmB,IAAI,sEAAJ,EAAnB;AACA,eAAKqb,UAAL,GAAkB,IAAI,sEAAJ,EAAlB;AACA,eAAKhC,YAAL,GAAoB,IAAI,sEAAJ,EAApB;AACH;;;;iBAmDM,uBAAW;AACd,gBAAI,KAAKqN,OAAL,IAAgB,IAApB,EAA0B;AACtBK,kCAAoB,CAAC,KAAKL,OAAN,CAApB;AACH;AACJ;;;iBAEM,oBAAWre,MAAX,EAAgD;AACnD;AACA,iBAAK2e,SAAL,GAAiB,iDAASnT,MAA1B;AAEA,iBAAKxL,MAAL,GAAcA,MAAM,CAAC4B,aAArB;AAEA,gBAAMhD,KAAK,GAAGggB,MAAM,CAACC,UAArB;AACA,gBAAMhgB,MAAM,GAAG+f,MAAM,CAACE,WAAtB;AACA,gBAAMC,MAAM,GAAGngB,KAAK,GAAGC,MAAvB,CARmD,CAUnD;;AACA,iBAAK+G,QAAL,GAAgB,IAAI,mDAAJ,CAAwB;AACpC5F,oBAAM,EAAE,KAAKA,MADuB;AAEpCgf,mBAAK,EAAE,IAF6B;AAGpCC,uBAAS,EAAE,IAHyB,CAGpB;;AAHoB,aAAxB,CAAhB;AAKA,iBAAKrZ,QAAL,CAAcsZ,OAAd,CAAsBtgB,KAAtB,EAA6BC,MAA7B;AACA,iBAAK+G,QAAL,CAAcuZ,aAAd,CAA4BP,MAAM,CAACQ,gBAAnC,EAjBmD,CAmBnD;;AACA,iBAAKC,aAAL,GAAqB,IAAI,wFAAJ,EAArB;AACA,iBAAKA,aAAL,CAAmBH,OAAnB,CAA2BtgB,KAA3B,EAAkCC,MAAlC;AAEAnF,oBAAQ,CAAC8M,cAAT,CAAwB,sBAAxB,EAAgDjM,WAAhD,CAA4D,KAAK8kB,aAAL,CAAmBC,UAA/E,EAvBmD,CAyBnD;;AACA,iBAAKC,MAAL,GAAc,IAAI,2CAAJ,EAAd,CA1BmD,CA4BnD;;AACA,iBAAKC,WAAL,GAAmB,IAAI,uDAAJ,CAA4B,EAA5B,EAAgCT,MAAhC,EAAwC,IAAxC,EAA8C,GAA9C,CAAnB;AACA,iBAAKU,WAAL,GAAmB,IAAI,wDAAJ,CACf,CAAC,KAAKrB,WAAN,GAAoBW,MADL,EACa,KAAKX,WAAL,GAAmBW,MADhC,EACwC,KAAKX,WAD7C,EAC0D,CAAC,KAAKA,WADhE,EAC6E,IAD7E,EACmF,GADnF,CAAnB;AAGA,iBAAKsB,cAAL,GAAsB,KAAKF,WAA3B;;AACA,iBAAKE,cAAL,CAAoBhjB,QAApB,CAA6BC,GAA7B,CAAiC,CAAjC,EAAoC,CAApC,EAAuC,EAAvC;;AACA,iBAAK4iB,MAAL,CAAYnmB,GAAZ,CAAgB,KAAKsmB,cAArB,EAnCmD,CAqCnD;;;AACA,iBAAKC,KAAL,GAAa,IAAI,kDAAJ,CAAuB,QAAvB,EAAiC,CAAjC,CAAb;AACA,iBAAKA,KAAL,CAAWjjB,QAAX,CAAoBC,GAApB,CAAwB,CAAC,EAAzB,EAA6B,CAA7B,EAAgC,EAAhC;AACA,gBAAMijB,MAAM,GAAG,IAAI,sDAAJ,CAA2B,QAA3B,EAAqC,GAArC,CAAf;AACAA,kBAAM,CAACljB,QAAP,CAAgBC,GAAhB,CAAoB,CAApB,EAAuB,GAAvB,EAA4B,EAA5B;;AACA,iBAAK4iB,MAAL,CAAYnmB,GAAZ,CAAgB,KAAKumB,KAArB;;AACA,iBAAKJ,MAAL,CAAYnmB,GAAZ,CAAgBwmB,MAAhB,EA3CmD,CA6CnD;;;AACA,iBAAKC,cAAL,GAAsB,IAAI,uFAAJ,CAAkB,KAAKH,cAAvB,EAAuC,KAAKL,aAAL,CAAmBC,UAA1D,CAAtB;AACA,iBAAKO,cAAL,CAAoBC,WAApB,GAAkC,CAAlC;AACA,iBAAKD,cAAL,CAAoBE,WAApB,GAAkC,EAAlC;AAEA,iBAAKC,UAAL,GAAkB,IAAI,iEAAJ,CAAe,KAAK7pB,qBAApB,CAAlB;AACA,iBAAK8pB,iBAAL;AACH;AAED;;;;;;;;iBAKO,wCAA+BxoB,kBAA/B,EAAuE;AAC1E,iBAAKyoB,mBAAL,GAA2BzoB,kBAA3B;;AAEA,gBAAI,KAAK0oB,WAAL,KAAqBvkB,SAAzB,EAAoC;AAChC,mBAAKukB,WAAL,GAAmB,IAAI,kEAAJ,CAAgB,IAAhB,EAAsB,KAAKpP,cAA3B,CAAnB;AACH;;AAED,gBAAI,KAAKqP,eAAL,KAAyBxkB,SAA7B,EAAwC;AACpC,mBAAKwkB,eAAL,GAAuB3oB,kBAAkB,CAACqN,YAAnB,CAAgC0T,MAAhC,GAAyC5kB,IAAzC,GAAgDnC,KAAvE;AACH;;AAED,oBAAQ,KAAKktB,SAAb;AACI,mBAAK,iDAAS3mB,eAAd;AACI,qBAAKmoB,WAAL,CAAiBE,oBAAjB;AACA;;AACJ,mBAAK,iDAAS7U,MAAd;AACI,qBAAK2U,WAAL,CAAiBG,WAAjB;AACA;;AACJ,mBAAK,iDAAS7nB,SAAd;AACI,qBAAK0nB,WAAL,CAAiBI,cAAjB;AACA;;AACJ,mBAAK,iDAASvnB,cAAd;AACI,qBAAKmnB,WAAL,CAAiBK,mBAAjB;AACA;AAZR;AAcH;AAED;;;;;;iBAGO,mBAAO;AAAA;;AACV;AACA;AACA,iBAAKrC,MAAL,CAAYsC,iBAAZ,CAA8B,YAAM;AAChC,kBAAI/mB,QAAQ,CAACgnB,UAAT,KAAwB,SAA5B,EAAuC;AACnC,uBAAI,CAACpF,MAAL;AACH,eAFD,MAEO;AACHsD,sBAAM,CAAC+B,gBAAP,CAAwB,kBAAxB,EAA4C,YAAM;AAC9C,yBAAI,CAACrF,MAAL;AACH,iBAFD;AAGH,eAP+B,CAShC;;;AACAsD,oBAAM,CAAC+B,gBAAP,CAAwB,WAAxB,EAAqC,UAAClY,KAAD,EAAW;AAC5C,uBAAI,CAACmY,eAAL,CAAqBnY,KAArB;AACH,eAFD;AAGAmW,oBAAM,CAAC+B,gBAAP,CAAwB,UAAxB,EAAoC,YAAM;AACtC,uBAAI,CAACV,iBAAL;AACH,eAFD;AAGArB,oBAAM,CAAC+B,gBAAP,CAAwB,YAAxB,EAAsC,YAAM;AACxC,uBAAI,CAACV,iBAAL;AACH,eAFD,EAhBgC,CAmBhC;;AACArB,oBAAM,CAAC+B,gBAAP,CAAwB,YAAxB,EAAsC,UAAClY,KAAD,EAAW;AAC7C,uBAAI,CAACmY,eAAL,CAAqBnY,KAArB;AACH,eAFD;AAGAmW,oBAAM,CAAC+B,gBAAP,CAAwB,WAAxB,EAAqC,UAAClY,KAAD,EAAW;AAC5C,uBAAI,CAACmY,eAAL,CAAqBnY,KAArB;AACH,eAFD;AAGAmW,oBAAM,CAAC+B,gBAAP,CAAwB,aAAxB,EAAuC,YAAM;AACzC,uBAAI,CAACV,iBAAL;AACH,eAFD;AAGArB,oBAAM,CAAC+B,gBAAP,CAAwB,UAAxB,EAAoC,YAAM;AACtC,uBAAI,CAACV,iBAAL;AACH,eAFD;AAIArB,oBAAM,CAAC+B,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACpC,uBAAI,CAACE,MAAL;AACH,eAFD;AAGH,aApCD;AAqCH;AAED;;;;;;;iBAIQ,kBAAM;AAAA;;AACV,iBAAKxC,OAAL,GAAeyC,qBAAqB,CAAC,YAAM;AACvC,qBAAI,CAACxF,MAAL;AACH,aAFmC,CAApC;AAIA,iBAAK0E,UAAL,CAAgBe,IAAhB,CAAqB,KAAKtC,YAA1B,EAAwC,KAAKc,MAA7C,EAAqD,KAAKG,cAA1D;AAEA,iBAAK9Z,QAAL,CAAcyB,KAAd;;AACA,iBAAKqY,cAAL,CAAoBsB,MAApB,CAA2B,KAAKC,WAAL,CAAiBvkB,QAA5C;;AACA,iBAAKkJ,QAAL,CAAc0V,MAAd,CAAqB,KAAKiE,MAA1B,EAAkC,KAAKG,cAAvC;AACA,iBAAKL,aAAL,CAAmB/D,MAAnB,CAA0B,KAAKiE,MAA/B,EAAuC,KAAKG,cAA5C;AACH;AAED;;;;;;;iBAIQ,kBAAM;AACV,gBAAM9gB,KAAK,GAAGggB,MAAM,CAACC,UAArB;AACA,gBAAMhgB,MAAM,GAAG+f,MAAM,CAACE,WAAtB;AACA,gBAAMC,MAAM,GAAGngB,KAAK,GAAGC,MAAvB;AAEA,iBAAK2gB,WAAL,CAAiBT,MAAjB,GAA0BA,MAA1B;AACA,iBAAKS,WAAL,CAAiB0B,sBAAjB;AAEA,iBAAKzB,WAAL,CAAiB0B,IAAjB,GAAwB,CAAC,KAAK/C,WAAN,GAAoBW,MAA5C;AACA,iBAAKU,WAAL,CAAiB2B,KAAjB,GAAyB,KAAKhD,WAAL,GAAmBW,MAA5C;AACA,iBAAKU,WAAL,CAAiByB,sBAAjB;AAEA,iBAAKtb,QAAL,CAAcsZ,OAAd,CAAsBtgB,KAAtB,EAA6BC,MAA7B;AACA,iBAAKwgB,aAAL,CAAmBH,OAAnB,CAA2BtgB,KAA3B,EAAkCC,MAAlC;AACH;;;iBAEM,8BAAqB;AACxB,iBAAKghB,cAAL,CAAoBwB,KAApB;;AACA,iBAAKxB,cAAL,CAAoB/L,MAApB,CAA2BC,IAA3B,CAAgC,KAAKkN,WAAL,CAAiBvkB,QAAjB,CAA0BgX,KAA1B,EAAhC;AACH;;;iBAEM,mCAAuB;AAC1B,iBAAKgM,cAAL,CAAoBsB,MAApB,CAA2B,KAAKC,WAAL,CAAiBvkB,QAA5C;;AACA,iBAAKmjB,cAAL,CAAoByB,MAApB;AACH;AAED;;;;;;iBAGO,wBAAY;AACf,gBAAM5kB,QAAQ,GAAG,KAAKgjB,cAAL,CAAoBhjB,QAApB,CAA6BgX,KAA7B,EAAjB;;AAEA,iBAAKgM,cAAL,GAAuB,KAAKA,cAAL,YAA+B,uDAAhC,GAA2D,KAAKD,WAAhE,GAA8E,KAAKD,WAAzG;;AACA,iBAAKE,cAAL,CAAoBhjB,QAApB,CAA6BqX,IAA7B,CAAkCrX,QAAlC;;AAEA,iBAAKmjB,cAAL,CAAoB5N,MAApB,GAA6B,KAAKyN,cAAlC;;AAEA,iBAAKA,cAAL,CAAoBsB,MAApB,CAA2B,KAAKnB,cAAL,CAAoB/L,MAApB,CAA2B3U,CAAtD,EAAyD,KAAK0gB,cAAL,CAAoB/L,MAApB,CAA2B1U,CAApF,EAAuF,KAAKygB,cAAL,CAAoB/L,MAApB,CAA2BzU,CAAlH;;AAEA,iBAAKwhB,MAAL;AACH;;;iBAEM,4BAA4D;AAAA,gBAA3ChlB,IAA2C,uEAA5B,EAA4B;AAAA,gBAAxB0lB,SAAwB,uEAAJ,EAAI;;AAC/D,gBAAI,KAAKC,UAAL,KAAoB,IAApB,IAA4B,KAAKA,UAAL,KAAoB5lB,SAApD,EAA+D;AAC3D,mBAAK4lB,UAAL,GAAkB,IAAI,gDAAJ,CAAqB3lB,IAArB,EAA2B0lB,SAA3B,CAAlB;;AACA,mBAAKhC,MAAL,CAAYnmB,GAAZ,CAAgB,KAAKooB,UAArB;AACH,aAHD,MAGO;AACH,mBAAKjC,MAAL,CAAY7G,MAAZ,CAAmB,KAAK8I,UAAxB;;AACA,mBAAKA,UAAL,GAAkB,IAAlB;AACH;AACJ;;;iBAEM,4BAAoC;AAAA,gBAAnB3lB,IAAmB,uEAAJ,EAAI;;AACvC,gBAAI,KAAK4lB,UAAL,KAAoB,IAApB,IAA4B,KAAKA,UAAL,KAAoB7lB,SAApD,EAA+D;AAC3D,mBAAK6lB,UAAL,GAAkB,IAAI,gDAAJ,CAAqB5lB,IAArB,CAAlB;;AACA,mBAAK0jB,MAAL,CAAYnmB,GAAZ,CAAgB,KAAKqoB,UAArB;AACH,aAHD,MAGO;AACH,mBAAKlC,MAAL,CAAY7G,MAAZ,CAAmB,KAAK+I,UAAxB;;AACA,mBAAKA,UAAL,GAAkB,IAAlB;AACH;AACJ;;;iBAEM,8BAAqB;AACxB,gBAAI,KAAKC,YAAL,KAAsB,IAAtB,IAA8B,KAAKA,YAAL,KAAsB9lB,SAAxD,EAAmE;AAC/D,kBAAI,KAAK8jB,cAAL,YAA+B,uDAAnC,EAA4D;AACxD,qBAAKgC,YAAL,GAAoB,IAAI,kDAAJ,CAAuB,KAAKjC,WAA5B,CAApB;AACH,eAFD,MAEO;AACH,qBAAKiC,YAAL,GAAoB,IAAI,kDAAJ,CAAuB,KAAKlC,WAA5B,CAApB;AACH;;AACD,mBAAKD,MAAL,CAAYnmB,GAAZ,CAAgB,KAAKsoB,YAArB;AACH,aAPD,MAOO;AACH,mBAAKnC,MAAL,CAAY7G,MAAZ,CAAmB,KAAKgJ,YAAxB;;AACA,mBAAKA,YAAL,GAAoB,IAApB;AACH;AACJ;AAED;;;;;;iBAGO,mCAA0BjZ,KAA1B,EAAiC;AACpC,gBAAMkZ,IAAI,GAAG,KAAK3hB,MAAL,CAAY4hB,qBAAZ,EAAb;AACA,mBAAO;AACHziB,eAAC,EAAE,CAACsJ,KAAK,CAACoZ,OAAN,GAAgBF,IAAI,CAACR,IAAtB,IAA8B,KAAKnhB,MAAL,CAAYpB,KAA1C,GAAkD+iB,IAAI,CAAC/iB,KADvD;AAEHQ,eAAC,EAAE,CAACqJ,KAAK,CAACqZ,OAAN,GAAgBH,IAAI,CAACI,GAAtB,IAA6B,KAAK/hB,MAAL,CAAYnB,MAAzC,GAAkD8iB,IAAI,CAAC9iB;AAFvD,aAAP;AAIH;;;iBAEM,yBAAgB4J,KAAhB,EAAqB;AACxB,gBAAMuZ,GAAG,GAAG,KAAKC,yBAAL,CAA+BxZ,KAA/B,CAAZ;AACA,iBAAKgW,YAAL,CAAkBtf,CAAlB,GAAuB6iB,GAAG,CAAC7iB,CAAJ,GAAQ,KAAKa,MAAL,CAAYpB,KAArB,GAA8B,CAA9B,GAAkC,CAAxD;AACA,iBAAK6f,YAAL,CAAkBrf,CAAlB,GAAuB4iB,GAAG,CAAC5iB,CAAJ,GAAQ,KAAKY,MAAL,CAAYnB,MAArB,GAA+B,CAAC,CAAhC,GAAoC,CAA1D,CAHwB,CAGsC;AACjE;;;iBAEM,6BAAiB;AACpB;AACA;AACA;AACA;AACA,iBAAK4f,YAAL,CAAkBtf,CAAlB,GAAsB,CAAC,MAAvB;AACA,iBAAKsf,YAAL,CAAkBrf,CAAlB,GAAsB,CAAC,MAAvB;AACH;;;iBAEM,sBAAa;AAChB,iBAAK4R,YAAL,CAAkBpU,OAAlB;AACA,iBAAKjF,WAAL,CAAiBiF,OAAjB;AACA,iBAAKoW,UAAL,CAAgBpW,OAAhB;AAEA,iBAAKujB,WAAL,CAAiB+B,UAAjB;AACH;;;iBAEM,uBAAc;AACjB,iBAAKA,UAAL;AACA,iBAAKC,8BAAL,CAAoC,KAAK1qB,kBAAzC;AACH;;;iBAEM,mBAAUgE,MAAV,EAA0B;AAC7B,iBAAK2kB,eAAL,GAAuB3kB,MAAvB;AACA,iBAAK2mB,WAAL;AACH;;;iBAEM,4BAAgB;AACnB,iBAAKpR,YAAL,CAAkBpU,OAAlB;AACH;;;iBAEM,4BAAmBnL,KAAnB,EAAmC;AACtC,iBAAKsI,eAAL,GAAuBtI,KAAvB;AACA,iBAAK2wB,WAAL;AACH;;;iBAEM,iCAAwB3wB,KAAxB,EAAwC;AAC3C,iBAAK6I,oBAAL,GAA4B7I,KAA5B;AACA,iBAAK2wB,WAAL;AACH;;;iBAEM,4BAAmBhuB,KAAnB,EAAkC;AACrC,gBAAIA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAKqD,kBAAL,CAAwBI,UAAxB,CAAmCwN,MAA7D,EAAqE;AACjE,mBAAKiZ,uBAAL,GAA+BlqB,KAA/B;AACA,mBAAKguB,WAAL;AACH;AACJ;;;iBAEM,6BAAoBhuB,KAApB,EAAmC;AACtC,gBAAIA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAKqD,kBAAL,CAAwBc,SAAxB,CAAkC8M,MAA5D,EAAoE;AAChE,mBAAKkZ,qBAAL,GAA6BnqB,KAA7B;AACA,mBAAKguB,WAAL;AACH;AACJ;;;iBAEM,sCAA6BhuB,KAA7B,EAA4C;AAC/C7E,mBAAO,CAACC,GAAR,WAAe4E,KAAf,iBAA2B,KAAKqD,kBAAL,CAAwByN,kBAAxB,CAA2C9Q,KAA3C,EAAkDiI,IAAlD,EAA3B;;AAEA,gBAAIjI,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAKqD,kBAAL,CAAwByN,kBAAxB,CAA2CG,MAArE,EAA6E;AACzE9V,qBAAO,CAACC,GAAR,CAAY,sBAAsB4E,KAAlC;AACA,mBAAKoqB,+BAAL,GAAuCpqB,KAAvC;AACA,mBAAKguB,WAAL;AACH;AACJ;;;iBAEM,wBAAexhB,IAAf,EAA+B;AAClC,iBAAK+d,SAAL,GAAiB/d,IAAjB;AACA,iBAAKwhB,WAAL;AACH;;;eAMD,eAAsB;AAClB,mBAAO,KAAKlC,mBAAZ;AACH,W;eAND,aAAuBmC,KAAvB,EAAkD;AAC9C,iBAAKnC,mBAAL,GAA2BmC,KAA3B;AACH;;;eAMD,eAAY;AACR,mBAAO,KAAK1D,SAAZ;AACH;;;eAED,eAAiB;AACb,mBAAO,KAAKe,cAAZ;AACH;;;eAED,eAAiB;AACb,mBAAO,KAAKG,cAAZ;AACH;;;eAED,eAAc;AACV,mBAAO,KAAKoB,WAAZ;AACH,W;eAED,aAAexvB,KAAf,EAAoC;AAChC,iBAAKwvB,WAAL,GAAmBxvB,KAAnB;AACH;;;eAED,eAA0B;AACtB,mBAAO,KAAK6sB,uBAAZ;AACH;;;eAED,eAAwB;AACpB,mBAAO,KAAKC,qBAAZ;AACH;;;eAED,eAAkC;AAC9B,mBAAO,KAAKC,+BAAZ;AACH;;;eAED,eAAkB;AACd,mBAAO,KAAK4B,eAAZ;AACH;;;eAED,eAAS;AACL,mBAAO,KAAKb,MAAZ;AACH;;;;;;;yBAzaQrB,oB,EAAoB,4G,EAAA,sH;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBADR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKgB;;AAAuC;;AAAG;;;;;;AAC1C;;AAAuC;;AAA8B;;;;;;;;AAA9B;;AAAA;;;;;;AAKvC;;AAAsC;;AAAK;;;;;;AAC3C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKxC;;AAAsC;;AAAI;;;;;;AAC1C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKxC;;AAAsC;;AAAc;;;;;;AACpD;;AAAwC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAKxC;;AAAsC;;AAAO;;;;;;;;AAC7C;;AACI;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AAAuD;;AAAO;;AAClE;;AACJ;;;;;;AAGR;;;;;;AACA;;;;;;AAAI;;;;UD1BCoE,0B;AAIT,4CAAoB3yB,UAApB,EAAkEG,OAAlE,EAAsF;AAAA;;AAAlE,eAAAH,UAAA,GAAAA,UAAA;AAA8C,eAAAG,OAAA,GAAAA,OAAA;AAHlE,eAAAioB,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,eAA3B,EAA4C,SAA5C,CAA7B;AAII,eAAKwK,OAAL;AACH;;;;iBAED,oBAAQ,CACP;;;iBAED,mBAAU;AAAA;;AACN,iBAAK5yB,UAAL,CAAgBiC,YAAhB,GAA+BC,IAA/B,CAAoC,UAACC,GAAD,EAAkC;AAClE,qBAAI,CAACC,SAAL,GAAiBD,GAAG,CAACC,SAArB;AACH,aAFD;AAGH;;;iBAED,2BAAkBwqB,EAAlB,EAA6C;AAAA;;AACzC,gBAAMpT,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,wBAAY,CAACwB,IAAb,GAAoB4R,EAApB,CAFyC,CAGzC;;AACApT,wBAAY,CAAC+O,YAAb,GAA4B,IAA5B;AACA/O,wBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,wBAAY,CAACE,SAAb,GAAyB,OAAzB;AACAF,wBAAY,CAACI,QAAb,GAAwB,MAAxB;;AAEA,gBAAME,SAAS,GAAG,KAAK3Z,OAAL,CAAa4Z,IAAb,CAAkB,+FAAlB,EAA0CP,YAA1C,EAAwDQ,WAAxD,GAAsEC,SAAtE,GAAkF/X,IAAlF,CACd;AAAA,qBAAM,OAAI,CAAC0wB,OAAL,EAAN;AAAA,aADc,CAAlB;AAGH;;;iBAED,wBAAY;AAAA;;AACR,gBAAMpZ,YAAY,GAAG,IAAI,wEAAJ,EAArB,CADQ,CAER;;AACAA,wBAAY,CAAC+O,YAAb,GAA4B,IAA5B;AACA/O,wBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,wBAAY,CAACE,SAAb,GAAyB,OAAzB;AACAF,wBAAY,CAACI,QAAb,GAAwB,MAAxB;;AACA,gBAAME,SAAS,GAAG,KAAK3Z,OAAL,CAAa4Z,IAAb,CAAkB,8FAAlB,EAAyCP,YAAzC,CAAlB;;AACAM,qBAAS,CAACE,WAAV,GAAwBC,SAAxB,GAAoC/X,IAApC,CAAyC;AAAA,qBAAM,OAAI,CAAC0wB,OAAL,EAAN;AAAA,aAAzC;AAEH;;;;;;;yBAzCQD,0B,EAA0B,8J,EAAA,mI;AAAA,O;;;cAA1BA,0B;AAA0B,+C;AAAA,iB;AAAA,e;AAAA,snB;AAAA;AAAA;ACbvC;;AACI;;AAA0C;AAAA,qBAAS,IAAAE,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAY;;AAC/E;;AAGQ;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AAKJ;;AAEJ;;AACA;;AACJ;;AACJ;;;;AAvCqB;;AAAA;;AAoCO;;AAAA;;AACqC;;AAAA;;;;;;;;;;;;;;;;;;;;;ACvCjE;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;ACAA;;AACE;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAA+C;;AAClE;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAA6E;;AAAsB;;AACzJ;;AAAuD;AAAA;;AAAA;;AAAA;AAAA;;AAAkC;;AAAyB;;AAClH;;AAAuD;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AAA0B;;AAE7H;;;;;;AAJmF;;AAAA;;;;;;AAOjF;;;;;;AAAQ;;QDEV;;;UAOaC,sB;AAgBT,wCAA0BC,OAA1B,EAAyD;AAAA;;AAA/B,eAAAA,OAAA,GAAAA,OAAA;AAN1B,eAAAlrB,cAAA,GAAqC,IAAI,qEAAJ,EAArC;AAOC;;;;iBAEM,oBAAQ;AACX,iBAAKmrB,yBAAL,GAAiC,IAAjC;AACA,iBAAKC,gBAAL,GAAwB,KAAxB;AACA,iBAAKC,kBAAL,GAA0B,EAA1B;AACA,iBAAKH,OAAL,CAAaI,UAAb,CAAwB,KAAKC,cAA7B;AACH;;;iBAED,0BAAiBhrB,SAAjB,EAAsC;AAClC,iBAAKP,cAAL,CAAoBsL,YAApB,CAAiC/K,SAAjC;AACH;;;iBAEM,0BAAiB;AACpB,iBAAK4qB,yBAAL,GAAiC,KAAjC;AACA,iBAAKC,gBAAL,GAAwB,IAAxB;AAEA,iBAAKF,OAAL,CAAaP,8BAAb,CAA4C,KAAK3qB,cAAjD;AAEA,iBAAKkrB,OAAL,CAAaM,OAAb;AACH;;;iBAEM,iCAAwB;AAC3B,iBAAKL,yBAAL,GAAiC,KAAjC;AACA,iBAAKC,gBAAL,GAAwB,IAAxB;AAEA,gBAAMK,KAAK,GAAgB,6EAA3B;AACA,gBAAMC,KAAK,GAAgB,6EAA3B;AACA,gBAAMC,KAAK,GAAgB,6EAA3B;AACA,gBAAMC,KAAK,GAAgB,6EAA3B;AAEA,iBAAK5rB,cAAL,CAAoBsL,YAApB,CAAiCmgB,KAAjC;AACA,iBAAKzrB,cAAL,CAAoBsL,YAApB,CAAiCogB,KAAjC;AACA,iBAAK1rB,cAAL,CAAoBsL,YAApB,CAAiCqgB,KAAjC;AACA,iBAAK3rB,cAAL,CAAoBsL,YAApB,CAAiCsgB,KAAjC;AAEA,iBAAK5rB,cAAL,CAAoB6rB,aAApB;AACA,iBAAK7rB,cAAL,CAAoB8rB,kBAApB;AAEA,iBAAKZ,OAAL,CAAaP,8BAAb,CAA4C,KAAK3qB,cAAjD;AAEA,iBAAKkrB,OAAL,CAAaM,OAAb;AACH;;;iBAEM,yCAAgC;AACnC,iBAAKL,yBAAL,GAAiC,KAAjC;AACA,iBAAKC,gBAAL,GAAwB,IAAxB;AAEA,gBAAMW,cAAc,GAAgB,yFAApC;AACA,gBAAMC,eAAe,GAAgB,gGAArC;AAEA,iBAAKhsB,cAAL,CAAoBsL,YAApB,CAAiC0gB,eAAjC;AACA,iBAAKhsB,cAAL,CAAoBsL,YAApB,CAAiCygB,cAAjC;AAEA,iBAAK/rB,cAAL,CAAoB6rB,aAApB;AACA,iBAAK7rB,cAAL,CAAoB8rB,kBAApB;AAEA,iBAAKZ,OAAL,CAAaP,8BAAb,CAA4C,KAAK3qB,cAAjD;AAEA,iBAAKkrB,OAAL,CAAaM,OAAb;AACH;;;;;;;yBA7EQP,sB,EAAsB,oJ;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA;AAAA;;;;;;;;;;;;;;;;;;AClBnC;;AAQA;;AACE;;AAEA;;AACE;;AACE;;AACF;;AACA;;AAEF;;AACF;;;;AAlBsG;;AAQjG;;AAAA;;AACgC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHrC,UAAI,sEAAYlsB,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBktB,eAAzB,CAAyC,yDAAzC,EAAoD,CAAC;AACnDC,4BAAoB,EAAE,gEAAkBC;AADW,OAAD,CAApD,WAEU,UAAA/W,GAAG;AAAA,eAAIrd,OAAO,CAACC,GAAR,CAAYod,GAAZ,CAAJ;AAAA,OAFb;;;;;;;;;;;;;;;ACVA,eAASgX,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOpG,OAAO,CAACC,OAAR,GAAkB7rB,IAAlB,CAAuB,YAAW;AACxC,cAAIgC,CAAC,GAAG,IAAIiwB,KAAJ,CAAU,yBAAyBD,GAAzB,GAA+B,GAAzC,CAAR;AACAhwB,WAAC,CAAC6c,IAAF,GAAS,kBAAT;AACA,gBAAM7c,CAAN;AACA,SAJM,CAAP;AAKA;;AACD+vB,8BAAwB,CAACG,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAH,8BAAwB,CAAClG,OAAzB,GAAmCkG,wBAAnC;AACAI,YAAM,CAACC,OAAP,GAAiBL,wBAAjB;AACAA,8BAAwB,CAACtJ,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["export * from './alignment-cube.component';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm navbar-light bg-light px-2 z\">\n  <a class=\"navbar-brand\" routerLink=\"start\">ETARA</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"dataCube\">DataCube</a>\n      </li>\n<!--      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"currentTest\">Test</a>\n      </li>-->\n<!--      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"schema\">Schema</a>\n      </li>-->\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"goldStandardBuilder\">GoldStandardBuilder</a>\n      </li>\n<!--      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"webservicesOverview\">Webservices</a>\n      </li>-->\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"settings\">Settings</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","export enum MappingType {\n    LocalToWeb,\n    WebToLocal,\n    Bidirectional\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gsb-page',\n  templateUrl: './gsb-page.component.html',\n  styleUrls: ['./gsb-page.component.scss']\n})\nexport class GsbPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-gold-standard-builder></app-gold-standard-builder>\n\n","import {ChangeDetectorRef, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {LeaderLineAlignment} from '../../../../_classes/gsb/lines';\nimport {GsbService} from '../../../../_services/gsb.service';\nimport {Utils} from '../../../../_classes/Utils';\n\n@Component({\n    selector: 'app-mapping-table',\n    templateUrl: './mapping-table.component.html',\n    styleUrls: ['./mapping-table.component.scss']\n})\nexport class MappingTableComponent {\n\n    showFullPathLocal = false;\n    utils: Utils = new Utils();\n\n    constructor(public gsbService: GsbService, public cdr: ChangeDetectorRef) {\n\n    }\n\n    log(): void {\n        console.log(this.gsbService.currentMappings);\n    }\n}\n","<mat-slide-toggle color=\"primary\" [(ngModel)]=\"gsbService.showFullLocalPath\">\n    show full path\n</mat-slide-toggle>\n<div class=\"mapping-wrapper\" *ngIf=\"gsbService.currentMappings\">\n        <div class=\"mapping\" *ngFor=\"let mapping of gsbService.currentMappings\">\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of mapping.localEntries\">\n                    <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry.path : utils.formatLocalPath(entry.path))\"></p>\n                </div>\n            </div>\n            <div class=\"divider\">\n                <div class=\"relationType\">\n                    <mat-icon *ngIf=\"mapping.type === 0\">east</mat-icon>\n                    <mat-icon *ngIf=\"mapping.type === 1\">west</mat-icon>\n                    <mat-icon *ngIf=\"mapping.type === 2\">sync_alt</mat-icon>\n                </div>\n                <div class=\"action\">\n                    <button mat-icon-button aria-label=\"Clear\" (click)=\"gsbService.removeMapping(mapping)\">\n                        <mat-icon>delete</mat-icon>\n                    </button>\n                </div>\n            </div>\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of mapping.webEntries\">\n                    <p>{{entry.path}}</p>\n                </div>\n            </div>\n        </div>\n</div>\n","export * from './ui.component';\n","import {AfterViewInit, ChangeDetectorRef, Component, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport {BackendConnectionService} from '../../_services/backend-connection.service';\nimport {\n    IApi,\n    IApisOverview,\n    ILocalDatabase,\n    ILocalDatabaseSchema,\n    ILocalDatabaseShortInfo,\n    ILocalDatabasesOverview, IPredicate, IRelation\n} from '../../_interfaces';\nimport {MatDialog} from '@angular/material/dialog';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {IErrorMessage} from '../../_interfaces/settings/IErrorMessage';\nimport {Utils} from '../../_classes/Utils';\nimport {GsbService} from '../../_services/gsb.service';\nimport {MatStepper} from '@angular/material/stepper';\nimport {BuilderComponent} from './builder/builder.component';\n\n@Component({\n    selector: 'app-gold-standard-builder',\n    templateUrl: './gold-standard-builder.component.html',\n    styleUrls: ['./gold-standard-builder.component.scss']\n})\nexport class GoldStandardBuilderComponent implements OnInit {\n    @ViewChild('stepper') stepper: MatStepper;\n    @ViewChild('builder') builder: BuilderComponent;\n\n    utils: Utils = new Utils();\n    selectedIndex: number;\n\n    webDbSelected = false;\n    localDbSelected = false;\n    localSchemaLoaded = false;\n    localSchemaError = false;\n    useIdentifierMap = true;\n    showFullPathLocal = true;\n    showFullPathWeb = false;\n\n    currentLocalDatabase: ILocalDatabase;\n    currentWebDatabase: IApi;\n\n    currentLocalDatabaseSchema: ILocalDatabaseSchema;\n    errorMsg: IErrorMessage;\n\n    localEntityFiltered: any;\n    localSortMethod = '';\n    localEntity: any;\n    localEntityLoaded = false;\n    localPathSearchValue = '';\n    localValueSearchValue = '';\n\n    weblEntityFiltered: any;\n    webSortMethod = '';\n    webEntity: any;\n    weblEntityLoaded = false;\n    webPathSearchValue = '';\n    webValueSearchValue = '';\n\n    databases: Array<ILocalDatabaseShortInfo>;\n    apis: Array<IApi>;\n\n    identifiers: string[];\n    predicates: string[];\n\n\n    localHashIds: Set<string> = new Set<string>();\n    localMappingEntries: Set<any> = new Set<any>();\n    webHashIds: Set<string> = new Set<string>();\n    webMappingEntries: Set<any> = new Set<any>();\n    startId: string;\n    endId: string;\n\n    public dbSelectionForm: FormGroup;\n\n    webEntityModFinished = false;\n\n    constructor(private connection: BackendConnectionService,\n                private dialog: MatDialog,\n                private _fb: FormBuilder,\n                public cdr: ChangeDetectorRef,\n                private _dialog: MatDialog,\n                public gsbService: GsbService) {\n\n        this.dbSelectionForm = _fb.group({\n            localDatabase: ['', Validators.required],\n            webDatabase: ['', Validators.required],\n            identifier: [{value: '', disabled: !this.localSchemaLoaded}, Validators.required],\n            inputType: [{value: '', disabled: !this.localSchemaLoaded}, Validators.required],\n        });\n    }\n\n    ngOnInit(): void {\n        this.connection.getDatabases().then((res: ILocalDatabasesOverview) => {\n            this.databases = res.databases;\n        });\n        this.connection.getApis().then((res: IApisOverview) => {\n            this.apis = res.apis;\n        });\n    }\n\n    changeLocalDatabase(dbName: string): void {\n        this.localDbSelected = false;\n        this.localSchemaLoaded = false;\n        this.localSchemaError = false;\n        this.dbSelectionForm.get('identifier').setValue('');\n        this.dbSelectionForm.get('identifier').disable();\n        this.dbSelectionForm.get('inputType').setValue('');\n        this.dbSelectionForm.get('inputType').disable();\n\n\n        this.loadLocalDatabasesData(dbName);\n        this.loadLocalDatabasesSchema(dbName);\n    }\n\n    changeInputType(inputType: string): void {\n        this.identifiers = this.getIdetifier(inputType);\n        this.predicates = this.getPredicates(inputType);\n        this.dbSelectionForm.get('identifier').enable();\n    }\n\n    loadLocalDatabasesData(dbName: string): void {\n        this.connection.getLocalDatabaseData(dbName).then((res: ILocalDatabase) => {\n            this.currentLocalDatabase = res;\n            this.localDbSelected = true;\n\n            if (this.currentLocalDatabase.identifierMapContent !== '') {\n                this.useIdentifierMap = false;\n            }\n        });\n    }\n\n    loadLocalDatabasesSchema(dbName: string): void {\n        this.connection.getLocalDatabaseSchema(dbName).subscribe(\n            (schema: ILocalDatabaseSchema) => {\n                this.currentLocalDatabaseSchema = schema;\n                this.localSchemaLoaded = true;\n                this.dbSelectionForm.get('inputType').enable();\n            },\n            (error) => {\n                this.errorMsg = (error.error as IErrorMessage);\n                this.localSchemaError = true;\n            }\n        );\n    }\n\n    loadWebDatabasesData(dbName: string): void {\n        this.connection.getWebDatabaseData(dbName).then((res: IApi) => {\n            this.currentWebDatabase = res;\n            this.webDbSelected = true;\n        });\n    }\n\n    debugMode() {\n        this.selectedIndex = 1;\n        this.gsbService.debugMode();\n    }\n\n    mappingSelectionFinished(): void {\n        this.gsbService.generateFinalAlignment();\n        this.stepper.next();\n    }\n\n    changeApiResponse(e): void {\n        this.gsbService.changeWebReducedResponse(e);\n    }\n\n    respChangeFinished(): void {\n        this.webEntityModFinished = true;\n        this.builder.init();\n        this.cdr.detectChanges();\n        this.builder.showLines();\n        this.builder.markNewPaths();\n    }\n\n    selectionChange(index): void {\n        if (!this.gsbService.finishedLoading) {\n            return;\n        }\n        if (index === 1) {\n            Utils.delay(500).then(() => {\n                this.builder.showLines();\n            });\n        } else {\n            this.builder.hideLines();\n        }\n    }\n\n    startGSB() {\n        this.stepper.steps.get(0).completed = true;\n        this.stepper.steps.get(0).editable = false;\n        const identifier = this.dbSelectionForm.get('identifier').value;\n        const inputType = this.dbSelectionForm.get('inputType').value;\n        this.gsbService.startNewAlignment(this.currentLocalDatabase, this.currentWebDatabase, identifier, inputType);\n    }\n\n    nextEntity(): void {\n        this.builder.clearLines();\n        this.webEntityModFinished = false;\n        this.gsbService.nextEntity();\n    }\n\n    getIdetifier(inputType: string): string[] {\n        const identifier = [];\n        for (const value of this.currentLocalDatabaseSchema.identifier) {\n            const predicate = value.predicate;\n            const contains = this.currentLocalDatabaseSchema.structure.some(\n                (entry: IRelation) => (entry.subject === inputType && entry.predicate === predicate)\n            );\n            if (contains) {\n                identifier.push(predicate);\n            }\n        }\n\n        return identifier;\n    }\n\n    getPredicates(inputType: string): string[] {\n        const predicates = [];\n        for (const value of this.currentLocalDatabaseSchema.functionality) {\n            const predicate = value.predicate;\n            const contains = this.currentLocalDatabaseSchema.structure.some(\n                (entry: IRelation) => (entry.subject === inputType && entry.predicate === predicate)\n            );\n            if (contains) {\n                predicates.push(predicate);\n            }\n        }\n\n        return predicates;\n    }\n\n\n}\n","<mat-horizontal-stepper linear #stepper (selectionChange)=\"selectionChange($event.selectedIndex)\"\n                        [selectedIndex]=\"selectedIndex\">\n\n    <!--    Select Database     -->\n    <mat-step>\n        <ng-template matStepLabel>Select Databases</ng-template>\n        <form [formGroup]=\"dbSelectionForm\">\n            <div class=\"container-flex\">\n                <div class=\"container-flex-item\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Select local database</mat-label>\n                        <mat-select formControlName=\"localDatabase\"\n                                    (selectionChange)=\"changeLocalDatabase($event.value)\">\n                            <mat-option *ngFor=\"let entry of databases\"\n                                        value=\"{{entry.label}}\">{{entry.label}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Select class</mat-label>\n                        <mat-select formControlName=\"inputType\" (selectionChange)=\"changeInputType($event.value)\">\n                            <ng-container *ngIf=\"currentLocalDatabaseSchema\">\n                                <mat-option *ngFor=\"let entry of currentLocalDatabaseSchema.classes\"\n                                            value=\"{{entry.class}}\">{{entry.class}}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Select identifier</mat-label>\n                        <mat-select formControlName=\"identifier\">\n                            <ng-container *ngIf=\"currentLocalDatabaseSchema\">\n                                <mat-optgroup label=\"identifier\">\n                                    <ng-container *ngFor=\"let entry of identifiers\">\n                                        <mat-option\n                                                value=\"{{entry}}\">{{entry}}\n                                        </mat-option>\n                                    </ng-container>\n<!--                                    <ng-container *ngFor=\"let entry of currentLocalDatabaseSchema.identifier\">-->\n<!--                                        <mat-option-->\n<!--                                                value=\"{{entry.predicate}}\">{{entry.predicate}}-->\n<!--                                        </mat-option>-->\n<!--                                    </ng-container>-->\n\n                                </mat-optgroup>\n                                <mat-optgroup label=\"predicates\">\n                                    <mat-option *ngFor=\"let entry of predicates\"\n                                                value=\"{{entry}}\">{{entry}}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </ng-container>\n                        </mat-select>\n                    </mat-form-field>\n                    <p *ngIf=\"localSchemaError\">ErrorMsg: {{this.errorMsg.errMsg}}</p>\n\n                </div>\n                <div class=\"container-flex-item\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Select web database</mat-label>\n                        <mat-select formControlName=\"webDatabase\"\n                                    (selectionChange)=\"loadWebDatabasesData($event.value)\">\n                            <!--                    <mat-option value=\"None\">None</mat-option>-->\n                            <mat-option *ngFor=\"let entry of apis\"\n                                        value=\"{{entry.label}}\">{{entry.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n\n        <button mat-raised-button color=\"primary\" matStepperNext (click)=\"startGSB()\"\n                [disabled]=\"!dbSelectionForm.valid\">Start\n        </button>\n<!--        <button mat-raised-button matStepperNext (click)=\"debugMode()\">Debug</button>-->\n    </mat-step>\n\n    <!--    Prepare Api Response      -->\n    <mat-step>\n        <ng-template matStepLabel>Prepare Api Response</ng-template>\n        <div class=\"stepper\">\n            <!--            <button mat-raised-button matStepperPrevious>Back</button>-->\n            <button mat-raised-button matStepperNext color=\"primary\" (click)=\"respChangeFinished()\"\n                    [disabled]=\"!gsbService.finishedLoadingWebEntity\">Save and continue\n            </button>\n        </div>\n\n        <div *ngIf=\"!gsbService.finishedLoadingWebEntity && !gsbService.loadingNextEntityFailed\">\n            <div class=\"center\">\n                <mat-spinner></mat-spinner>\n                <p>Api response loading ... ({{gsbService.loadingTries}} of {{gsbService.maxLoadingTries}}\n                    tries)</p>\n            </div>\n        </div>\n        <div *ngIf=\"gsbService.loadingNextEntityFailed\">\n            <div class=\"center\">\n                <div><mat-icon aria-hidden=\"false\" aria-label=\"error\" inline=\"true\" style=\"font-size: 4rem\">error</mat-icon></div>\n                <p>Unable to retrieve a valid api response. (Tested {{gsbService.loadingTries}} different\n                    entities)</p>\n                <p>You can try again another 50 entities or go back and define another identifier.</p>\n                <button mat-raised-button color=\"primary\" (click)=\"gsbService.nextEntity()\">Try again</button>\n            </div>\n        </div>\n        <div *ngIf=\"gsbService.finishedLoadingWebEntity\">\n            <br>\n            <div>\n                <p>Please delete the parts of the response you don't need. Use the icon on the left of the selected\n                    part.</p>\n            </div>\n            <br>\n            <app-json-viewer [jsonData]=\"gsbService.currentWebEntity.reducedResponse\"\n                             (jsonChangeEvent)=\"changeApiResponse($event)\"></app-json-viewer>\n        </div>\n    </mat-step>\n\n    <!--    Entity Mapping      -->\n    <mat-step>\n        <ng-template matStepLabel>Entity Mapping</ng-template>\n        <div class=\"stepper\">\n            <button mat-raised-button color=\"primary\" matStepperNext (click)=\"gsbService.generateSuggestions()\">Generate\n                Final Alignment\n            </button>\n            <button mat-raised-button color=\"primary\" (click)=\"nextEntity()\">Next Entity</button>\n            <button mat-raised-button matStepperPrevious>Edit API Response</button>\n        </div>\n\n        <div *ngIf=\"!gsbService.finishedLoading\">\n            <div class=\"center\">\n                <div>\n                    <mat-spinner></mat-spinner>\n                    <p>Next entity loading ...</p>\n                </div>\n            </div>\n        </div>\n        <app-builder #builder *ngIf=\"gsbService.finishedLoading\"></app-builder>\n    </mat-step>\n    <!--    <mat-step>-->\n    <!--        <ng-template matStepLabel>Mapping Selection</ng-template>-->\n    <!--        <app-mapping-suggestion-tool #suggestion *ngIf=\"gsbService.suggestionsLoaded\" (finishedEvent)=\"mappingSelectionFinished()\" ></app-mapping-suggestion-tool>-->\n    <!--    </mat-step>-->\n    <mat-step>\n        <ng-template matStepLabel>Final Alignmnet</ng-template>\n        <app-final-alignmnet></app-final-alignmnet>\n    </mat-step>\n\n</mat-horizontal-stepper>\n","export * from './Metric';\nexport * from './Mapping';\nexport * from './RelationPath';\nexport * from './Alignment';\nexport * from './alignment-container';\n","export const settings = {\n    regexRelSearch: /(#(\\w)+)$|(\\/[\\w]+)$/g,\n    regexRelReplace: /[#/]/g,\n    joinSymbol: '🡢',\n\n    regexApiSearch: /(\\.[\\w-\\w]+(\\[\\*\\])*)$/g,\n    regexApiReplace: /[./]/g,\n    regexApiReplaceWildcard: /(\\[\\*\\])*$/g,\n\n    rayCasterWorkingLayer: 1\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alignment-viewer-page',\n  templateUrl: './alignment-viewer-page.component.html',\n  styleUrls: ['./alignment-viewer-page.component.scss']\n})\nexport class AlignmentViewerPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-data-selector></app-data-selector>\n","export enum ViewMode {\n    View3D = 'View3D',\n    View2DAlignment = 'Alignment',\n    View2DApi = 'Api',\n    View2DRelation = 'Relation'\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  version: require('../../package.json').version,\n  baseUrl: 'http://localhost:8080/etara',\n  webserviceManagerEndpoint: '/webserviceManager',\n  apiManagerEndpoint: '/apiManager',\n  apiCallEndpoint: '/apiManager/call',\n  apiToFlatJson: '/apiManager/flatJson',\n  jsonDiffEndpoint: '/apiManager/jsonDiff',\n  dbManagerEndpoint: '/dbManager',\n  dbSchemaEndpoint: '/dbManager/schema',\n  dbKnowledgeBaseEndpoint: '/dbManager/knowledge',\n  gsbSuggestions: '/gsb/suggestions',\n  gsbFinalAlignment: '/gsb/saveFinalAlignment',\n\n  gsbEndpoint: '/gsb',\n  webservicesEndpoint: '/webservices'\n};\n","import {AlignmentCubeService} from '../../_components/alignment-cube/engine/alignment-cube.service';\nimport {ResourceTracker} from './ResourceTracker';\nimport * as THREE from 'three';\nimport {AlignmentContainer, RelationPath, Mapping, Alignment} from '../alignment';\nimport {ThreeJsUtil} from './ThreeJsUtil';\nimport {ViewMode} from '../../models';\nimport {CSS2DObject} from 'three/examples/jsm/renderers/CSS2DRenderer';\nimport {settings} from '../../../assets/settings';\nimport {Mesh} from 'three';\n\nexport class DataCubeCreator {\n    private alignmentCubeService: AlignmentCubeService;\n\n    private cubeTracker: ResourceTracker;\n\n    // references to alignmentCubeService variables\n    private scene: THREE.Scene;\n    private alignmentModel: AlignmentContainer;\n\n    constructor(alignmentCubeService: AlignmentCubeService) {\n        this.alignmentCubeService = alignmentCubeService;\n        this.alignmentModel = alignmentCubeService.alignmentContainer;\n        this.scene = alignmentCubeService.scene;\n\n        this.cubeTracker = new ResourceTracker();\n    }\n\n\n    /**\n     * Adds the dataCubes to the scene. ViewMode determines which will be created.\n     */\n    public addDataCubes(): void {\n        const viewMode = this.alignmentCubeService.viewMode;\n\n        this.alignmentModel.alignments.forEach((alignment, index) => {\n            // Check if only the specified alignment should be generated\n            if (!(viewMode !== ViewMode.View2DAlignment || (this.alignmentCubeService.selectedAlignmentIndex === index))) {\n                return;\n            }\n\n            alignment.mappings.forEach((mapping: Mapping) => {\n                // Each Mapping can have multiple api paths\n                mapping.apiPaths.forEach((apiPath) => {\n                    const indexApi = this.alignmentModel.apiLabels.findIndex((value) => value === apiPath);\n\n                    // Check if only the specified api path should be generated\n                    if (!(viewMode !== ViewMode.View2DApi || (this.alignmentCubeService.selectedApiPathIndex === indexApi))) {\n                        return;\n                    }\n                    // Each Mapping can have multiple relation paths\n                    mapping.relationPaths.forEach((rel) => {\n                        const indexRel = this.alignmentModel.getRelationPathIndex(rel.paths);\n                        // Check if only the specified relationPath should be generated\n                        if (!(viewMode !== ViewMode.View2DRelation\n                            || (this.alignmentCubeService.selectedRelationPathLabelIndex === indexRel))) {\n                            return;\n                        }\n\n                        const cube = this.createDataCube(alignment, mapping, apiPath, rel, index);\n\n                        this.scene.add(cube);\n                        this.cubeTracker.track(cube);\n\n                    });\n                });\n            });\n        });\n    }\n\n    /**\n     * Generates a label, with all information about the mapping.\n     * @param dataSetName\n     * @param apiPath\n     * @param relationPaths\n     * @param metricName\n     * @param metricValue\n     * @private\n     */\n    private makeDataCubeLabel(dataSetName: string, apiPath: string, relationPaths: string[], metricName: string, metricValue): CSS2DObject {\n        const divElement = document.createElement('div');\n        const divElementDataSetName = document.createElement('div');\n        divElementDataSetName.textContent = 'alignment: ' + dataSetName;\n        const divElementApi = document.createElement('div');\n        divElementApi.textContent = 'api_path: ' + apiPath;\n        if (this.alignmentCubeService.showFullApiPath) {\n            divElementApi.textContent = 'api_path: ' + apiPath;\n        } else {\n            divElementApi.textContent = 'api_path: ' + apiPath.match(settings.regexApiSearch)[0].replace(settings.regexApiReplace, '');\n        }\n        const divElementRel = document.createElement('div');\n        divElementRel.textContent = 'relation_path:';\n        const ulElement = document.createElement('ul');\n        for (const path of relationPaths) {\n            const liElement = document.createElement('li');\n            if (this.alignmentCubeService.showFullRelationPath) {\n                liElement.textContent = path;\n            } else {\n                liElement.textContent = path.match(settings.regexRelSearch)[0].replace(settings.regexRelReplace, '');\n            }\n            ulElement.appendChild(liElement);\n        }\n        const divElementMetric = document.createElement('div');\n        divElementMetric.textContent = `${metricName}: ${metricValue}`;\n        divElementRel.appendChild(ulElement);\n\n        divElement.className = 'label';\n        divElement.style.marginTop = '-0.5em';\n        divElement.appendChild(divElementDataSetName);\n        divElement.appendChild(divElementApi);\n        divElement.appendChild(divElementRel);\n        divElement.appendChild(divElementMetric);\n        divElement.style.zIndex = '10';\n        const meshLabel = new CSS2DObject(divElement);\n\n        meshLabel.traverse((object1) => {\n            object1.visible = false;\n        });\n\n        return meshLabel;\n    }\n\n    /**\n     * Creates a cube for the given mapping and specified api/relation path.\n     * @param alignment\n     * @param mapping\n     * @param apiPath\n     * @param relPath\n     * @param zIndex\n     * @private\n     */\n    private createDataCube(alignment: Alignment, mapping: Mapping, apiPath: string, relPath: RelationPath, zIndex): Mesh {\n        const relationPath = relPath.paths;\n        const indexX = this.alignmentModel.apiLabels.indexOf(apiPath) + 1;\n        const indexY = this.alignmentModel.getRelationPathIndex(relationPath) + 1;\n\n        const met = mapping.metrics.find(metric => metric.name === this.alignmentCubeService.selectedMetric);\n        if (met === undefined) {\n            return;\n        }\n        // value range between 0 and 1\n        const size = Math.max(0, Math.min(met.value, 1));\n        const text = String(size);\n        let color: THREE.Color;\n        // color.setHex(Math.random() * 0xffffff);\n        // color = this.alignmentModel.getColorForMapping(mapping.apiPath, mapping.relationPaths.join());\n        color = this.alignmentModel.getScaleColorForMapping(apiPath, relationPath.join(), size);\n\n        if (size > 0) {\n            const cube = ThreeJsUtil.createCube(size, color, indexX, indexY, zIndex);\n            // make visible to raycaster witch works on layer 1\n            cube.layers.enable(settings.rayCasterWorkingLayer);\n\n            const label = this.makeDataCubeLabel(\n                alignment.name,\n                apiPath,\n                relationPath,\n                this.alignmentCubeService.selectedMetric,\n                size\n            );\n            label.position.set(0, 1.5, 0);\n            cube.add(label);\n            return cube;\n        }\n        return null;\n    }\n\n\n    /**\n     * Delete all cubes created by this\n     */\n    public disposeCubes(): void{\n        this.cubeTracker.dispose();\n    }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AlignmentCubeService} from '../../engine/alignment-cube.service';\nimport {FormBuilder, FormControl} from '@angular/forms';\nimport {ViewMode} from '../../../../models';\n\n@Component({\n    selector: 'app-ui-sidebar-left',\n    templateUrl: './ui-sidebar-left.component.html',\n    styleUrls: [ './ui-sidebar-left.component.scss']\n})\n\nexport class UiSidebarLeftComponent implements OnInit {\n\n    public ViewModeEnum = ViewMode;\n\n    visible = true;\n\n    selectedAlignmentControl: FormControl;\n    selectedApiControl: FormControl;\n    selectedRelationControl: FormControl;\n\n    public constructor(\n        private fb: FormBuilder,\n        public engineService: AlignmentCubeService) {\n    }\n\n    public ngOnInit(): void {\n        this.selectedAlignmentControl = new FormControl(0);\n        this.selectedApiControl = new FormControl(0);\n        this.selectedRelationControl = new FormControl(0);\n    }\n\n    public changeSelectedAlignment() {\n        this.engineService.setSelectedDataSet(this.selectedAlignmentControl.value);\n    }\n\n    public changeSelectedApi() {\n        this.engineService.setSelectedApiLabel(this.selectedApiControl.value);\n    }\n\n    public changeSelectedRelationPath() {\n        this.engineService.setSelectedRelationPathLabel(this.selectedRelationControl.value);\n    }\n}\n","<div class=\"card\" *ngIf=\"false\">\n  <div class=\"card-header\">\n    Datasets\n  </div>\n  <div class=\"card-body\">\n    <mat-checkbox [checked]=\"true\" *ngFor=\"let alignment of engineService.alignmentContainer.alignments, let i = index\">\n      {{alignment.name}}\n    </mat-checkbox>\n  </div>\n</div>\n\n<div class=\"card\" *ngIf=\"engineService.viewMode === ViewModeEnum.View2DAlignment\">\n  <div class=\"card-header\">\n    <div class=\"d-flex flex-row justify-content-between\">\n      <div class=\"card-title\">Datasets</div>\n      <button class=\"btn-close\" (click)=\"visible= !visible\"></button>\n    </div>\n  </div>\n  <div class=\"card-body\" *ngIf=\"visible\">\n    <mat-radio-group [formControl]=\"selectedAlignmentControl\" (change)=\"changeSelectedAlignment()\">\n      <div class=\"d-flex flex-column justify-content-between\">\n        <mat-radio-button *ngFor=\"let alignment of engineService.alignmentContainer.alignments, let i = index\" [value]=\"i\">\n          {{alignment.name}}\n        </mat-radio-button>\n      </div>\n    </mat-radio-group>\n  </div>\n</div>\n\n<div class=\"card\" *ngIf=\"engineService.viewMode === ViewModeEnum.View2DApi\">\n  <div class=\"card-header\">\n    <div class=\"d-flex flex-row justify-content-between\">\n      <div class=\"card-title\">Api Paths</div>\n      <button class=\"btn-close\" (click)=\"visible= !visible\"></button>\n    </div>\n  </div>\n  <div class=\"card-body\" *ngIf=\"visible\">\n    <mat-radio-group [formControl]=\"selectedApiControl\" (change)=\"changeSelectedApi()\">\n      <div class=\"d-flex flex-column justify-content-between\">\n        <mat-radio-button *ngFor=\"let label of engineService.alignmentContainer.apiLabels, let i = index\" [value]=\"i\">\n          {{label}}\n        </mat-radio-button>\n      </div>\n    </mat-radio-group>\n  </div>\n</div>\n\n<div class=\"card\" *ngIf=\"engineService.viewMode === ViewModeEnum.View2DRelation\">\n  <div class=\"card-header\">\n    <div class=\"d-flex flex-row justify-content-between\">\n      <div class=\"card-title\">Relation Paths</div>\n      <button class=\"btn-close\" (click)=\"visible= !visible\"></button>\n    </div>\n  </div>\n  <div class=\"card-body\" *ngIf=\"visible\">\n    <mat-radio-group [formControl]=\"selectedRelationControl\" (change)=\"changeSelectedRelationPath()\">\n      <div class=\"d-flex flex-column justify-content-between\">\n        <mat-radio-button class=\"p-1\" *ngFor=\"let relation of engineService.alignmentContainer.relationPathLabels, let i = index\" [value]=\"i\">\n          {{relation.join('->')}}\n        </mat-radio-button>\n      </div>\n    </mat-radio-group>\n  </div>\n</div>\n\n<div class=\"card\" *ngIf=\"false\">\n  <div class=\"card-header\">\n    <div class=\"d-flex flex-row justify-content-between\">\n      <div class=\"card-title\">Helpers</div>\n      <button class=\"btn-close\" (click)=\"visible= !visible\"></button>\n    </div>\n  </div>\n  <div class=\"card-body\" *ngIf=\"visible\">\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.resetOrbitControls()\">Reset OrbitControls</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.clearScene()\">Clear Scene</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.reloadScene()\">Reload Scene</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.removeAxisLabels()\">Clear Labels</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.setOrbitControlPosition()\">Reset Orbit Center</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.changeCamera()\">Switch Camera</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.toggleGridHelper()\">Toggle GridHelper</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.toggleAxisHelper()\">Toggle AxisHelper</button>\n    </div>\n    <div class=\"row m-1\">\n      <button class=\"btn btn-secondary\" (click)=\"engineService.toggleCameraHelper()\">Toggle CameraHelper</button>\n    </div>\n  </div>\n</div>\n","import {IAlignment} from '../../_interfaces';\nimport {Mapping} from './Mapping';\nimport {Metric} from './Metric';\nimport {RelationPath} from './RelationPath';\n\nexport class Alignment {\n    private readonly _mappings: Mapping[];\n    private _name: string;\n    private _metricsNames: Set<string>;\n\n    constructor() {\n        this._mappings = [];\n        this._metricsNames = new Set();\n    }\n\n    public addMapping(mapping: Mapping): void {\n        this._mappings.push(mapping);\n    }\n\n    public addAlignment(iAlginment: IAlignment) {\n        iAlginment.alignments.forEach(mapping => {\n            const newMetrics: Metric[] = [];\n            // tslint:disable-next-line:forin\n            for (const metricsKey in mapping.metrics) {\n                newMetrics.push(new Metric(metricsKey, mapping.metrics[metricsKey]));\n                this._metricsNames.add(metricsKey);\n            }\n            const relationPath: RelationPath[] = [];\n            mapping.relation_path.forEach(paths => {\n                relationPath.push(new RelationPath(paths.path));\n            });\n\n            const newMapping = new Mapping(mapping.api_path, relationPath, newMetrics);\n            this._mappings.push(newMapping);\n        });\n    }\n\n    public compareTo(a: Alignment): number{\n        return this.name.localeCompare(a.name);\n    }\n\n    get mappings(): Mapping[] {\n        return this._mappings;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    get metricsNames(): Set<string> {\n        return this._metricsNames;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-db-selecector',\n  templateUrl: './db-selecector.component.html',\n  styleUrls: ['./db-selecector.component.scss']\n})\nexport class DbSelecectorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>db-selecector works!</p>\n","export * from './ui-sidebar-left.component';\n","import * as THREE from 'three';\nimport {Color, LineSegments} from 'three';\n\nexport class ThreeJsUtil {\n    /**\n     * Creates a line between point1 and point2\n     * @param point1 - start point\n     * @param point2 - end point\n     * @param color - color of the line\n     */\n    public static createLine(point1: THREE.Vector3, point2: THREE.Vector3, color: number | Color = 0xb2b2b2): THREE.Line {\n        const points = [];\n        points.push(point1);\n        points.push(point2);\n        const col = new Color(color);\n\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\n        const material = new THREE.LineBasicMaterial({color: col});\n        return new THREE.Line(geometry, material);\n    }\n\n\n    /**\n     * Create a cube with no areas, only edges.\n     */\n    public static createOutlineCube(width: number, height: number, depth: number): LineSegments {\n        const g = new THREE.BoxGeometry(width, height, depth);\n        const edges = new THREE.EdgesGeometry(g);\n        const line = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({color: 0x11ffff}));\n        line.position.set(width / 2 + 0.5, height / 2 + 0.5, depth / 2 - 0.5);\n        return line;\n    }\n\n\n    /**\n     * Create a basic cube.\n     * @param scale\n     * @param color\n     * @param x - x position\n     * @param y - y position\n     * @param z - z position\n     */\n    public static createCube(scale: number, color: THREE.Color | Color | number, x: number, y: number, z: number): THREE.Mesh {\n        const geometry = new THREE.BoxGeometry(scale, scale, scale);\n        const material = new THREE.MeshStandardMaterial({color});\n        const cube = new THREE.Mesh(geometry, material);\n\n        cube.position.x = x;\n        cube.position.y = y;\n        cube.position.z = z;\n\n        return cube;\n    }\n\n    /**\n     * @param baseWidth\n     * @param content - label text\n     * @param style - background color\n     * @private\n     */\n    public static createHTMLCanvasLabel(baseWidth: number, fontSize: number, content: string, style: string = 'gray'): HTMLCanvasElement {\n        const borderSize = 2;\n        const ctx = document.createElement('canvas').getContext('2d');\n        const font = `${fontSize}px bold sans-serif`;\n        ctx.font = font;\n        // measure how long the content will be\n        const textWidth = ctx.measureText(content).width;\n\n        const doubleBorderSize = borderSize * 2;\n        const width = baseWidth + doubleBorderSize;\n        const height = fontSize + doubleBorderSize;\n        ctx.canvas.width = width;\n        ctx.canvas.height = height;\n\n        // need to set font again after resizing canvas\n        ctx.font = font;\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n\n        ctx.fillStyle = style;\n        ctx.fillRect(0, 0, width, height);\n\n        // scale to fit but don't stretch\n        const scaleFactor = Math.min(1, baseWidth / textWidth);\n        ctx.translate(width / 2, height / 2);\n        ctx.scale(scaleFactor, 1);\n        ctx.fillStyle = 'white';\n        ctx.fillText(content, 0, 0);\n\n        return ctx.canvas;\n    }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\n\n@Component({\n    selector: 'app-json-viewer',\n    templateUrl: './json-viewer.component.html',\n    styleUrls: ['./json-viewer.component.scss']\n})\nexport class JsonViewerComponent implements OnInit {\n\n    public editorOptionsConfig: JsonEditorOptions;\n    public editorOptionsReturnTemplate: JsonEditorOptions;\n\n    @Input() jsonData = '';\n\n    @Output() jsonChangeEvent = new EventEmitter<any>();\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.editorOptionsConfig = new JsonEditorOptions();\n        this.editorOptionsConfig.mode = 'tree';\n        this.editorOptionsConfig.modes = ['code', 'tree'];\n        this.editorOptionsConfig.enableTransform = false;\n\n        // @ts-ignore\n        // remove unneeded actions from context menu\n        this.editorOptionsConfig.onCreateMenu = (items, node) => {\n            items = items.filter((item) => {\n                return item.text === 'Remove';\n            });\n            return items;\n        };\n    }\n\n    saveChanges(e): void {\n        this.jsonData = e;\n        this.jsonChangeEvent.emit(e);\n    }\n}\n","<json-editor [options]=\"editorOptionsConfig\" [data]=\"jsonData\" (change)=\"saveChanges($event)\"></json-editor>\n","export * from './path-formatter.service';\n","import {Component, ElementRef, OnInit, Output, ViewChild, EventEmitter} from '@angular/core';\nimport {IAlignment} from '../../../_interfaces';\nimport Ajv from 'ajv';\nimport * as alignmentSchema from '../../../../assets/jsonSchema/alignment.schema.json';\n\n@Component({\n    selector: 'app-data-selector',\n    templateUrl: './alignment-selector.component.html',\n    styleUrls: ['./alignment-selector.component.scss']\n})\nexport class AlignmentSelectorComponent implements OnInit {\n    @Output() newAlignmentAdded = new EventEmitter<IAlignment>();\n\n    alignments: IAlignment[] = [];\n    private ajv;\n\n    @ViewChild('fileSelector', {static: false}) fileSelector: ElementRef;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.ajv = new Ajv({allErrors: true});\n        this.ajv.addSchema((alignmentSchema as any).default, 'mySchema');\n    }\n\n    readFiles(): void {\n        const fileSelector = this.fileSelector.nativeElement;\n        fileSelector.onchange = () => {\n            for (const file of fileSelector.files) {\n                const reader = new FileReader();\n                reader.onload = () => {\n                    try {\n                        const fileJson = JSON.parse(reader.result.toString());\n                        const check = this.parseAndLog(fileJson);\n                        if (!check) {\n                            let errorMessage = 'JSONSchemaError \\n';\n                            for (const error of this.ajv.errors) {\n                                errorMessage += error.message + '\\n';\n                            }\n                            alert(errorMessage);\n                        } else {\n                            const alignment: IAlignment = JSON.parse(reader.result.toString());\n                            this.alignments.push(alignment);\n                            this.addAlignment(alignment);\n                        }\n                    } catch (e) {\n                        alert(e);\n                    }\n                };\n                reader.readAsText(file);\n            }\n        };\n        fileSelector.click();\n    }\n\n    addAlignment(alignment: IAlignment): void {\n        this.newAlignmentAdded.emit(alignment);\n    }\n\n    private parseAndLog(json): boolean {\n        return this.ajv.validate('mySchema', json);\n    }\n}\n","<div class=\"card m-1\">\n  <div class=\"card-header\">\n    <div class=\"card-title\">\n      Choose the Data\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <input type=\"file\" #fileSelector  id=\"fileSelector\" class=\"form-control\" multiple=\"multiple\" style=\"display: none\" accept=\"application/json\" >\n    <button mat-raised-button color=\"primary\" (click)=\"readFiles()\">\n      <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">folder</mat-icon>\n      Add next file\n    </button>\n\n\n    <br>\n    <br>\n    <table class=\"table table-striped\">\n      <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">name</th>\n        <th scope=\"col\">system</th>\n        <th scope=\"col\">entries</th>\n      </tr>\n      </thead>\n      <tbody>\n        <tr  *ngFor=\"let file of alignments\">\n          <th scope=\"row\"></th>\n          <td>{{file.name}}</td>\n          <td>{{file.system}}</td>\n          <td>{{file.alignments.length}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n\n","import {IAlignment} from '../../_interfaces';\nimport {Alignment} from './Alignment';\nimport {Mapping} from './Mapping';\nimport {Color} from 'three';\nimport * as d3 from 'd3';\n\nexport class AlignmentContainer {\n\n    private _alignments: Alignment[];\n    private _apiLabels: string[];\n    private _relationPathLabels: string[][];\n    private _metricsNames: Set<string>;\n\n    private _colorMapping;\n    private _colorScaleMapping;\n\n    constructor() {\n        this._alignments = [];\n        this._relationPathLabels = [];\n        this._apiLabels = [];\n        this._metricsNames = new Set();\n        this._colorMapping = new Map();\n        this._colorScaleMapping = new Map();\n    }\n\n    public addAlignment(ac: IAlignment): boolean {\n        const alignment = new Alignment();\n        alignment.name = ac.name;\n\n        alignment.addAlignment(ac);\n\n        alignment.mappings.forEach((mapping: Mapping, index) => {\n            let newApi = false;\n            let newRelation = false;\n\n            mapping.apiPaths.forEach((apiPath) => {\n                mapping.relationPaths.forEach((rel) => {\n                    const relationPaths = rel.paths;\n                    const relationPathJoin = relationPaths.join();\n                    if (!this.apiLabels.some(s => s === apiPath)) {\n                        this.apiLabels.push(apiPath);\n                        newApi = true;\n                    }\n                    if (!this._relationPathLabels.some(s => this.arrayEquals(s, relationPaths))) {\n                        this._relationPathLabels.push(relationPaths);\n                        newRelation = true;\n                    }\n\n                    const random = Math.random();\n                    const color = d3.interpolateSinebow(random);\n                    const colorScale = d3.scaleSequential(t => d3.hsl(random * 360, t, 0.5).toString());\n                    // const colorScale = d3.scaleSequential(t => d3.hsl(random * 360, t, 0.5).toString());\n\n                    if (newApi || newRelation) {\n                        // obviously no mapping\n                        // const color = new Color(Math.random() * 0xFFFFFF);\n\n                        if (newApi) {\n                            const newRelationMap = new Map();\n                            newRelationMap.set(relationPaths.join(), new Color(color));\n                            this.colorMapping.set(apiPath, newRelationMap);\n\n                            const newRelationScaleMap = new Map();\n                            newRelationScaleMap.set(relationPaths.join(), colorScale);\n                            this.colorScaleMapping.set(apiPath, newRelationScaleMap);\n                        } else {\n                            const relationMap = this.colorMapping.get(apiPath);\n                            relationMap.set(relationPaths.join(), new Color(color));\n\n                            const relationScaleMap = this.colorScaleMapping.get(apiPath);\n                            relationScaleMap.set(relationPaths.join(), colorScale);\n                        }\n                    } else {\n                        // check if mapping exist\n                        const relationPathMap = this.colorMapping.get(apiPath);\n                        const relationPathScaleMap = this.colorScaleMapping.get(apiPath);\n                        if (relationPathMap !== undefined) {\n                            const mapColor = relationPathMap.get(relationPaths.join());\n                            const mapScaleColor = relationPathMap.get(relationPaths.join());\n                            if (mapColor === undefined) {\n                                relationPathMap.set(relationPaths.join(), new Color(color));\n                                relationPathScaleMap.set(relationPaths.join(), colorScale);\n                            }\n                        } else {\n                            const newRelationMap = new Map();\n                            const newRelationScaleMap = new Map();\n                            newRelationMap.set(relationPaths.join(), new Color(color));\n                            newRelationScaleMap.set(relationPaths.join(), colorScale);\n                            this.colorMapping.set(apiPath, newRelationMap);\n                            this.colorScaleMapping.set(apiPath, newRelationScaleMap);\n                        }\n                    }\n                });\n            });\n        });\n\n        // Add all metric keys\n        for (const elem of alignment.metricsNames) {\n            this._metricsNames.add(elem);\n        }\n\n        this.alignments.push(alignment);\n        return true;\n    }\n\n    public sortApiLabels(): void {\n        this.apiLabels.sort((a: string, b: string) => a.localeCompare(b));\n    }\n\n    public sortRelationLabels(): void {\n        this.relationPathLabels.sort((a, b) => a.join().localeCompare(b.join()));\n    }\n\n    public arrayEquals(a: Array<any>, b: Array<any>): boolean {\n        return Array.isArray(a) &&\n            Array.isArray(b) &&\n            a.length === b.length &&\n            a.every((val, index) => val === b[index]);\n    }\n\n    public getRelationPathIndex(searchPaths: string[]): number {\n        let searchIndex = -1;\n        this._relationPathLabels.some((relationPaths, index) => {\n            if (this.arrayEquals(relationPaths, searchPaths)) {\n                searchIndex = index;\n                return true;\n            }\n        });\n        return searchIndex;\n    }\n\n    public getColorForMapping(apiPath: string, relationPath: string): Color {\n        const relationMap = this.colorMapping.get(apiPath);\n        return relationMap.get(relationPath);\n    }\n\n    public getScaleColorForMapping(apiPath: string, relationPath: string, value: number): Color {\n        const relationMap = this.colorScaleMapping.get(apiPath);\n        const scale = relationMap.get(relationPath);\n        const color = new Color(scale(value));\n        return color;\n    }\n\n    public get alignments(): Alignment[] {\n        return this._alignments;\n    }\n\n    public get apiLabels(): string[] {\n        return this._apiLabels;\n    }\n\n    public get relationPathLabels(): string[][] {\n        return this._relationPathLabels;\n    }\n\n    get colorScaleMapping() {\n        return this._colorScaleMapping;\n    }\n\n    get colorMapping(): Map<string, Map<string, Color>> {\n        return this._colorMapping;\n    }\n\n    get metricsNames(): Set<string> {\n        return this._metricsNames;\n    }\n}\n","import {ChangeDetectorRef, Component, OnInit, Renderer2} from '@angular/core';\nimport {Utils} from '../../../_classes/Utils';\nimport {IApi, ILocalDatabase, ILocalDatabaseSchema, ILocalDatabaseShortInfo} from '../../../_interfaces';\nimport {IErrorMessage} from '../../../_interfaces/settings/IErrorMessage';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {GsbService} from '../../../_services/gsb.service';\nimport {MappingType} from '../../../models';\nimport * as _ from 'lodash';\nimport {MappingTableComponent} from './mapping-table/mapping-table.component';\nimport {LeaderLineAlignment, LeaderLineMapping} from '../../../_classes/gsb/lines';\n\n@Component({\n    selector: 'app-builder',\n    templateUrl: './builder.component.html',\n    styleUrls: ['./builder.component.scss']\n})\nexport class BuilderComponent implements OnInit {\n    private _currentLeaderLineAlignment: LeaderLineAlignment;\n\n    utils: Utils = new Utils();\n\n    showFullPathLocal = true;\n    showFullPathWeb = false;\n\n    currentLocalDatabase: ILocalDatabase;\n    currentWebDatabase: IApi;\n\n    currentLocalDatabaseSchema: ILocalDatabaseSchema;\n    errorMsg: IErrorMessage;\n\n    selectedEntity: number;\n\n    localEntityFiltered: any;\n    localSortByPathMethod = '';\n    localSortByValueMethod = '';\n    localEntity: any;\n    localEntityLoaded = false;\n    localPathSearchValue = '';\n    localValueSearchValue = '';\n\n    weblEntityFiltered: any;\n    webSortByPathMethod = '';\n    webSortByValueMethod = '';\n    webEntity: any;\n    weblEntityLoaded = false;\n    webPathSearchValue = '';\n    webValueSearchValue = '';\n\n    databases: Array<ILocalDatabaseShortInfo>;\n    apis: Array<IApi>;\n\n    localHashIds: Set<string> = new Set<string>();\n    localMappingEntries: Set<any> = new Set<any>();\n    webHashIds: Set<string> = new Set<string>();\n    webMappingEntries: Set<any> = new Set<any>();\n    startId: string;\n    endId: string;\n\n    constructor(private connection: BackendConnectionService,\n                private dialog: MatDialog,\n                private _fb: FormBuilder,\n                public cdr: ChangeDetectorRef,\n                private _dialog: MatDialog,\n                public gsbService: GsbService,\n                private renderer: Renderer2) {\n    }\n\n    ngOnInit(): void {\n        this.init();\n        this._currentLeaderLineAlignment = LeaderLineAlignment.build(this.gsbService.currentAlignment, this.renderer);\n    }\n\n    clickLocalMappingEntry(localEntry: any) {\n        const triggerID = localEntry.hash;\n        const element: HTMLElement = document.getElementById(triggerID);\n        if (this.localMappingEntries.has(localEntry)) {\n            this.localMappingEntries.delete(localEntry);\n            this.renderer.removeClass(element, 'clicked');\n        } else {\n            this.localMappingEntries.add(localEntry);\n            this.renderer.addClass(element, 'clicked');\n        }\n    }\n\n    clickWebMappingEntry(webEntry: any) {\n        const triggerID = webEntry.hash;\n        const element: HTMLElement = document.getElementById(triggerID);\n        if (this.webMappingEntries.has(webEntry)) {\n            this.webMappingEntries.delete(webEntry);\n            this.renderer.removeClass(element, 'clicked');\n        } else {\n            this.webMappingEntries.add(webEntry);\n            this.renderer.addClass(element, 'clicked');\n        }\n    }\n\n    addMapping(type: MappingType): void {\n        _.defer(() => {\n            if (this.localMappingEntries.size !== 0 && this.webMappingEntries.size !== 0) {\n\n                for (const entry of this.localMappingEntries) {\n                    const localElem: HTMLElement = document.getElementById(entry.hash);\n                    this.renderer.addClass(localElem, 'used');\n                    this.renderer.removeClass(localElem, 'clicked');\n                }\n                for (const entry of this.webMappingEntries) {\n                    const webElem: HTMLElement = document.getElementById(entry.hash);\n                    this.renderer.addClass(webElem, 'used');\n                    this.renderer.removeClass(webElem, 'clicked');\n                }\n\n                const mappingObj = {\n                    type,\n                    localEntries: Array.from(this.localMappingEntries),\n                    webEntries: Array.from(this.webMappingEntries)\n                };\n                this.gsbService.addMapping(mappingObj);\n                const newMapping: LeaderLineMapping = LeaderLineMapping.build(mappingObj);\n                this._currentLeaderLineAlignment.addMapping(newMapping, true);\n                this.localMappingEntries.clear();\n                this.webMappingEntries.clear();\n            }\n        });\n    }\n\n    updateLines(): void {\n        this._currentLeaderLineAlignment.updateLines();\n    }\n\n    // Sort Web\n\n    sortByPathWeb(): void {\n        switch (this.webSortByPathMethod) {\n            case 'alphaAsc':\n                this.sortByPathWebAsc();\n                break;\n            case 'alphaDesc':\n                this.sortByPathWebDesc();\n                break;\n            default:\n                this.weblEntityFiltered.dictionary = _.cloneDeep(this.gsbService.currentWebEntity.dictionary);\n        }\n        this.updateLines();\n    }\n\n    sortByPathWebAsc() {\n        this.weblEntityFiltered.dictionary.sort((a, b) => a.path.localeCompare(b.path));\n    }\n\n    sortByPathWebDesc() {\n        this.weblEntityFiltered.dictionary.sort((a, b) => b.path.localeCompare(a.path));\n    }\n\n    sortByValueWeb(): void {\n        switch (this.webSortByValueMethod) {\n            case 'alphaAsc':\n                this.sortByValueWebAsc();\n                break;\n            case 'alphaDesc':\n                this.sortByValueWebDesc();\n                break;\n            default:\n                // tslint:disable-next-line:max-line-length\n                this.localEntityFiltered.valueList[0].fullKnowledge = _.cloneDeep(this.gsbService.currentLocalEntity.valueList[0].fullKnowledge);\n        }\n        this.updateLines();\n    }\n\n    sortByValueWebAsc() {\n        this.weblEntityFiltered.dictionary.sort((a, b) => a.value.localeCompare(b.value));\n    }\n\n    sortByValueWebDesc() {\n        this.weblEntityFiltered.dictionary.sort((a, b) => b.value.localeCompare(a.value));\n    }\n\n    // Sort Local\n\n    sortByPathLocal(): void {\n        switch (this.localSortByPathMethod) {\n            case 'alphaAsc':\n                this.sortByPathLocalAsc();\n                break;\n            case 'alphaDesc':\n                this.sortByPathLocalDesc();\n                break;\n            default:\n                // tslint:disable-next-line:max-line-length\n                this.localEntityFiltered.valueList[0].fullKnowledge = _.cloneDeep(this.gsbService.currentLocalEntity.valueList[0].fullKnowledge);\n        }\n        this.updateLines();\n    }\n\n    sortByPathLocalAsc() {\n        this.localEntityFiltered.valueList[0].fullKnowledge.sort((a, b) => {\n            const ap = this.utils.formatLocalPath(a.path);\n            const bp = this.utils.formatLocalPath(b.path);\n            return ap.localeCompare(bp);\n        });\n    }\n\n    sortByPathLocalDesc() {\n        this.localEntityFiltered.valueList[0].fullKnowledge.sort((a, b) => {\n            const ap = this.utils.formatLocalPath(a.path);\n            const bp = this.utils.formatLocalPath(b.path);\n            return bp.localeCompare(ap);\n        });\n    }\n\n    sortByValueLocal(): void {\n        switch (this.localSortByValueMethod) {\n            case 'alphaAsc':\n                this.sortByValueLocalAsc();\n                break;\n            case 'alphaDesc':\n                this.sortByValueLocalDesc();\n                break;\n            default:\n                // tslint:disable-next-line:max-line-length\n                this.localEntityFiltered.valueList[0].fullKnowledge = _.cloneDeep(this.gsbService.currentLocalEntity.valueList[0].fullKnowledge);\n        }\n        this.updateLines();\n    }\n\n    sortByValueLocalAsc() {\n        this.localEntityFiltered.valueList[0].fullKnowledge.sort((b, a) => {\n            return a.value.localeCompare(b.value);\n        });\n    }\n\n    sortByValueLocalDesc() {\n        this.localEntityFiltered.valueList[0].fullKnowledge.sort((a, b) => {\n            return a.value.localeCompare(b.value);\n        });\n    }\n\n    changeLocalValueSearchValue(value: string, event): void {\n        event.stopPropagation();\n        this.localValueSearchValue = value;\n        this.updateLines();\n    }\n\n    changeWebValueSearchValue(value: string, event): void {\n        this.webValueSearchValue = value;\n        this.updateLines();\n        event.stopPropagation();\n    }\n\n    changeLocalPathSearchValue(value: string, event): void {\n        this.localPathSearchValue = value;\n        this.updateLines();\n        event.stopPropagation();\n    }\n\n    changeWebPathSearchValue(value: string, event): void {\n        event.stopPropagation();\n        this.webPathSearchValue = value;\n        this.updateLines();\n    }\n\n    searchMethod(a: string, b: string): boolean {\n        const al = a.toLowerCase();\n        const bl = b.toLowerCase();\n\n\n        return (al.includes(bl) || bl.includes(al));\n    }\n\n    init() {\n        this.webEntity = this.gsbService.currentWebEntity;\n        this.localEntity = this.gsbService.currentLocalEntity;\n        this.weblEntityFiltered = _.cloneDeep(this.webEntity);\n        this.localEntityFiltered = _.cloneDeep(this.localEntity);\n\n        this.currentLocalDatabase = this.gsbService.localDatabase;\n        this.currentWebDatabase = this.gsbService.webDatabase;\n    }\n\n    public markNewPaths(): void {\n        for (const localEntry of this.localEntity.valueList[0].fullKnowledge) {\n            if (!this.gsbService.localKnownPathStore.has(localEntry.path)) {\n                const localElem: HTMLElement = document.getElementById(localEntry.hash);\n                this.renderer.addClass(localElem, 'unknown');\n            }\n        }\n\n        for (const webEntry of this.webEntity.dictionary) {\n            if (!this.gsbService.webKnownPathStore.has(webEntry.path)) {\n                const webElem: HTMLElement = document.getElementById(webEntry.hash);\n                this.renderer.addClass(webElem, 'unknown');\n            }\n        }\n    }\n\n    openMappingTable(): void {\n        const dialogConfig = new MatDialogConfig();\n\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.minHeight = '70vh';\n        dialogConfig.maxWidth = '90vw';\n        dialogConfig.minWidth = '70vw';\n        const dialogRef = this._dialog.open(MappingTableComponent, dialogConfig).afterClosed().toPromise().then(() => {\n            this._currentLeaderLineAlignment.deleteLines();\n            this._currentLeaderLineAlignment = LeaderLineAlignment.build(this.gsbService.currentAlignment, this.renderer);\n            this.clearUsedClass();\n            this.markUsedElems();\n            this._currentLeaderLineAlignment.drawLines();\n            this.updateLines();\n        });\n    }\n\n    clearUsedClass(): void {\n\n        for (const localEntry of this.localEntity.valueList[0].fullKnowledge) {\n            const localElem: HTMLElement = document.getElementById(localEntry.hash);\n            this.renderer.removeClass(localElem, 'used');\n        }\n\n        for (const webEntry of this.webEntity.dictionary) {\n            const webElem: HTMLElement = document.getElementById(webEntry.hash);\n            this.renderer.removeClass(webElem, 'used');\n        }\n    }\n\n    markUsedElems(): void {\n        for (const mapping of this.gsbService.currentMappings) {\n            for (const localEntry of mapping.localEntries) {\n                const localElem: HTMLElement = document.getElementById(localEntry.hash);\n                this.renderer.addClass(localElem, 'used');\n            }\n\n            for (const webEntry of mapping.webEntries) {\n                const webElem: HTMLElement = document.getElementById(webEntry.hash);\n                this.renderer.addClass(webElem, 'used');\n            }\n        }\n    }\n\n    public hideLines(): void {\n        console.log('hide lines');\n        this._currentLeaderLineAlignment.hideLines();\n    }\n\n    public showLines(): void {\n        this._currentLeaderLineAlignment.showLines();\n    }\n\n    selectionChange(index): void {\n        if (index === 1) {\n            Utils.delay(1000).then(() => {\n                this._currentLeaderLineAlignment.showLines();\n            });\n        } else {\n            this._currentLeaderLineAlignment.hideLines();\n        }\n    }\n\n    entityChange(i): void {\n        this.webMappingEntries.clear();\n        this.localMappingEntries.clear();\n\n        this._currentLeaderLineAlignment.deleteLines();\n        this.gsbService.changeCurrentAlignment(i);\n        this.init();\n        this.cdr.detectChanges();\n        Utils.delay(1000).then(() => {\n            console.log('redraw now');\n            this._currentLeaderLineAlignment = LeaderLineAlignment.build(this.gsbService.currentAlignment, this.renderer);\n            console.log(this._currentLeaderLineAlignment.mappings);\n            this._currentLeaderLineAlignment.drawLines();\n            this.clearUsedClass();\n            this.markUsedElems();\n            this.markNewPaths();\n        });\n        console.log('change finished');\n    }\n\n    clearLines(): void {\n        this._currentLeaderLineAlignment.deleteLines();\n    }\n}\n","<div class=\"builder-container\">\n    <div class=\"builder-header\">\n        <div class=\"header-side\">\n            <div class=\"content-header\">\n                <h2>Local DB: {{currentLocalDatabase.label}}</h2>\n                <mat-slide-toggle color=\"primary\" [(ngModel)]=\"gsbService.showFullLocalPath\">\n                    show full path\n                </mat-slide-toggle>\n            </div>\n            <div class=\"content-header\">\n                <mat-form-field class=\"example-form-field searchbar\" appearance=\"fill\">\n                    <mat-label>Search Path</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"localPathSearchValue\"\n                           (ngModelChange)=\"updateLines()\">\n                    <button mat-button *ngIf=\"localPathSearchValue\" matSuffix mat-icon-button\n                            aria-label=\"Clear\"\n                            (click)=\"changeLocalPathSearchValue('', $event)\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <button matSuffix mat-icon-button>\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Sort Path</mat-label>\n                    <mat-select (selectionChange)=\"sortByPathLocal()\" [(ngModel)]=\"localSortByPathMethod\">\n                        <mat-option value=\"\">No Sort</mat-option>\n                        <mat-option value=\"alphaAsc\">Alphabetical (Asc)</mat-option>\n                        <mat-option value=\"alphaDesc\">Alphabetical (Desc)\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"content-header\">\n                <mat-form-field class=\"example-form-field searchbar\" appearance=\"fill\">\n                    <mat-label>Search Value</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"localValueSearchValue\"\n                           (ngModelChange)=\"updateLines()\">\n                    <button mat-button *ngIf=\"localValueSearchValue\" matSuffix mat-icon-button\n                            aria-label=\"Clear\"\n                            (click)=\"changeLocalValueSearchValue('', $event)\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <button matSuffix mat-icon-button>\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Sort Value</mat-label>\n                    <mat-select (selectionChange)=\"sortByValueLocal()\" [(ngModel)]=\"localSortByValueMethod\">\n                        <mat-option value=\"\">No Sort</mat-option>\n                        <mat-option value=\"alphaAsc\">Alphabetical (Asc)</mat-option>\n                        <mat-option value=\"alphaDesc\">Alphabetical (Desc)\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"filler-div\">\n            <mat-form-field color=\"primary\" >\n                <mat-label>Entity</mat-label>\n                <mat-select [value]=\"gsbService.currentIndex\" (selectionChange)=\"entityChange($event.value)\">\n                    <mat-option *ngFor=\"let alignment of gsbService.entityAlignments; let i = index\"\n                                [value]=\"i\">\n                        {{alignment.localEntity.valueList[0].subject}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <button mat-raised-button color=\"primary\" (click)=\"openMappingTable()\">Show Mappings</button>\n<!--            <button mat-raised-button color=\"primary\" (click)=\"markNewPaths()\">Show New Paths</button>-->\n\n            <div class=\"controls\">\n                <p>Add new Mapping</p>\n                <div class=\"controls-mapping\">\n                    <button mat-raised-button color=\"primary\" (click)=\"addMapping(1)\">\n                        <mat-icon>west</mat-icon>\n                    </button>\n                    <button mat-raised-button color=\"primary\" (click)=\"addMapping(2)\">\n                        <mat-icon>sync_alt</mat-icon>\n                    </button>\n                    <button mat-raised-button color=\"primary\" (click)=\"addMapping(0)\">\n                        <mat-icon>east</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"header-side\">\n            <div class=\"content-header\">\n                <h2>Web DB: {{currentWebDatabase.label}} ({{currentWebDatabase.name}})</h2>\n            </div>\n            <!--                        <button mat-raised-button (click)=\"sortWebAsc()\">sort Asc</button>-->\n            <!--                        <button mat-raised-button (click)=\"sortWebDesc()\">sort Desc</button>-->\n            <div class=\"content-header\">\n                <mat-form-field class=\"example-form-field searchbar\" appearance=\"fill\">\n                    <mat-label>Search Path</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"webPathSearchValue\"\n                           (ngModelChange)=\"updateLines()\">\n                    <button mat-button *ngIf=\"webPathSearchValue\" matSuffix mat-icon-button\n                            aria-label=\"Clear\"\n                            (click)=\"webPathSearchValue=''; updateLines()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <button matSuffix mat-icon-button>\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"center\">\n                    <mat-label>Sort Path</mat-label>\n                    <mat-select (selectionChange)=\"sortByPathWeb()\" [(ngModel)]=\"webSortByPathMethod\">\n                        <mat-option value=\"\">No Sort</mat-option>\n                        <mat-option value=\"alphaAsc\">Alphabetical (Asc)</mat-option>\n                        <mat-option value=\"alphaDesc\">Alphabetical (Desc)\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"content-header\">\n                <mat-form-field class=\"example-form-field searchbar\" appearance=\"fill\">\n                    <mat-label>Search Value</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"webValueSearchValue\"\n                           (ngModelChange)=\"updateLines()\">\n                    <button mat-button *ngIf=\"webValueSearchValue\" matSuffix mat-icon-button\n                            aria-label=\"Clear\"\n                            (click)=\"webValueSearchValue=''; updateLines()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <button matSuffix mat-icon-button>\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Sort Values</mat-label>\n                    <mat-select (selectionChange)=\"sortByValueWeb()\" [(ngModel)]=\"webSortByValueMethod\">\n                        <mat-option value=\"\">No Sort</mat-option>\n                        <mat-option value=\"alphaAsc\">Alphabetical (Asc)</mat-option>\n                        <mat-option value=\"alphaDesc\">Alphabetical (Desc)\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n    </div>\n    <div class=\"builder-body\">\n        <div class=\"entries-wrapper\">\n            <div *ngIf=\"!gsbService.finishedLoadingLocalEntity\">\n                <mat-spinner></mat-spinner>\n                ... loading\n            </div>\n            <div *ngIf=\"localEntity\">\n                <div *ngFor=\"let entry of localEntityFiltered.valueList[0].fullKnowledge\">\n                    <div class=\"entry\" [id]=\"entry.hash\" (click)=\"clickLocalMappingEntry(entry)\"\n                         [ngClass]=\"{\n                            'hide': !searchMethod(entry.path, this.localPathSearchValue) || !searchMethod(entry.value, this.localValueSearchValue),\n                            'unknown': !this.gsbService.localKnownPathStore.has(entry.path)\n                            }\">\n                        <div class=\"path\">\n                            <button mat-button aria-label=\"Clear\"\n                                    (click)=\"changeWebPathSearchValue(utils.formatLocalPath(entry.path), $event)\">\n                                <mat-icon>search</mat-icon>\n                            </button>\n                            <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry.path : utils.formatLocalPath(entry.path)) | highlight: localPathSearchValue\"></p>\n                        </div>\n\n                        <div class=\"value\">\n                            <p [innerHtml]=\"entry.value | highlight: localValueSearchValue\"></p>\n                            <button mat-button aria-label=\"Clear\"\n                                    (click)=\"changeWebValueSearchValue(entry.value, $event)\">\n                                <mat-icon>search</mat-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"entries-wrapper\">\n            <div *ngIf=\"!gsbService.finishedLoadingWebEntity\">\n                <mat-spinner></mat-spinner>\n                ... loading\n            </div>\n            <div *ngIf=\"webEntity\">\n                <div *ngFor=\"let entry of weblEntityFiltered.dictionary\">\n                    <div class=\"entry\" [id]=\"entry.hash\" (click)=\"clickWebMappingEntry(entry)\"\n                         [ngClass]=\"{'hide': !searchMethod(entry.path, this.webPathSearchValue) || !searchMethod(entry.value, this.webValueSearchValue),\n                         'unknown': !this.gsbService.webKnownPathStore.has(entry.path)\n                         }\">\n                        <div class=\"path\">\n                            <button mat-button aria-label=\"Clear\"\n                                    (click)=\"changeLocalPathSearchValue(entry.path, $event)\">\n                                <mat-icon>search</mat-icon>\n                            </button>\n                            <p [innerHtml]=\"entry.path | highlight: webPathSearchValue\"></p>\n                        </div>\n                        <div class=\"value\">\n                            <p [innerHtml]=\"entry.value | highlight: webValueSearchValue\"></p>\n                            <button mat-button aria-label=\"Clear\"\n                                    (click)=\"changeLocalValueSearchValue(entry.value, $event)\">\n                                <mat-icon>search</mat-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {IApi, ILocalDatabaseShortInfo} from '../../../_interfaces';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\nimport {log} from 'util';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-db-information',\n    templateUrl: './db-information.component.html',\n    styleUrls: ['./db-information.component.scss']\n})\nexport class DbInformationComponent implements OnInit {\n\n    dbConfiguration: ILocalDatabaseShortInfo;\n\n    public editorOptionsConfig: JsonEditorOptions;\n\n    @ViewChild(JsonEditorComponent)\n    editor: JsonEditorComponent;\n\n    constructor(\n        private connection: BackendConnectionService,\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_DIALOG_DATA) public data: ILocalDatabaseShortInfo) {\n        this.dbConfiguration = data;\n    }\n\n    ngOnInit(): void {\n        this.editorOptionsConfig = new JsonEditorOptions();\n        this.editorOptionsConfig.mode = 'code';\n        this.editorOptionsConfig.modes = ['code'];\n\n        this.connection.getLocalDatabaseData(this.data.label).then((res: ILocalDatabaseShortInfo) => {\n            this.dbConfiguration.label = res.label;\n            this.dbConfiguration.identifierMap = res.identifierMap;\n            this.dbConfiguration.path = res.path;\n        });\n    }\n\n\n    onJSONChange(): void {\n        this.dbConfiguration = this.editor.get() as any;\n    }\n\n    openSnackBar(message: string) {\n        this._snackBar.open(message, '', {duration: 2000});\n    }\n\n    save(): void {\n        const dbConfigurationChanged = this.editor.get();\n        this.connection.updateDatabase(this.dbConfiguration, dbConfigurationChanged).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to save changes');\n            }\n        );\n    }\n\n    delete(): void {\n        this.connection.deleteDatabase(this.dbConfiguration.label).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to delete');\n            }\n        );\n    }\n}\n","<p>\n    <b>Database:</b> {{dbConfiguration.label}}\n</p>\n<mat-tab-group class=\"group-container\" (selectedIndexChange)=\"onJSONChange()\">\n    <!--    Temporarily deactivated     -->\n    <mat-tab *ngIf=\"false\" label=\"Configuration Form\">\n        <div class=\"form-container\">\n            <mat-form-field>\n                <mat-label>label</mat-label>\n                <input matInput [(ngModel)]=\"dbConfiguration.label\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>identifierMap</mat-label>\n                <input matInput [(ngModel)]=\"dbConfiguration.identifierMap\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>path</mat-label>\n                <input matInput [(ngModel)]=\"dbConfiguration.path\">\n            </mat-form-field>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Configuration File\">\n        <ng-container *ngIf=\"dbConfiguration\">\n            <json-editor [options]=\"editorOptionsConfig\" [data]=\"dbConfiguration\"></json-editor>\n        </ng-container>\n    </mat-tab>\n</mat-tab-group>\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"\" (click)=\"save()\">Save</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"\" (click)=\"delete()\">Delete</button>\n</mat-dialog-actions>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AlignmentCubeService} from '../../engine/alignment-cube.service';\nimport {ViewMode} from '../../../../models';\n\n@Component({\n  selector: 'app-ui-infobar-top',\n  templateUrl: './ui-infobar-top.component.html'\n})\nexport class UiInfobarTopComponent implements OnInit {\n\n  // @Input() engineService: AlignmentCubeService;\n\n  public constructor(public engineService: AlignmentCubeService) {\n  }\n\n  public ngOnInit(): void {\n  }\n\n  changeViewMode(): void{\n    switch (this.engineService.viewMode) {\n      case ViewMode.View2DAlignment:\n        this.engineService.changeViewMode(ViewMode.View2DApi);\n        break;\n\n      case ViewMode.View2DApi:\n        this.engineService.changeViewMode(ViewMode.View2DRelation);\n        break;\n\n      case ViewMode.View2DRelation:\n        this.engineService.changeViewMode(ViewMode.View3D);\n        break;\n\n      case ViewMode.View3D:\n        this.engineService.changeViewMode(ViewMode.View2DAlignment);\n        break;\n\n    }\n  }\n\n}\n","<button mat-raised-button color=\"primary\" (click)=\"changeViewMode()\" >\n    <mat-icon>cameraswitch</mat-icon> {{engineService.viewMode}}\n</button>\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {IApi, IWebserviceDetails} from '../../../_interfaces';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\n\n@Component({\n    selector: 'app-api-information',\n    templateUrl: './api-information.component.html',\n    styleUrls: ['./api-information.component.scss']\n})\nexport class ApiInformationComponent implements OnInit {\n\n    apiConfiguration: IApi;\n\n    public editorOptionsConfig: JsonEditorOptions;\n\n    @ViewChild(JsonEditorComponent)\n    editor: JsonEditorComponent;\n\n    constructor(\n        private connection: BackendConnectionService,\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_DIALOG_DATA) public data: IApi) {\n        this.apiConfiguration = data;\n    }\n\n    openSnackBar(message: string) {\n        this._snackBar.open(message, '', {duration: 2000});\n    }\n\n    ngOnInit(): void {\n        this.editorOptionsConfig = new JsonEditorOptions();\n        this.editorOptionsConfig.mode = 'code';\n        this.editorOptionsConfig.modes = ['code'];\n    }\n\n    save(): void {\n        const apiConfigurationChanged = this.editor.get();\n        this.connection.updateApi(this.apiConfiguration, apiConfigurationChanged).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to save changes');\n            }\n        );\n    }\n\n    onJSONChange(): void {\n        this.apiConfiguration = this.editor.get() as any;\n    }\n\n    delete(): void {\n        this.connection.deleteApi(this.apiConfiguration.label).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to delete');\n            }\n        );\n    }\n\n}\n","<p>\n    <b>Api:</b> {{apiConfiguration.label}}\n</p>\n<mat-tab-group class=\"group-container\" (selectedIndexChange)=\"onJSONChange()\">\n    <!--    Temporarily deactivated     -->\n    <mat-tab *ngIf=\"false\" label=\"Configuration Form\">\n        <div class=\"form-container\">\n            <mat-form-field>\n                <mat-label>name</mat-label>\n                <input matInput [(ngModel)]=\"apiConfiguration.name\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>format</mat-label>\n                <input matInput [(ngModel)]=\"apiConfiguration.format\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>label</mat-label>\n                <input matInput [(ngModel)]=\"apiConfiguration.label\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>url</mat-label>\n                <input matInput [(ngModel)]=\"apiConfiguration.url\">\n            </mat-form-field>\n            <p>Parameter</p>\n            <ng-container *ngFor=\"let parameter of apiConfiguration.parameters\">\n                <mat-form-field>\n                    <mat-label>name</mat-label>\n                    <input matInput [(ngModel)]=\"parameter.name\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>filter</mat-label>\n                    <input matInput [(ngModel)]=\"parameter.filter\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>type</mat-label>\n                    <input matInput [(ngModel)]=\"parameter.type\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>status</mat-label>\n                    <input matInput [(ngModel)]=\"parameter.status\">\n                </mat-form-field>\n            </ng-container>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Configuration File\">\n        <ng-container *ngIf=\"apiConfiguration\">\n            <json-editor [options]=\"editorOptionsConfig\" [data]=\"apiConfiguration\"></json-editor>\n        </ng-container>\n    </mat-tab>\n</mat-tab-group>\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"\" (click)=\"save()\">Save</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"\" (click)=\"delete()\">Delete</button>\n</mat-dialog-actions>\n","import {Injectable} from '@angular/core';\nimport {settings} from '../../assets/settings';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PathFormatterService {\n\n    private apiPathFull = true;\n    private apiWithWildcard = false;\n    private relationPathFull = true;\n\n    constructor() {\n    }\n\n    public formatApiPath(path: string): string {\n        const context: string[] = path.match(settings.regexApiSearch);\n        if (context == null){\n            return path;\n        }\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexApiReplace, '');\n        }\n        // remove wildcards\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexApiReplaceWildcard, '');\n        }\n        return context.join();\n    }\n\n    public formatRelationPath(path: string): string {\n        const context: string[] = path.match(settings.regexRelSearch);\n        if (context == null){\n            return path;\n        }\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexRelReplace, '');\n        }\n        return context.join();\n    }\n\n    public joinRelPaths(paths: string[]): string {\n        return paths.join(settings.joinSymbol);\n    }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {IMappingSuggestion, ISuggestionEntry} from '../../../../_interfaces/gsb/suggestion';\nimport {GsbService} from '../../../../_services/gsb.service';\n\n@Component({\n  selector: 'app-mapping-editor',\n  templateUrl: './mapping-editor.component.html',\n  styleUrls: ['./mapping-editor.component.scss']\n})\nexport class MappingEditorComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA, ) public data: any, public gsbService: GsbService) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteSuggestion() {\n    this.gsbService.suggestionContainer.suggestions.splice(this.data.index, 1);\n  }\n}\n","<app-mapping-suggestion [suggestionMapping]=\"data.entry\"></app-mapping-suggestion>\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"\">Close</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"\" (click)=\"deleteSuggestion()\">Delete</button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-data-cube-page',\n  templateUrl: './data-cube-page.component.html',\n  styleUrls: ['./data-cube-page.component.scss']\n})\nexport class DataCubePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-alignment-cube></app-alignment-cube>\n","import {ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Utils} from '../../../_classes/Utils';\nimport {GsbService} from '../../../_services/gsb.service';\nimport {IAlignment} from '../../../_interfaces';\nimport {IFinalAlignment, IMappingSuggestion} from '../../../_interfaces/gsb/suggestion';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {MappingTableComponent} from '../builder/mapping-table/mapping-table.component';\nimport {LeaderLineAlignment} from '../../../_classes/gsb/lines';\nimport {MappingEditorComponent} from '../mapping-suggestion-tool/mapping-editor/mapping-editor.component';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-final-alignmnet',\n    templateUrl: './final-alignment.component.html',\n    styleUrls: ['./final-alignment.component.scss']\n})\nexport class FinalAlignmentComponent implements OnInit {\n\n    utils: Utils = new Utils();\n\n    @Input() finalAlignment: IFinalAlignment;\n\n    constructor(public gsbService: GsbService, public cdr: ChangeDetectorRef, private _dialog: MatDialog, private _snackBar: MatSnackBar) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    openMappingEditor(entry: IMappingSuggestion, index: number): void {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data = {entry, index};\n\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.minHeight = '70vh';\n        dialogConfig.maxWidth = '90vw';\n        dialogConfig.minWidth = '70vw';\n        const dialogRef = this._dialog.open(MappingEditorComponent, dialogConfig);\n    }\n\n    saveFinalAlignment(): void {\n        this.gsbService.generateFinalAlignment();\n        this.gsbService.saveFinalAlignment().then((resp) => {\n                this._snackBar.open('Saved!!!', 'Close');\n            },\n            (err) => {\n                this._snackBar.open('Failed to save!!!', 'Close');\n            }\n        );\n    }\n\n}\n","<h1>Final Alignment</h1>\n<div class=\"stepper\">\n    <button mat-raised-button color=\"primary\" (click)=\"saveFinalAlignment()\">Save</button>\n</div>\n\n<div class=\"mapping-wrapper\" *ngIf=\"gsbService.suggestionContainer\">\n    <ng-container *ngFor=\"let suggestionMapping of gsbService.suggestionContainer.suggestions; let i=index\">\n\n        <div class=\"mapping\" *ngIf=\"suggestionMapping.general.selected\">\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of suggestionMapping.general.localEntries\">\n                    <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n                </div>\n            </div>\n            <div class=\"divider\">\n                <div class=\"relationType\">\n                    <mat-icon *ngIf=\"suggestionMapping.general.type === 0\">east</mat-icon>\n                    <mat-icon *ngIf=\"suggestionMapping.general.type === 1\">west</mat-icon>\n                    <mat-icon *ngIf=\"suggestionMapping.general.type === 2\">sync_alt</mat-icon>\n                </div>\n            </div>\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of suggestionMapping.general.webEntries\">\n                    <p>{{entry}}</p>\n                </div>\n            </div>\n            <div class=\"edit\">\n                <button mat-button aria-label=\"edit\" (click)=\"openMappingEditor(suggestionMapping, i)\">\n                    <mat-icon>edit</mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <ng-container *ngFor=\"let suggestionEntry of suggestionMapping.suggestions\">\n            <div class=\"mapping\" *ngIf=\"suggestionEntry.selected\">\n                <div class=\"relation-container\">\n                    <div class=\"entry\" *ngFor=\"let entry of suggestionEntry.template.localEntries\">\n                        <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n                    </div>\n                </div>\n                <div class=\"divider\">\n                    <div class=\"relationType\">\n                        <mat-icon *ngIf=\"suggestionEntry.template.type === 0\">east</mat-icon>\n                        <mat-icon *ngIf=\"suggestionEntry.template.type === 1\">west</mat-icon>\n                        <mat-icon *ngIf=\"suggestionEntry.template.type === 2\">sync_alt</mat-icon>\n                    </div>\n                </div>\n                <div class=\"relation-container\">\n                    <div class=\"entry\" *ngFor=\"let entry of suggestionEntry.template.webEntries\">\n                        <p>{{entry}}</p>\n                    </div>\n                </div>\n                <div class=\"edit\">\n                    <button mat-button aria-label=\"edit\" (click)=\"openMappingEditor(suggestionMapping, i)\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n    </ng-container>\n</div>\n<div class=\"stepper\">\n    <div></div>\n    <button mat-raised-button color=\"primary\" (click)=\"saveFinalAlignment()\">Save</button>\n    <div></div>\n</div>\n\n\n<!--<div class=\"mapping-wrapper\" *ngIf=\"gsbService.finishedFinalAlignment\">\n    <div class=\"mapping\" *ngFor=\"let mapping of gsbService.finalAlignment.mappings\">\n        <div class=\"relation-container\">\n            <div class=\"entry\" *ngFor=\"let entry of mapping.localEntries\">\n                <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n            </div>\n        </div>\n        <div class=\"divider\">\n            <div class=\"relationType\">\n                <mat-icon *ngIf=\"mapping.type === 0\">east</mat-icon>\n                <mat-icon *ngIf=\"mapping.type === 1\">west</mat-icon>\n                <mat-icon *ngIf=\"mapping.type === 2\">sync_alt</mat-icon>\n            </div>\n            <div class=\"action\">\n\n            </div>\n        </div>\n        <div class=\"relation-container\">\n            <div class=\"entry\" *ngFor=\"let entry of mapping.webEntries\">\n                <p>{{entry}}</p>\n            </div>\n        </div>\n    </div>\n</div>-->\n","export * from './alignment-selector.component';\n","export * from './navbar.component';\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {ISuggestionEntry} from '../../../../_interfaces/gsb/suggestion';\nimport {GsbService} from '../../../../_services/gsb.service';\nimport {Utils} from '../../../../_classes/Utils';\n\n@Component({\n  selector: 'app-mapping-view',\n  templateUrl: './mapping-view.component.html',\n  styleUrls: ['./mapping-view.component.scss']\n})\nexport class MappingViewComponent implements OnInit {\n  public utils = new Utils();\n\n  constructor(@Inject(MAT_DIALOG_DATA, ) public data: ISuggestionEntry, public gsbService: GsbService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"suggestions-wrapper\">\n    <h1>Template</h1>\n    <div class=\"mapping-wrapper\">\n        <div class=\"mapping\">\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of data.template.localEntries\">\n                    <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n                </div>\n            </div>\n            <div class=\"divider\">\n                <div class=\"relationType\">\n                    <mat-icon *ngIf=\"data.template.type === 0\">east</mat-icon>\n                    <mat-icon *ngIf=\"data.template.type === 1\">west</mat-icon>\n                    <mat-icon *ngIf=\"data.template.type === 2\">sync_alt</mat-icon>\n                </div>\n            </div>\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of data.template.webEntries\">\n                    <p>{{entry}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <br>\n    <h1>Values</h1>\n    <div class=\"mapping-wrapper\" *ngFor=\"let mapping of data.mappings; let index=index\">\n        <div class=\"mapping\">\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of mapping.localEntries\">\n                    <p [innerHtml]=\"entry.value\"></p>\n                </div>\n            </div>\n            <div class=\"divider\">\n                <div class=\"relationType\">\n                    <mat-icon *ngIf=\"mapping.type === 0\">east</mat-icon>\n                    <mat-icon *ngIf=\"mapping.type === 1\">west</mat-icon>\n                    <mat-icon *ngIf=\"mapping.type === 2\">sync_alt</mat-icon>\n                </div>\n            </div>\n            <div class=\"relation-container\">\n                <div class=\"entry\" *ngFor=\"let entry of mapping.webEntries\">\n                    <p>{{entry.value}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","export * from './SceneLoader';\nexport * from './PickHelper';\nexport * from './ResourceTracker';\nexport * from './ThreeJsUtil';\n","import {Injectable} from '@angular/core';\nimport {BackendConnectionService} from './backend-connection.service';\nimport {GSBAlignment, GSBMapping} from '../_interfaces/gsb/alignment';\nimport {IApi, ILocalDatabase} from '../_interfaces';\nimport * as testWebEntity from '../../assets/data/testEntities/apiEntity.json';\nimport * as testLocalEntity from '../../assets/data/testEntities/localEntity.json';\nimport * as testLocalDB from '../../assets/data/testEntities/localDb.json';\nimport * as testWebDB from '../../assets/data/testEntities/webDb.json';\nimport * as testSuggestion from '../../assets/data/testEntities/exampleSuggestion.json';\nimport {Utils} from '../_classes/Utils';\nimport {IFinalAlignment, ISuggestionContainer} from '../_interfaces/gsb/suggestion';\nimport {error} from 'protractor';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GsbService {\n\n    private _gsbInstance;\n    private _finalAlignment: IFinalAlignment;\n    private _suggestionContainer: ISuggestionContainer;\n\n    private _entityAlignments: GSBAlignment[] = [];\n    private _currentAlignment: GSBAlignment;\n    private _currentIndex: number;\n\n    private _localDatabase: ILocalDatabase;\n    private _webDatabase: IApi;\n    private _selectedLocalIdentifier: string;\n    private _selectedInputType: string;\n\n    private _regexApiStore = [];\n    private _localKnownPathStore: Set<string>;\n    private _webKnownPathStore: Set<string>;\n\n    private _currentLocalEntity;\n    private _currentWebEntity;\n\n    private utils: Utils = new Utils();\n\n    public showFullLocalPath = false;\n    public loadingTries = 1;\n    public maxLoadingTries = 50;\n\n    public finishedLoadingLocalEntity = false;\n    public finishedLoadingWebEntity = false;\n    private finishedNewEntity = false;\n    public suggestionsLoaded = false;\n    public finishedFinalAlignment = false;\n\n    public loadingNextEntityFailed = false;\n\n    constructor(private connection: BackendConnectionService) {\n    }\n\n    public startNewAlignment(localDb: ILocalDatabase, webDb: IApi, identifier: string, inputType: string): void {\n        this._entityAlignments = [];\n        this._localDatabase = localDb;\n        this._webDatabase = webDb;\n        this._selectedLocalIdentifier = identifier;\n        this._selectedInputType = inputType;\n        this._localKnownPathStore = new Set();\n        this._webKnownPathStore = new Set();\n        this.nextEntity().then(r => this.saveLocalKnownPaths());\n    }\n\n    public removeMapping(mapping: GSBMapping): void {\n        const i = this.currentMappings.indexOf(mapping);\n        this.currentMappings.splice(i, 1);\n    }\n\n    public addMapping(mapping: GSBMapping): void {\n        this.currentMappings.push(mapping);\n    }\n\n    public changeCurrentAlignment(i: number): void {\n        if (i < 0 && i >= this.entityAlignments.length) {\n            return;\n        }\n        this._currentAlignment = this.entityAlignments[i];\n        this._currentLocalEntity = this._currentAlignment.localEntity;\n        this._currentWebEntity = this._currentAlignment.webEntity;\n        this._currentIndex = i;\n    }\n\n    public async nextEntity(): Promise<void> {\n        this.saveLocalKnownPaths();\n        this.finishedNewEntity = false;\n        this.finishedLoadingLocalEntity = false;\n        this.finishedLoadingWebEntity = false;\n        this.loadingNextEntityFailed = false;\n        // if (this._currentAlignment !== undefined) {\n        //     this._entityAlignments.push(this._currentAlignment);\n        // }\n        this.loadingTries = 1;\n        const list = [];\n        while (this.loadingTries <= this.maxLoadingTries && !this.finishedLoadingWebEntity) {\n            await this.loadLocalEntity();\n            list.push(this._currentLocalEntity.valueList[0].subject);\n            await this.loadWebEntity(this._currentLocalEntity.valueList[0].subject);\n            this.loadingTries++;\n        }\n        if (this.loadingTries > this.maxLoadingTries) {\n            this.loadingNextEntityFailed = true;\n            console.log([...new Set(list)]);\n            return;\n        }\n\n        this._currentAlignment = {mappings: [], localEntity: this.currentLocalEntity, webEntity: this.currentWebEntity};\n        this._entityAlignments.push(this._currentAlignment);\n        this._currentIndex = this._entityAlignments.length - 1;\n        this.finishedNewEntity = true;\n    }\n\n    private async loadLocalEntity(): Promise<void> {\n        const identifier = this._selectedLocalIdentifier;\n        const inputType = this._selectedInputType;\n        this._currentLocalEntity = await this.connection.getLocalEntity(this.localDatabase.label, identifier, inputType, 1).toPromise();\n        this.utils.addHashToLocalEntity(this._currentLocalEntity);\n        this.finishedLoadingLocalEntity = true;\n    }\n\n    private async loadWebEntity(value: string): Promise<void> {\n        await this.connection.getWebEntity(this.webDatabase.label, value, this._regexApiStore).toPromise().then(\n            resp => {\n                this._currentWebEntity = resp;\n                this.utils.addHashToWebEntity(this._currentWebEntity);\n                this.finishedLoadingWebEntity = true;\n            },\n            err => {\n                console.log(err);\n            }\n        );\n\n    }\n\n    public debugMode() {\n        this._currentWebEntity = (testWebEntity as any).default;\n        this._currentLocalEntity = (testLocalEntity as any).default;\n        this._localDatabase = (testLocalDB as any).default;\n        this._webDatabase = (testWebDB as any).default;\n        this.utils.addHashToWebEntity(this._currentWebEntity);\n\n        this._currentAlignment = {mappings: [], localEntity: this.currentLocalEntity, webEntity: this.currentWebEntity};\n        this.entityAlignments.push(this._currentAlignment);\n\n        this._suggestionContainer = (testSuggestion as any).default;\n        this.suggestionsLoaded = true;\n\n        this.finishedLoadingLocalEntity = true;\n        this.finishedLoadingWebEntity = true;\n        this.finishedNewEntity = true;\n    }\n\n    async changeWebReducedResponse(value): Promise<void> {\n        this._currentWebEntity.reducedResponse = value;\n        this.connection.postToFlatJson(value).toPromise().then((resp) => {\n            this._currentWebEntity.dictionary = resp.dictionary;\n            this.utils.addHashToWebEntity(this._currentWebEntity);\n        });\n\n        const diff = this.connection.postJsonDiff(this._currentWebEntity.originalResponse, value).toPromise().then(\n            (resp) => {\n                this._regexApiStore = [...new Set(resp.regex)];\n            }\n        );\n    }\n\n    generateSuggestions(): void {\n        this.suggestionsLoaded = false;\n        const mappings = [];\n        for (const alignment of this._entityAlignments) {\n            for (const elem of alignment.mappings) {\n                mappings.push(elem);\n            }\n        }\n        this.connection.postSuggestions(mappings).toPromise().then(\n            (resp) => {\n                this._suggestionContainer = resp;\n                this.suggestionsLoaded = true;\n            }\n        );\n    }\n\n    generateFinalAlignment(): void {\n        this.finishedFinalAlignment = false;\n        const mappings = [];\n        for (const suggestion of this._suggestionContainer.suggestions) {\n            const general = suggestion.general;\n            if (general.selected) {\n                mappings.push({localEntries: general.localEntries, webEntries: general.webEntries, type: general.type});\n            }\n            for (const mapping of suggestion.suggestions) {\n                const template = mapping.template;\n                if (template.selected) {\n                    mappings.push({localEntries: template.localEntries, webEntries: template.webEntries, type: template.type});\n                }\n            }\n        }\n        this._finalAlignment = {mappings, localLabel: this._localDatabase.label, webLabel: this._webDatabase.label};\n        this.finishedFinalAlignment = true;\n    }\n\n    saveFinalAlignment(): Promise<any> {\n        return this.connection.postFinalAlignment(this.finalAlignment).toPromise();\n    }\n\n    private saveLocalKnownPaths(): void{\n        if (this._currentLocalEntity === undefined || this._currentWebEntity === undefined ){\n            return;\n        }else {\n            console.log(this._currentLocalEntity);\n            console.log(this._currentWebEntity);\n        }\n\n        for ( const entry of this._currentLocalEntity.valueList[0].fullKnowledge){\n            if (!this._localKnownPathStore.has(entry.path)){\n                   this._localKnownPathStore.add(entry.path);\n            }\n        }\n\n        for ( const entry of this._currentWebEntity.dictionary){\n            if (!this._webKnownPathStore.has(entry.path)){\n                this._webKnownPathStore.add(entry.path);\n            }\n        }\n    }\n\n    get currentAlignment(): GSBAlignment {\n        return this._currentAlignment;\n    }\n\n    get currentMappings(): any[] {\n        return this._currentAlignment.mappings;\n    }\n\n    get currentWebEntity() {\n        return this._currentWebEntity;\n    }\n\n    get currentLocalEntity() {\n        return this._currentLocalEntity;\n    }\n\n    get localDatabase(): ILocalDatabase {\n        return this._localDatabase;\n    }\n\n    get webDatabase(): IApi {\n        return this._webDatabase;\n    }\n\n    get finishedLoading(): boolean {\n        return this.finishedLoadingLocalEntity && this.finishedLoadingWebEntity && this.finishedNewEntity;\n    }\n\n    get entityAlignments(): GSBAlignment[] {\n        return this._entityAlignments;\n    }\n\n    get currentIndex(): number {\n        return this._currentIndex;\n    }\n\n    get finalAlignment() {\n        return this._finalAlignment;\n    }\n\n    get suggestionContainer(): ISuggestionContainer {\n        return this._suggestionContainer;\n    }\n\n    get localKnownPathStore(): Set<string> {\n        return this._localKnownPathStore;\n    }\n\n    get webKnownPathStore(): Set<string> {\n        return this._webKnownPathStore;\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n\n\n\n\n\n\n\n","import {ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\nimport {IMappingSuggestion, ISuggestionEntry} from '../../../../_interfaces/gsb/suggestion';\nimport {GsbService} from '../../../../_services/gsb.service';\nimport {Utils} from '../../../../_classes/Utils';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {MappingViewComponent} from '../mapping-view/mapping-view.component';\n\n@Component({\n    selector: 'app-mapping-suggestion',\n    templateUrl: './mapping-suggestion.component.html',\n    styleUrls: ['./mapping-suggestion.component.scss']\n})\nexport class MappingSuggestionComponent implements OnInit {\n\n    utils: Utils = new Utils();\n\n    @Input() suggestionMapping: IMappingSuggestion;\n\n    useGeneral = true;\n    useIndividual = false;\n\n    constructor(public gsbService: GsbService, public cdr: ChangeDetectorRef, private _dialog: MatDialog) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    toggleUseGeneral(): void {\n        this.useGeneral = !this.useGeneral;\n        this.useIndividual = !this.useGeneral;\n\n    }\n\n    toggleUseIndividual(): void {\n        this.useIndividual = !this.useIndividual;\n        this.useGeneral = !this.useGeneral;\n\n    }\n\n    openMappingTable(entry: ISuggestionEntry): void {\n        const dialogConfig = new MatDialogConfig();\n\n        dialogConfig.data = entry;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.minHeight = '70vh';\n        dialogConfig.maxWidth = '90vw';\n        dialogConfig.minWidth = '70vw';\n        const dialogRef = this._dialog.open(MappingViewComponent, dialogConfig).afterClosed().toPromise().then(() => {\n            this.cdr.detectChanges();\n        });\n    }\n\n}\n","<div class=\"suggestions-wrapper\">\n    <h1>General Mapping</h1>\n    <div class=\"mapping\">\n        <div class=\"select\">\n            <mat-checkbox color=\"primary\" [(ngModel)]=\"suggestionMapping.general.selected\"></mat-checkbox>\n        </div>\n        <div class=\"relation-container\">\n            <div class=\"entry\" *ngFor=\"let entry of suggestionMapping.general.localEntries\">\n                <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n            </div>\n        </div>\n        <div class=\"divider\">\n            <div [innerHtml]=\"suggestionMapping.general.counter\"></div>\n            <div class=\"relationType\">\n                <mat-icon *ngIf=\"suggestionMapping.general.type === 0\">east</mat-icon>\n                <mat-icon *ngIf=\"suggestionMapping.general.type === 1\">west</mat-icon>\n                <mat-icon *ngIf=\"suggestionMapping.general.type === 2\">sync_alt</mat-icon>\n            </div>\n            <div class=\"action\">\n                <ng-container *ngIf=\"suggestionMapping.suggestions.length == 1\">\n                    <button mat-icon-button aria-label=\"Clear\" (click)=\"openMappingTable(suggestionMapping.suggestions[0])\">\n                        <mat-icon>preview</mat-icon>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"relation-container\">\n            <div class=\"entry\" *ngFor=\"let entry of suggestionMapping.general.webEntries\">\n                <p>{{entry}}</p>\n            </div>\n        </div>\n        <div class=\"flex-grow-1\">\n        </div>\n    </div>\n    <br>\n    <ng-container *ngIf=\"suggestionMapping.suggestions.length >= 1\">\n        <h1>Individual Mappings</h1>\n        <div class=\"mapping-wrapper\" *ngFor=\"let suggestion of suggestionMapping.suggestions; let index=index\">\n            <div class=\"mapping\">\n                <div class=\"select\">\n                    <mat-checkbox color=\"primary\" [(ngModel)]=\"suggestion.selected\"></mat-checkbox>\n                </div>\n                <div class=\"relation-container\">\n                    <div class=\"entry\" *ngFor=\"let entry of suggestion.template.localEntries\">\n                        <p [innerHtml]=\"((gsbService.showFullLocalPath) ? entry : utils.formatLocalPath(entry))\"></p>\n                    </div>\n                </div>\n                <div class=\"divider\">\n                    <div><span [innerHtml]=\"suggestion.counter\"></span></div>\n                    <div class=\"relationType\">\n                        <mat-icon *ngIf=\"suggestion.template.type === 0\">east</mat-icon>\n                        <mat-icon *ngIf=\"suggestion.template.type === 1\">west</mat-icon>\n                        <mat-icon *ngIf=\"suggestion.template.type === 2\">sync_alt</mat-icon>\n                    </div>\n                    <div class=\"action\">\n                        <button mat-icon-button aria-label=\"Clear\" (click)=\"openMappingTable(suggestion)\">\n                            <mat-icon>preview</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"relation-container\">\n                    <div class=\"entry\" *ngFor=\"let entry of suggestion.template.webEntries\">\n                        <p>{{entry}}</p>\n                    </div>\n                </div>\n                <div class=\"flex-grow-1\">\n                </div>\n            </div>\n\n        </div>\n    </ng-container>\n</div>\n","import {RelationPath} from './RelationPath';\nimport {Metric} from './Metric';\n\n\nexport class Mapping {\n    private _apiPaths: string[];\n    private _relationPaths: RelationPath[];\n    private _metrics: Metric[];\n\n    constructor(apiPath: string[], relationPaths: RelationPath[], metrics: Metric[]) {\n        this._apiPaths = apiPath;\n\n        this._relationPaths = relationPaths;\n\n        this._metrics = metrics;\n    }\n\n    get apiPaths(): string[] {\n        return this._apiPaths;\n    }\n\n    get relationPaths(): RelationPath[] {\n        return this._relationPaths;\n    }\n\n    get metrics(): Metric[] {\n        return this._metrics;\n    }\n\n    private addRelationPath(relationPaths: RelationPath | RelationPath[] | string[]): void {\n        if (Array.isArray(relationPaths)) {\n            if (relationPaths.length === 0) {\n                return;\n            }\n            if (relationPaths[0] instanceof RelationPath) {\n                for (const relationPath of relationPaths) {\n                    this._relationPaths.push(relationPath as RelationPath);\n                }\n            } else {\n                const rel = new RelationPath(relationPaths as string[]);\n                this._relationPaths.push(rel);\n            }\n        } else {\n            this._relationPaths.push(relationPaths);\n        }\n    }\n\n    private addApiPath(apiPath: string | string[]): void {\n        if (Array.isArray(apiPath)) {\n            for (const path of apiPath) {\n                this._apiPaths.push(path);\n            }\n        } else {\n            this._apiPaths.push(apiPath);\n        }\n    }\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-schema',\n    templateUrl: './schema.component.html',\n    styleUrls: ['./schema.component.scss']\n})\nexport class SchemaComponent implements OnInit {\n\n    code: any;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        this.code = `\n            {\n              \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n              \"$id\": \"https://example.com/alignment.schema.json\",\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"system\":{\n                  \"type\": \"string\"\n                },\n                \"description\": {\n                  \"type\": \"string\"\n                },\n                \"alignments\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/mapping\"\n                  }\n                }\n              },\n              \"required\": [\n                \"name\",\n                \"alignments\"\n              ],\n\n\n              \"definitions\": {\n                \"mapping\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"api_path\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"relation_path\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/definitions/relationPath\"\n                      }\n                    },\n                    \"metrics\": {\n                      \"type\": \"object\",\n                      \"patternProperties\": {\n                        \"\": {\n                          \"type\": \"number\"\n                        }\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"api_path\",\n                    \"relation_path\",\n                    \"metrics\"\n                  ]\n                },\n                \"relationPath\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"path\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }`;\n    }\n}\n","<a mat-raised-button href=\"../../../assets/jsonSchema/alignment.schema.json\">Download here</a>\n<pre>\n    <code [highlight]=\"code\" [lineNumbers]=\"true\"></code>\n</pre>\n","export class RelationPath {\n    private _paths: string[];\n\n    constructor(paths: string[]) {\n        this._paths = paths;\n    }\n\n    public addPath(path: string): void {\n        this._paths.push(path);\n    }\n\n    public compareTo(b: RelationPath): number {\n        return this.paths.toString().localeCompare(b.toString());\n    }\n\n    get paths(): string[] {\n        return this._paths;\n    }\n\n    public toString(): string {\n        return this.paths.join();\n    }\n}\n","export * from './ViewModeEnum';\nexport * from './MappingType';\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {UiSidebarLeftComponent} from './ui-sidebar-left/ui-sidebar-left.component';\nimport {UiSidebarRightComponent} from './ui-sidebar-right/ui-sidebar-right.component';\nimport {UiInfobarBottomComponent} from './ui-infobar-bottom/ui-infobar-bottom.component';\nimport {UiInfobarTopComponent} from './ui-infobar-top/ui-infobar-top.component';\nimport {AlignmentCubeService} from '../engine/alignment-cube.service';\n\n@Component({\n  selector: 'app-ui',\n  templateUrl: './ui.component.html',\n  styleUrls: [ './ui.component.scss']\n})\nexport class UiComponent implements OnInit {\n\n  @Input() engineService: AlignmentCubeService;\n\n  @ViewChild(UiSidebarLeftComponent)\n  private leftSidebar: UiSidebarLeftComponent;\n\n  @ViewChild(UiSidebarRightComponent)\n  private rightSidebar: UiSidebarRightComponent;\n\n  @ViewChild(UiInfobarBottomComponent)\n  private bottomInfobar: UiInfobarBottomComponent;\n\n  @ViewChild(UiInfobarTopComponent)\n  private topInfobar: UiInfobarTopComponent;\n\n  public constructor() {\n  }\n\n  public ngOnInit(): void {\n  }\n\n}\n","<div class=\"ui-wrapper\">\n  <app-ui-infobar-top class=\"ui-wrapper-top\"></app-ui-infobar-top>\n  <app-ui-sidebar-left class=\"ui-wrapper-left\"></app-ui-sidebar-left>\n  <app-ui-sidebar-right class=\"ui-wrapper-right\" ></app-ui-sidebar-right>\n</div>\n","import * as THREE from 'three';\nimport {ResourceTracker} from './ResourceTracker';\nimport {AlignmentCubeService} from '../../_components/alignment-cube/engine/alignment-cube.service';\nimport {AlignmentContainer} from '../alignment';\nimport {settings} from '../../../assets/settings';\nimport {ThreeJsUtil} from './ThreeJsUtil';\nimport {PathFormatterService} from '../../_services';\n\nexport class LabelCreator {\n    labelFormatter: PathFormatterService;\n\n    constructor(alignmentCubeService: AlignmentCubeService, labelFormatter: PathFormatterService) {\n        this.alignmentCubeService = alignmentCubeService;\n        this.labelFormatter = labelFormatter;\n        this.alignmentModel = alignmentCubeService.alignmentContainer;\n        this.scene = alignmentCubeService.scene;\n        this.labelTracker = new ResourceTracker();\n    }\n\n    private alignmentCubeService: AlignmentCubeService;\n\n    private labelTracker: ResourceTracker;\n\n    // references to alignmentCubeService variables\n    private scene: THREE.Scene;\n    private alignmentModel: AlignmentContainer;\n\n\n    /**\n     * Create the label for the x Axis ( Api Paths )\n     *\n     * @param xStart - x position of start edge\n     * @param yStart - y position of start edge\n     * @param zStart - z position of start edge\n     * @param xOffset\n     * @param yOffset\n     * @param zOffset\n     * @param rotation - rotation radiant ( use Math.PI)\n     * @param withLines - set if you need a visual support to the edge of the outline cube\n     */\n    public addLabelsX(xStart: number, yStart: number, zStart: number,\n                      xOffset: number = 0, yOffset: number = 0, zOffset: number = 0,\n                      rotation: number = 0, withLines: boolean = false): void {\n\n        this.alignmentModel.apiLabels.forEach((apiPath, index) => {\n            const x = xStart + xOffset + index;\n            const y = yStart + yOffset;\n            const z = zStart + zOffset;\n\n            const context: string = this.labelFormatter.formatApiPath(apiPath);\n\n            const label = this.attachLabelToObject(context, this.alignmentCubeService.outlineBox, x, y, z, 400,\n                'blue', rotation, true);\n            this.labelTracker.track(label);\n            if (withLines) {\n                const line = ThreeJsUtil.createLine(new THREE.Vector3(x, yStart, zStart), label.position);\n                this.scene.add(line);\n                this.labelTracker.track(line);\n                this.alignmentCubeService.outlineBox.add(line);\n            }\n            this.alignmentCubeService.outlineBox.add(label);\n        });\n    }\n\n    /**\n     * Create the label for the y Axis ( Relation Paths )\n     *\n     * @param xStart - x position of start edge\n     * @param yStart - y position of start edge\n     * @param zStart - z position of start edge\n     * @param xOffset\n     * @param yOffset\n     * @param zOffset\n     * @param rotation - rotation radiant ( use Math.PI)\n     * @param withLines - set if you need a visual support to the edge of the outline cube\n     */\n    public addLabelsY(xStart: number, yStart: number, zStart: number,\n                      xOffset: number = 0, yOffset: number = 0, zOffset: number = 0,\n                      rotation: number = 0, withLines: boolean = false): void {\n\n        this.alignmentModel.relationPathLabels.forEach((relationPath, index) => {\n            const labels: string[] = [];\n            const x = xStart + xOffset;\n            const y = yStart + yOffset + index;\n            const z = zStart + zOffset;\n\n            relationPath.forEach((path) => {\n                labels.push(this.labelFormatter.formatRelationPath(path));\n            });\n            const labelContext = this.labelFormatter.joinRelPaths(labels);\n            const label = this.attachLabelToObject(labelContext, this.alignmentCubeService.outlineBox, x, y, z, 400,\n                'gray', rotation, true\n            );\n            this.labelTracker.track(label);\n            if (withLines) {\n                const line = ThreeJsUtil.createLine(new THREE.Vector3(xStart, y, zStart), label.position);\n                this.scene.add(line);\n                this.labelTracker.track(line);\n                this.alignmentCubeService.outlineBox.add(line);\n            }\n            this.alignmentCubeService.outlineBox.add(label);\n        });\n    }\n\n    /**\n     * Create the label for the z Axis ( Alignments )\n     *\n     * @param xStart - x position of start edge\n     * @param yStart - y position of start edge\n     * @param zStart - z position of start edge\n     * @param xOffset\n     * @param yOffset\n     * @param zOffset\n     * @param rotation - rotation radiant ( use Math.PI)\n     * @param withLines - set if you need a visual support to the edge of the outline cube\n     */\n    public addLabelsZ(xStart: number, yStart: number, zStart: number,\n                      xOffset: number = 0, yOffset: number = 0, zOffset: number = 0,\n                      rotation: number = 0, withLines: boolean = false): void {\n        const depth = this.alignmentModel.alignments.length;\n        for (let i = 0; i < depth; i++) {\n            const x = xStart + xOffset;\n            // const x = xStart + (depth - 1 - i) * 0.8 + xOffset;\n            const y = yStart + yOffset;\n            const z = zStart - depth + 1 + i + zOffset;\n            const content = this.alignmentModel.alignments[i].name;\n            const label = this.attachLabelToObject(content, this.alignmentCubeService.outlineBox, x, y, z, 400,\n                'gray', rotation, true);\n            this.labelTracker.track(label);\n            if (withLines) {\n                const line = ThreeJsUtil.createLine(new THREE.Vector3(xStart, yStart, z), label.position);\n                this.scene.add(line);\n                this.labelTracker.track(line);\n                this.alignmentCubeService.outlineBox.add(line);\n            }\n            this.alignmentCubeService.outlineBox.add(label);\n        }\n    }\n\n    /**\n     * Attach a label to an Object3D.\n     * @param content - label text\n     * @param object\n     * @param x - x position relative to object center\n     * @param y - y position relative to object center\n     * @param z - z position relative to object center\n     * @param labelWidth\n     * @param style - color for background\n     * @param rotation - rotation radiant ( use Math.PI)\n     * @param visible\n     * @private\n     */\n    private attachLabelToObject(content: string, object: THREE.Object3D, x: number = 0, y: number = 1, z: number = 0,\n                                labelWidth: number = 100, style: string = 'gray', rotation: number = 0,\n                                visible: boolean = false): THREE.Sprite {\n        const canvas = ThreeJsUtil.createHTMLCanvasLabel(labelWidth, 40, content, style);\n        const texture = new THREE.CanvasTexture(canvas);\n        // because our canvas is likely not a power of 2\n        // in both dimensions set the filtering appropriately.\n        texture.minFilter = THREE.LinearFilter;\n        texture.wrapS = THREE.ClampToEdgeWrapping;\n        texture.wrapT = THREE.ClampToEdgeWrapping;\n\n        const labelMaterial = new THREE.SpriteMaterial({\n            map: texture,\n            transparent: true,\n        });\n        labelMaterial.rotation = rotation;\n\n        const labelBaseScale = 0.01;\n        const label = new THREE.Sprite(labelMaterial);\n        object.add(label);\n        label.position.set(x, y, z);\n        label.scale.x = canvas.width * labelBaseScale;\n        label.scale.y = canvas.height * labelBaseScale;\n        label.traverse((object1) => {\n            object1.visible = visible;\n        });\n        return label;\n    }\n\n    /**\n     * Delete all labels created by this\n     */\n    public disposeLabels(): void{\n        this.labelTracker.dispose();\n    }\n\n}\n","import * as THREE from 'three';\nimport {AlignmentCubeService} from '../../_components/alignment-cube/engine/alignment-cube.service';\nimport {AlignmentContainer} from '../alignment';\nimport {LabelCreator} from './LabelCreator';\nimport {ThreeJsUtil} from './ThreeJsUtil';\nimport {DataCubeCreator} from './DataCubeCreator';\nimport {ResourceTracker} from './ResourceTracker';\nimport {PathFormatterService} from '../../_services';\n\nexport class SceneLoader {\n    private alignmentCubeService: AlignmentCubeService;\n\n    // references to alignmentCubeService variables\n    private scene: THREE.Scene;\n    private alignmentModel: AlignmentContainer;\n\n    private labelCreator: LabelCreator;\n    private dataCubeCreator: DataCubeCreator;\n    private resTracker: ResourceTracker;\n\n    constructor(alignmentCubeService: AlignmentCubeService, pathFormatterService: PathFormatterService) {\n        this.alignmentCubeService = alignmentCubeService;\n        this.alignmentModel = alignmentCubeService.alignmentContainer;\n        this.scene = alignmentCubeService.scene;\n        this.labelCreator = new LabelCreator(alignmentCubeService, pathFormatterService);\n        this.dataCubeCreator = new DataCubeCreator(alignmentCubeService);\n        this.resTracker = new ResourceTracker();\n    }\n\n    /**\n     * 2D View with x: ApiPath and y: datasets\n     */\n    public load2DSceneRelation(): void {\n\n        const width = this.alignmentModel.apiLabels.length;\n        const height = 1;\n        const depth = this.alignmentModel.alignments.length;\n\n        this.alignmentCubeService.outlineBox = ThreeJsUtil.createOutlineCube(width, height, depth);\n        this.resTracker.track(this.alignmentCubeService.outlineBox);\n        this.scene.add(this.alignmentCubeService.outlineBox);\n\n        const xStart = -width / 2;\n        const yStart = -height / 2;\n        const zStart = depth / 2;\n\n        this.labelCreator.addLabelsX(xStart, yStart, zStart, 0.5, 0, 2.5, Math.PI / 2);\n        this.labelCreator.addLabelsZ(xStart, yStart, zStart, -2.5, 0, -0.5, 0);\n\n        this.dataCubeCreator.addDataCubes();\n\n        this.alignmentCubeService.orbitControls.enableRotate = false;\n        this.alignmentCubeService.orbitControls.enablePan = false;\n        const newPosition = this.alignmentCubeService.outlineBox.position.clone();\n\n        const y = this.alignmentModel.relationPathLabels.length + 1;\n\n        if (this.alignmentCubeService.currentCamera instanceof THREE.PerspectiveCamera) {\n            this.alignmentCubeService.changeCamera();\n        }\n\n        this.alignmentCubeService.currentCamera.position.set(newPosition.x, y , newPosition.z);\n    }\n\n    /**\n     * 2D View with x: ApiPath and y: RelationPath\n     */\n    public load2DSceneAlignment(): void {\n\n        const width = this.alignmentModel.apiLabels.length;\n        const height = this.alignmentModel.relationPathLabels.length;\n        const depth = 1;\n\n        this.alignmentCubeService.outlineBox = ThreeJsUtil.createOutlineCube(width, height, depth);\n        this.resTracker.track(this.alignmentCubeService.outlineBox);\n        this.scene.add(this.alignmentCubeService.outlineBox);\n\n        const xStart = -width / 2;\n        const yStart = -height / 2;\n        const zStart = depth / 2;\n\n        this.labelCreator.addLabelsX(xStart, yStart, zStart, 0.5, -2.5, 0, Math.PI / 2);\n        this.labelCreator.addLabelsY(xStart, yStart, zStart, -2.5, 0.5, 0);\n\n        this.dataCubeCreator.addDataCubes();\n\n        this.alignmentCubeService.orbitControls.enableRotate = false;\n        this.alignmentCubeService.orbitControls.enablePan = false;\n        const newPosition = this.alignmentCubeService.outlineBox.position.clone();\n        const z = this.alignmentModel.alignments.length + 1;\n\n        if (this.alignmentCubeService.currentCamera instanceof THREE.PerspectiveCamera) {\n            this.alignmentCubeService.changeCamera();\n        }\n\n        this.alignmentCubeService.currentCamera.position.set(newPosition.x, newPosition.y, z);\n    }\n\n    /**\n     * 2D View with x: Dataset and y: RelationPath\n     */\n    public load2DSceneApi(): void {\n\n        const width = 1;\n        const height = this.alignmentModel.relationPathLabels.length;\n        const depth = this.alignmentModel.alignments.length;\n\n        this.alignmentCubeService.outlineBox = ThreeJsUtil.createOutlineCube(width, height, depth);\n        this.resTracker.track(this.alignmentCubeService.outlineBox);\n        this.scene.add(this.alignmentCubeService.outlineBox);\n\n        const xStart = -width / 2;\n        const yStart = -height / 2;\n        const zStart = depth / 2;\n\n        this.labelCreator.addLabelsY(xStart, yStart, zStart, 0, 0.5, 2.5);\n        this.labelCreator.addLabelsZ(-xStart, yStart, zStart, 0, -2.5, -0.5, Math.PI / 2);\n\n        this.dataCubeCreator.addDataCubes();\n\n        this.alignmentCubeService.orbitControls.enableRotate = false;\n        this.alignmentCubeService.orbitControls.enablePan = false;\n\n        const newPosition = this.alignmentCubeService.outlineBox.position.clone();\n        const x = this.alignmentModel.apiLabels.length + 1;\n\n        if (this.alignmentCubeService.currentCamera instanceof THREE.PerspectiveCamera) {\n            this.alignmentCubeService.changeCamera();\n        }\n\n        this.alignmentCubeService.currentCamera.position.set(x, newPosition.y, newPosition.z);\n    }\n\n    public load3DScene(): void {\n        const width = this.alignmentModel.apiLabels.length;\n        const height = this.alignmentModel.relationPathLabels.length;\n        const depth = this.alignmentModel.alignments.length;\n\n        this.alignmentCubeService.outlineBox = ThreeJsUtil.createOutlineCube(width, height, depth);\n        this.resTracker.track(this.alignmentCubeService.outlineBox);\n        this.scene.add(this.alignmentCubeService.outlineBox);\n\n        const xStart = -width / 2;\n        const yStart = -height / 2;\n\n        const zStart = depth / 2;\n        this.alignmentCubeService.orbitControls.enableRotate = true;\n        this.alignmentCubeService.orbitControls.enablePan = true;\n\n        this.alignmentCubeService.orbitControls.target.copy(this.alignmentCubeService.outlineBox.position.clone());\n\n        // Labels\n        this.labelCreator.addLabelsX(xStart, yStart, zStart, 0.5, -2.5, 0, Math.PI / 2);\n        this.labelCreator.addLabelsY(xStart, yStart, zStart, -2.5, 0.5, 0);\n        this.labelCreator.addLabelsZ(-xStart, yStart, zStart, 2.5, 0, -0.5);\n\n        // DataCubes\n        this.dataCubeCreator.addDataCubes();\n\n        this.alignmentCubeService.orbitControls.enableRotate = true;\n        this.alignmentCubeService.orbitControls.enablePan = true;\n\n        const newPosition = this.alignmentCubeService.outlineBox.position.clone();\n        const a = this.alignmentModel.apiLabels.length;\n        const b = this.alignmentModel.relationPathLabels.length;\n        const z = Math.sqrt(a ** 2 + b ** 2) + 1;\n\n        this.alignmentCubeService.currentCamera.position.set(newPosition.x + 1, newPosition.y + 1, z);\n    }\n\n    /**\n     * Removes all objects of the scene.\n     */\n    public clearScene(): void {\n        this.labelCreator.disposeLabels();\n        this.dataCubeCreator.disposeCubes();\n        this.resTracker.dispose();\n    }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AlignmentCubeService} from '../../engine/alignment-cube.service';\nimport {FormBuilder, FormControl} from '@angular/forms';\n\n@Component({\n    selector: 'app-ui-sidebar-right',\n    templateUrl: './ui-sidebar-right.component.html'\n})\nexport class UiSidebarRightComponent implements OnInit {\n\n    visible = false;\n\n    fullRelationPathControl: FormControl;\n    fullApiPathControl: FormControl;\n    fullRelationPathAxisControl: FormControl;\n    fullApiPathAxisControl: FormControl;\n    metricChoiceControl: FormControl;\n\n    public constructor(\n        private fb: FormBuilder,\n        public engineService: AlignmentCubeService) {\n    }\n\n    public ngOnInit(): void {\n        this.fullRelationPathControl = new FormControl(true);\n        this.fullApiPathControl = new FormControl(true);\n        this.fullApiPathAxisControl = new FormControl(true);\n        this.fullRelationPathAxisControl = new FormControl(true);\n        this.metricChoiceControl = new FormControl('');\n\n\n    }\n\n    changeMetric(): void {\n        this.engineService.setMetric(this.metricChoiceControl.value);\n    }\n\n    changeRelationPath(): void {\n        this.engineService.setShowRelationFullPath(this.fullRelationPathControl.value);\n    }\n\n    changeApiPath(): void {\n        this.engineService.setShowApiFullPath(this.fullApiPathControl.value);\n    }\n\n}\n","<!--<mat-card>\n    <mat-accordion class=\"example-headers-align\" multi>\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Metric Settings\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    DataCube Label Settings\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Axis Label Settings\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Other Settings\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n        </mat-expansion-panel>\n    </mat-accordion>\n</mat-card>-->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"d-flex flex-row justify-content-between\">\n            <div class=\"card-title\">Settings</div>\n            <button class=\"btn-close\" (click)=\"visible= !visible\"></button>\n        </div>\n\n    </div>\n    <div class=\"card-body\" *ngIf=\"visible\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Metric:</mat-label>\n            <mat-select (selectionChange)=\"changeMetric()\" [formControl]=\"metricChoiceControl\">\n                <mat-option *ngFor=\"let metric of engineService.alignmentContainer.metricsNames\" [value]=\"metric\">\n                    {{metric}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <hr>\n        <p>Cube Label Settings</p>\n        <div class=\"row m-1\">\n            <mat-slide-toggle [formControl]=\"fullRelationPathControl\" color=\"primary\" (change)=\"changeRelationPath()\">\n                Full Relation Path\n            </mat-slide-toggle>\n            <mat-slide-toggle [formControl]=\"fullApiPathControl\" color=\"primary\" (change)=\"changeApiPath()\">\n                Full Api Path\n            </mat-slide-toggle>\n        </div>\n        <hr>\n        <p>Axis Label Settings</p>\n        <div class=\"row m-1\">\n            <mat-slide-toggle disabled [formControl]=\"fullApiPathControl\" color=\"primary\" (change)=\"changeApiPath()\">\n                Full Relation Path\n            </mat-slide-toggle>\n            <mat-slide-toggle disabled [formControl]=\"fullApiPathControl\" color=\"primary\" (change)=\"changeApiPath()\">\n                Full Api Path\n            </mat-slide-toggle>\n        </div>\n        <hr>\n        <p>Cube Settings</p>\n        <hr>\n        <p>Other Settings</p>\n        <div class=\"row m-1\">\n            <button mat-raised-button color=\"primary\" (click)=\"engineService.changeCamera()\">Change Perspektive</button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-setting-page',\n  templateUrl: './setting-page.component.html',\n  styleUrls: ['./setting-page.component.scss']\n})\nexport class SettingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"center\">\n    <mat-tab label=\"Webservices\">\n        <app-webservices-overview></app-webservices-overview>\n    </mat-tab>\n    <mat-tab label=\"APIs\">\n        <app-api-overview></app-api-overview>\n    </mat-tab>\n    <mat-tab label=\"DBs\">\n        <app-databases-overview></app-databases-overview>\n    </mat-tab>\n</mat-tab-group>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppComponent} from './app.component';\nimport {UiInfobarBottomComponent} from './_components/alignment-cube/ui/ui-infobar-bottom';\nimport {UiInfobarTopComponent} from './_components/alignment-cube/ui/ui-infobar-top';\nimport {UiSidebarLeftComponent} from './_components/alignment-cube/ui/ui-sidebar-left';\nimport {UiSidebarRightComponent} from './_components/alignment-cube/ui/ui-sidebar-right';\nimport {UiComponent} from './_components/alignment-cube/ui';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NavbarComponent} from './_components/navbar';\nimport {AppRoutingModule} from './app-routing.module';\nimport {StartPageComponent} from './pages/start-page/start-page.component';\nimport {DataCubePageComponent} from './pages/data-cube-page/data-cube-page.component';\nimport {SettingPageComponent} from './pages/setting-page/setting-page.component';\nimport {AlignmentCubeComponent} from './_components/alignment-cube';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AlignmentSelectorComponent} from './_components/alignment-cube/alignment-selector';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from '@angular/material/icon';\nimport {HIGHLIGHT_OPTIONS, HighlightModule} from 'ngx-highlightjs';\nimport { SchemaComponent } from './pages/schema-page/schema.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { GsbPageComponent } from './pages/gsb-page/gsb-page.component';\nimport { GoldStandardBuilderComponent } from './_components/gold-standard-builder/gold-standard-builder.component';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { WebservicesOverviewComponent } from './_components/webservices/webservices-overview/webservices-overview.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { WebserviceInformationComponent } from './_components/webservices/webservice-information/webservice-information.component';\nimport {MatDialog, MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport { DatabasesOverviewComponent } from './_components/databases/db-overview/databases-overview.component';\nimport { ApiOverviewComponent } from './_components/apis/api-overview/api-overview.component';\nimport { ApiInformationComponent } from './_components/apis/api-information/api-information.component';\nimport { DbInformationComponent } from './_components/databases/db-information/db-information.component';\nimport {NgJsonEditorModule} from '@maaxgr/ang-jsoneditor';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { WebserviceCreateFormComponent } from './_components/webservices/webservice-create-form/webservice-create-form.component';\nimport { MappingTableComponent } from './_components/gold-standard-builder/builder/mapping-table/mapping-table.component';\nimport { DbSelecectorComponent } from './_components/gold-standard-builder/db-selecector/db-selecector.component';\nimport { BuilderComponent } from './_components/gold-standard-builder/builder/builder.component';\nimport { HighlightPipe } from './_pipes/highlight.pipe';\nimport {BackendConnectionService} from './_services/backend-connection.service';\nimport {GsbService} from './_services/gsb.service';\nimport { JsonViewerComponent } from './_components/json-viewer/json-viewer.component';\nimport { TestComponent } from './pages/test/test.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { FinalAlignmentComponent } from './_components/gold-standard-builder/final-alignmnet/final-alignment.component';\nimport { MappingSuggestionToolComponent } from './_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion-tool.component';\nimport { MappingSuggestionComponent } from './_components/gold-standard-builder/mapping-suggestion-tool/mapping-suggestion/mapping-suggestion.component';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MappingViewComponent } from './_components/gold-standard-builder/mapping-suggestion-tool/mapping-view/mapping-view.component';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { MappingEditorComponent } from './_components/gold-standard-builder/mapping-suggestion-tool/mapping-editor/mapping-editor.component';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { AlignmentViewerComponent } from './_components/alignment-viewer/alignment-viewer.component';\nimport { AlignmentViewerPageComponent } from './pages/alignment-viewer-page/alignment-viewer-page.component';\nimport { ApiCreateFormComponent } from './_components/apis/api-create-form/api-create-form.component';\nimport { DbCreateFormComponent } from './_components/databases/db-create-form/db-create-form.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        UiComponent,\n        UiInfobarBottomComponent,\n        UiInfobarTopComponent,\n        UiSidebarLeftComponent,\n        UiSidebarRightComponent,\n        NavbarComponent,\n        StartPageComponent,\n        DataCubePageComponent,\n        SettingPageComponent,\n        AlignmentCubeComponent,\n        AlignmentSelectorComponent,\n        SchemaComponent,\n        GsbPageComponent,\n        GoldStandardBuilderComponent,\n        WebservicesOverviewComponent,\n        WebserviceInformationComponent,\n        DatabasesOverviewComponent,\n        ApiOverviewComponent,\n        ApiInformationComponent,\n        DbInformationComponent,\n        WebserviceCreateFormComponent,\n        MappingTableComponent,\n        DbSelecectorComponent,\n        BuilderComponent,\n        HighlightPipe,\n        JsonViewerComponent,\n        TestComponent,\n        FinalAlignmentComponent,\n        MappingSuggestionToolComponent,\n        MappingSuggestionComponent,\n        MappingViewComponent,\n        MappingEditorComponent,\n        AlignmentViewerComponent,\n        AlignmentViewerPageComponent,\n        ApiCreateFormComponent,\n        DbCreateFormComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        AppRoutingModule,\n        ReactiveFormsModule,\n        BrowserAnimationsModule,\n        MatIconModule,\n        HighlightModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatExpansionModule,\n        MatCardModule,\n        MatButtonModule,\n        MatRadioModule,\n        FormsModule,\n        MatCheckboxModule,\n        MatSlideToggleModule,\n        MatToolbarModule,\n        MatTableModule,\n        MatDialogModule,\n        MatInputModule,\n        MatTabsModule,\n        ScrollingModule,\n        NgJsonEditorModule,\n        MatGridListModule,\n        MatStepperModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatBadgeModule\n    ],\n    providers: [\n        BackendConnectionService,\n        GsbService,\n        {\n            provide: HIGHLIGHT_OPTIONS,\n            useValue: {\n                fullLibraryLoader: () => import('highlight.js')\n            }\n        },\n        MatSnackBar\n    ],\n    bootstrap: [\n        AppComponent\n    ]\n})\nexport class AppModule {\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as dbTemplateFile from '../../../../assets/templates/db_template.json';\n\n@Component({\n  selector: 'app-db-create-form',\n  templateUrl: './db-create-form.component.html',\n  styleUrls: ['./db-create-form.component.scss']\n})\nexport class DbCreateFormComponent implements OnInit {\n\n  dbLabel: string;\n  dbTemplate: any;\n\n  @ViewChild(JsonEditorComponent)\n  configEditor: JsonEditorComponent;\n  public editorOptionsConfig: JsonEditorOptions;\n\n  constructor(private connection: BackendConnectionService, private _snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {\n    // Init jsonEditor for configuration file\n    this.editorOptionsConfig = new JsonEditorOptions();\n    this.editorOptionsConfig.mode = 'code';\n    this.editorOptionsConfig.modes = ['code'];\n\n    this.dbTemplate = (dbTemplateFile as any).default;\n    this.dbLabel = '';\n    this.dbTemplate.label = this.dbLabel;\n  }\n\n  onDBNameChange(): void {\n    this.dbTemplate = this.configEditor.get() as any;\n    this.dbTemplate.label = this.dbLabel;\n    this.configEditor.data = this.dbTemplate;\n  }\n\n  save(): void {\n    const config = this.configEditor.get();\n    this.connection.addNewDatabase(config).toPromise().then(\n        () => {\n          this.openSnackBar('Saved');\n        },\n        (error) => {\n          this.openSnackBar('Unable to add new service');\n        }\n    );\n  }\n\n  onJSONChange(): void {\n    this.dbTemplate = this.configEditor.get() as any;\n  }\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {duration: 2000});\n  }\n\n}\n","<p>\n    <b>Create a new database configuration</b>\n</p>\n<mat-form-field>\n    <mat-label>database label</mat-label>\n    <input matInput [(ngModel)]=\"dbLabel\" (ngModelChange)=\"onDBNameChange()\">\n</mat-form-field>\n<mat-tab-group class=\"group-container\">\n    <mat-tab label=\"Configuration File\">\n        <json-editor [options]=\"editorOptionsConfig\" [data]=\"dbTemplate\"></json-editor>\n    </mat-tab>\n</mat-tab-group>\n\n\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"\" (click)=\"save()\" [disabled]=\"!dbLabel\">Create</button>\n</mat-dialog-actions>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-start-page',\n  templateUrl: './start-page.component.html',\n  styleUrls: ['./start-page.component.scss']\n})\nexport class StartPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Welcome to ETARA your benchmark system for alignments.</p>\n","import {AfterViewInit, Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {ILocalDatabaseShortInfo, ILocalDatabasesOverview, IWebserviceConfiguration, IWebserviceDetails} from '../../../_interfaces';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\n\nimport * as ace from 'ace-builds';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-webservice-information',\n    templateUrl: './webservice-information.component.html',\n    styleUrls: ['./webservice-information.component.scss']\n})\nexport class WebserviceInformationComponent implements OnInit {\n\n    webserviceConfiguration: IWebserviceDetails;\n    webserviceLabel: string;\n\n    public editorOptionsConfig: JsonEditorOptions;\n    public editorOptionsReturnTemplate: JsonEditorOptions;\n\n    @ViewChild(JsonEditorComponent)\n    configEditor: JsonEditorComponent;\n\n    viewAsString = false;\n\n    @ViewChild('editor') private editor: ElementRef<HTMLElement>;\n    private aceEditor;\n\n    databases: Array<ILocalDatabaseShortInfo>;\n\n    constructor(\n        private connection: BackendConnectionService,\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_DIALOG_DATA) public data: string) {\n\n        this.connection.getDatabases().then((res: ILocalDatabasesOverview) => {\n            this.databases = res.databases;\n        });\n    }\n\n    ngOnInit(): void {\n        this.webserviceLabel = this.data;\n\n        this.editorOptionsConfig = new JsonEditorOptions();\n        this.editorOptionsConfig.mode = 'code';\n        this.editorOptionsConfig.modes = ['code'];\n        this.editorOptionsReturnTemplate = new JsonEditorOptions();\n        this.editorOptionsReturnTemplate.mode = 'text';\n        this.editorOptionsReturnTemplate.modes = ['text'];\n\n        this.connection.getWebserviceConfiguration(this.data).then((res: IWebserviceDetails) => {\n            this.webserviceConfiguration = res;\n            ace.config.set('fontSize', '14px');\n            ace.config.set('basePath', 'https://unpkg.com/ace-builds@1.4.13/src-noconflict');\n\n            this.aceEditor = ace.edit(this.editor.nativeElement);\n            // aceEditor.setTheme('ace/theme/twilight');\n            this.aceEditor.session.setMode('ace/mode/ftl');\n            this.aceEditor.session.setValue(this.webserviceConfiguration.returnTemplate);\n        });\n    }\n\n    onValueChange(): void {\n        this.configEditor.data = this.webserviceConfiguration.configuration;\n        this.webserviceConfiguration.configuration = this.configEditor.get() as any;\n    }\n\n    onJSONChange(): void {\n        this.webserviceConfiguration.configuration = this.configEditor.get() as any;\n    }\n\n    openSnackBar(message: string) {\n        this._snackBar.open(message, '', {duration: 2000});\n    }\n\n    save(): void {\n        const config = this.configEditor.get();\n        const returnTemplate = this.aceEditor.session.getValue();\n        this.connection.updateWebservice(this.webserviceLabel, config, returnTemplate).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to save changes');\n            }\n        );\n    }\n\n    delete(): void {\n        this.connection.deleteWebservice(this.webserviceLabel).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to delete');\n            }\n        );\n    }\n\n\n}\n","<p>\n    <b>Webservice:</b> {{data}}\n</p>\n<mat-tab-group class=\"group-container\" (selectedIndexChange)=\"onJSONChange()\">\n    <mat-tab label=\"Configuration Form\">\n        <ng-container *ngIf=\"webserviceConfiguration\">\n            <div class=\"form-container\">\n                <mat-form-field>\n                    <mat-label>webservice-path</mat-label>\n                    <input matInput [(ngModel)]=\"webserviceConfiguration.configuration.webservice\" (ngModelChange)=\"onValueChange()\">\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>errorType</mat-label>\n                    <!--                <mat-hint>Choose the error type</mat-hint>-->\n                    <mat-select [(ngModel)]=\"webserviceConfiguration.configuration.errorType\" (ngModelChange)=\"onValueChange()\">\n                        <mat-option value=\"jsonWithStatus\">jsonWithStatus</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>type</mat-label>\n                    <mat-select [(ngModel)]=\"webserviceConfiguration.configuration.type\" (ngModelChange)=\"onValueChange()\">\n                        <mat-option value=\"precise\">precise</mat-option>\n                        <mat-option value=\"fuzzy\">fuzzy</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>latency</mat-label>\n                    <!--                <mat-hint>Time per request in s</mat-hint>-->\n                    <input matInput  [(ngModel)]=\"webserviceConfiguration.configuration.latency\"\n                           (ngModelChange)=\"onValueChange()\">\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>maxRequestsPerMinute</mat-label>\n                    <input matInput  [(ngModel)]=\"webserviceConfiguration.configuration.maxRequestsPerMinute\"\n                           (ngModelChange)=\"onValueChange()\">\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>maxRequests</mat-label>\n                    <input matInput  [(ngModel)]=\"webserviceConfiguration.configuration.maxRequests\"\n                           (ngModelChange)=\"onValueChange()\">\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>returnTemplate</mat-label>\n                    <input matInput [(ngModel)]=\"webserviceConfiguration.configuration.returnTemplate\" (ngModelChange)=\"onValueChange()\" disabled>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>database</mat-label>\n                    <mat-select [(ngModel)]=\"webserviceConfiguration.configuration.db\" (ngModelChange)=\"onValueChange()\">\n                        <mat-option value=\"None\">None</mat-option>\n                        <mat-option *ngFor=\"let entry of databases\"\n                                    value=\"{{entry.label}}\">{{entry.label}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </ng-container>\n    </mat-tab>\n    <mat-tab label=\"Configuration File\">\n        <ng-container *ngIf=\"webserviceConfiguration\">\n            <json-editor [options]=\"editorOptionsConfig\" [data]=\"webserviceConfiguration.configuration\"></json-editor>\n        </ng-container>\n    </mat-tab>\n    <mat-tab label=\"Return Template\">\n        <div #editor style=\"width: 70vw; height: 70vh;\"></div>\n    </mat-tab>\n</mat-tab-group>\n\n\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"\" (click)=\"save()\">Save</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"\" (click)=\"delete()\">Delete</button>\n</mat-dialog-actions>\n\n","export * from './ui-sidebar-right.component';\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ILocalDatabaseShortInfo, ILocalDatabasesOverview} from '../../../_interfaces';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as apiTemplateFile from '../../../../assets/templates/api_template.json';\n\n@Component({\n  selector: 'app-api-create-form',\n  templateUrl: './api-create-form.component.html',\n  styleUrls: ['./api-create-form.component.scss']\n})\nexport class ApiCreateFormComponent implements OnInit {\n\n  apiConfiguration: any;\n  apiLabel: string;\n  apiTemplate: any;\n\n  @ViewChild(JsonEditorComponent)\n  configEditor: JsonEditorComponent;\n  public editorOptionsConfig: JsonEditorOptions;\n  public editorOptionsReturnTemplate: JsonEditorOptions;\n\n  constructor(private connection: BackendConnectionService, private _snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {\n    // Init jsonEdeitor for configuration file\n    this.editorOptionsConfig = new JsonEditorOptions();\n    this.editorOptionsConfig.mode = 'code';\n    this.editorOptionsConfig.modes = ['code'];\n    this.editorOptionsReturnTemplate = new JsonEditorOptions();\n    this.editorOptionsReturnTemplate.mode = 'text';\n    this.editorOptionsReturnTemplate.modes = ['text'];\n\n    this.apiTemplate = (apiTemplateFile as any).default;\n    this.apiLabel = '';\n    this.configEditor.data = this.apiTemplate;\n  }\n\n  onApiNameChange(): void {\n    this.apiTemplate = this.configEditor.get() as any;\n    this.apiTemplate.label = this.apiLabel;\n    this.configEditor.data = this.apiTemplate;\n    this.apiConfiguration = this.configEditor.get();\n  }\n\n  onJSONChange(): void {\n    this.apiTemplate = this.configEditor.get() as any;\n  }\n\n  save(): void {\n    const config = this.configEditor.get();\n    this.connection.addNewApi(config).toPromise().then(\n        () => {\n          this.openSnackBar('Saved');\n        },\n        (error) => {\n          this.openSnackBar('Unable to add new service');\n        }\n    );\n  }\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {duration: 2000});\n  }\n\n}\n","<p>\n    <b>Create a new custom api configuration</b>\n</p>\n<mat-form-field>\n    <mat-label>api label</mat-label>\n    <input matInput [(ngModel)]=\"apiLabel\" (ngModelChange)=\"onApiNameChange()\">\n</mat-form-field>\n<mat-tab-group class=\"group-container\" (selectedIndexChange)=\"onJSONChange()\">\n    <mat-tab label=\"Configuration File\">\n        <json-editor [options]=\"editorOptionsConfig\" [data]=\"apiTemplate\"></json-editor>\n    </mat-tab>\n</mat-tab-group>\n\n\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"apiConfiguration\" (click)=\"save()\" [disabled]=\"!apiConfiguration\">Create</button>\n</mat-dialog-actions>\n\n\n","import {ChangeDetectorRef, Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {GsbService} from '../../../_services/gsb.service';\nimport {MatStepper} from '@angular/material/stepper';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {MappingTableComponent} from '../builder/mapping-table/mapping-table.component';\nimport {LeaderLineAlignment} from '../../../_classes/gsb/lines';\nimport {MappingViewComponent} from './mapping-view/mapping-view.component';\nimport {ISuggestionEntry} from '../../../_interfaces/gsb/suggestion';\n\n@Component({\n    selector: 'app-mapping-suggestion-tool',\n    templateUrl: './mapping-suggestion-tool.component.html',\n    styleUrls: ['./mapping-suggestion-tool.component.scss']\n})\nexport class MappingSuggestionToolComponent implements OnInit {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    @Output() finishedEvent = new EventEmitter<any>();\n\n    constructor(public gsbService: GsbService, public cdr: ChangeDetectorRef, private _dialog: MatDialog) {\n    }\n\n    ngOnInit(): void {}\n\n    log() {\n        console.log(this.gsbService.suggestionContainer);\n    }\n\n    deleteSuggestion(index: number) {\n        this.gsbService.suggestionContainer.suggestions.splice(index, 1);\n    }\n\n}\n","<mat-horizontal-stepper #stepper>\n    <ng-container *ngFor=\"let suggestionMapping of gsbService.suggestionContainer.suggestions; let i=index\">\n        <mat-step>\n            <div class=\"header\">\n                <button mat-raised-button matStepperPrevious>Previous</button>\n                <mat-progress-bar [value]=\"((stepper.selectedIndex +1) / (gsbService.suggestionContainer.suggestions.length+1))*100\"></mat-progress-bar>\n                <ng-container *ngIf=\"stepper.selectedIndex == stepper.steps.length-1\">\n                    <button mat-raised-button color=\"warn\" (click)=\"finishedEvent.emit()\">Finish</button>\n                </ng-container>\n                <ng-container *ngIf=\"stepper.selectedIndex != stepper.steps.length-1\">\n                    <button mat-raised-button matStepperNext color=\"primary\">Next</button>\n                </ng-container>\n            </div>\n            <app-mapping-suggestion [suggestionMapping]=\"suggestionMapping\"></app-mapping-suggestion>\n            <div class=\"footer\">\n                <button mat-raised-button color=\"warn\" (click)=\"deleteSuggestion(i)\">Delete</button>\n            </div>\n        </mat-step>\n    </ng-container>\n</mat-horizontal-stepper>\n","import * as THREE from 'three';\n\nexport class PickHelper {\n    private raycaster: THREE.Raycaster;\n    private pickedObject;\n    private pickedObjectSavedColor;\n\n    constructor(layer: number = 0) {\n        this.raycaster = new THREE.Raycaster();\n        this.pickedObject = null;\n        this.pickedObjectSavedColor = 0;\n\n        this.raycaster.layers.set(layer);\n        this.raycaster.layers.enable(layer);\n    }\n\n    public pick(normalizedPosition, scene, camera): void {\n        // restore the color if there is a picked object\n        if (this.pickedObject) {\n            // this.pickedObject.material.emissive.setHex(this.pickedObjectSavedColor);\n            this.pickedObject.material.color.setHex(this.pickedObjectSavedColor);\n            this.pickedObject.children.forEach( (object) => object.visible = false );\n            this.pickedObject = undefined;\n\n        }\n\n        // cast a ray through the frustum\n        this.raycaster.setFromCamera(normalizedPosition, camera);\n        // get the list of objects the ray intersected\n        const intersectedObjects = this.raycaster.intersectObjects(scene.children);\n        // console.log(intersectedObjects);\n        if (intersectedObjects.length) {\n            // pick the first object. It's the closest one\n            this.pickedObject = intersectedObjects[0].object;\n            this.pickedObject.children.forEach( (object) => object.visible = true );\n            // save its color\n            // this.pickedObjectSavedColor = this.pickedObject.material.emissive.getHex();\n            this.pickedObjectSavedColor = this.pickedObject.material.color.getHex();\n            // set its emissive color to flashing red/yellow\n            // this.pickedObject.material.emissive.setHex(0xFF0000);\n            this.pickedObject.material.color.setHex(0xFF0000);\n        }\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport * as testWebEntity from '../../../assets/data/testEntities/apiEntity.json';\nimport {GsbService} from '../../_services/gsb.service';\n\n@Component({\n    selector: 'app-test',\n    templateUrl: './test.component.html',\n    styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n    testJson: any;\n\n    constructor(public gsbService: GsbService) {\n    }\n\n    ngOnInit(): void {\n      this.gsbService.debugMode();\n    }\n\n}\n","<app-mapping-suggestion-tool></app-mapping-suggestion-tool>\n","export class Metric {\n    private _name: string;\n    private _value: number;\n    private _metrics;\n\n    constructor(name: string, value: number) {\n        this._name = name;\n        this._value = value;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    get value(): number {\n        return this._value;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {IApi, IApisOverview, IWebserviceInformationShort, IWebservicesOverview} from '../../../_interfaces';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {WebserviceInformationComponent} from '../../webservices/webservice-information/webservice-information.component';\nimport {ApiInformationComponent} from '../api-information/api-information.component';\nimport {WebserviceCreateFormComponent} from '../../webservices/webservice-create-form/webservice-create-form.component';\nimport {ApiCreateFormComponent} from '../api-create-form/api-create-form.component';\n\n@Component({\n    selector: 'app-api-overview',\n    templateUrl: './api-overview.component.html',\n    styleUrls: ['./api-overview.component.scss']\n})\nexport class ApiOverviewComponent implements OnInit {\n\n    displayedColumns: string[] = ['index', 'label', 'name', 'format', 'actions'];\n    apis: Array<IApi>;\n\n    constructor(private connection: BackendConnectionService, private _dialog: MatDialog) {\n\n    }\n\n    ngOnInit(): void {\n        this.loadApis();\n    }\n\n    loadApis() {\n        this.connection.getApis().then((res: IApisOverview) => {\n            this.apis = res.apis;\n        });\n    }\n\n    openApiInformation(api: IApi): void {\n        console.log(api);\n\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data = api;\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n\n        const dialogRef = this._dialog.open(ApiInformationComponent, dialogConfig).afterClosed().toPromise().then(() => this.loadApis());\n    }\n\n    openCreateApi(): void {\n        const dialogConfig = new MatDialogConfig();\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n        const dialogRef = this._dialog.open(ApiCreateFormComponent, dialogConfig);\n        dialogRef.afterClosed().toPromise().then(() => this.loadApis());\n\n    }\n}\n","<div class=\"main\">\n    <button mat-raised-button color=\"primary\" (click)=\"openCreateApi()\">Add API</button>\n    <table mat-table [dataSource]=\"apis\" class=\"mat-elevation-z8\">\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"index\">\n            <th mat-header-cell *matHeaderCellDef> No.</th>\n            <td mat-cell *matCellDef=\"let element\">{{apis.indexOf(element)}}</td>\n        </ng-container>\n\n        <!-- label Column -->\n        <ng-container matColumnDef=\"label\">\n            <th mat-header-cell *matHeaderCellDef>Label</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n        </ng-container>\n\n        <!-- name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- format Column -->\n        <ng-container matColumnDef=\"format\">\n            <th mat-header-cell *matHeaderCellDef>Format</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.format}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-raised-button color=\"primary\"  (click)=\"openApiInformation(element)\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"See details\">preview</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n","import * as THREE from 'three';\n\n// https://threejsfundamentals.org/threejs/lessons/threejs-cleanup.html\n\nexport class ResourceTracker {\n    private resources;\n\n    constructor() {\n        this.resources = new Set();\n    }\n\n    track(resource) {\n        if (!resource) {\n            return resource;\n        }\n\n        // handle children and when material is an array of materials or\n        // uniform is array of textures\n        if (Array.isArray(resource)) {\n            resource.forEach(res => this.track(res));\n            return resource;\n        }\n\n        if (resource.dispose || resource instanceof THREE.Object3D) {\n            this.resources.add(resource);\n        }\n        if (resource instanceof THREE.Mesh) {\n            this.track(resource.geometry);\n            this.track(resource.material);\n            this.track(resource.children);\n        } else if (resource instanceof THREE.Material) {\n            // We have to check if there are any textures on the material\n            for (const value of Object.values(resource)) {\n                if (value instanceof THREE.Texture) {\n                    this.track(value);\n                }\n            }\n        }\n        return resource;\n    }\n\n    untrack(resource) {\n        this.resources.delete(resource);\n    }\n\n    dispose() {\n        for (const resource of this.resources) {\n            if (resource instanceof THREE.Object3D) {\n                if (resource.parent) {\n                    resource.parent.remove(resource);\n                }\n            }\n            if (resource.dispose) {\n                resource.dispose();\n            }\n        }\n        this.resources.clear();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alignment-viewer',\n  templateUrl: './alignment-viewer.component.html',\n  styleUrls: ['./alignment-viewer.component.scss']\n})\nexport class AlignmentViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>alignment-viewer works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {IWebservicesOverview, IWebserviceInformationShort} from '../../../_interfaces';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {WebserviceInformationComponent} from '../webservice-information/webservice-information.component';\nimport {FormGroup, Validators} from '@angular/forms';\nimport {WebserviceCreateFormComponent} from '../webservice-create-form/webservice-create-form.component';\n\n@Component({\n    selector: 'app-webservices-overview',\n    templateUrl: './webservices-overview.component.html',\n    styleUrls: ['./webservices-overview.component.scss']\n})\nexport class WebservicesOverviewComponent implements OnInit {\n    // displayedColumns: string[] = ['index', 'endpoint', 'path', 'status', 'actions'];\n    displayedColumns: string[] = ['index', 'name', 'path', 'status', 'actions'];\n    webservices: Array<IWebserviceInformationShort>;\n\n\n    constructor(private _connection: BackendConnectionService, private _dialog: MatDialog) {\n\n    }\n\n    ngOnInit(): void {\n        this.reloadData();\n    }\n\n    openWebserviceInformation(name: string): void {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data = name;\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n\n        const dialogRef = this._dialog.open(WebserviceInformationComponent, dialogConfig);\n        dialogRef.afterClosed().toPromise().then(() => this.reloadData());\n    }\n\n    openCreateWebservice(): void {\n        const dialogConfig = new MatDialogConfig();\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n        const dialogRef = this._dialog.open(WebserviceCreateFormComponent, dialogConfig);\n        dialogRef.afterClosed().toPromise().then(() => this.reloadData());\n\n    }\n\n    reloadData(): void {\n        this._connection.getWebservices().subscribe((res: IWebservicesOverview) => {\n            this.webservices = res.webservices;\n        });\n    }\n}\n","<div class=\"main\">\n    <button mat-raised-button color=\"primary\" (click)=\"openCreateWebservice()\">Add Webservice</button>\n    <table mat-table [dataSource]=\"webservices\" class=\"mat-elevation-z8\">\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"index\">\n            <th mat-header-cell *matHeaderCellDef>No.</th>\n            <td mat-cell *matCellDef=\"let element\">{{webservices.indexOf(element)}}</td>\n        </ng-container>\n\n        <!-- name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Label</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- path Column -->\n        <ng-container matColumnDef=\"path\">\n            <th mat-header-cell *matHeaderCellDef>Path</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.path}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef>Status</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <mat-icon *ngIf=\"element.status == 'offline'\" color=\"warn\" aria-label=\"true\">cloud_off</mat-icon>\n                <mat-icon *ngIf=\"element.status == 'online'\" color=\"primary\" aria-label=\"true\">cloud_queue</mat-icon>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-raised-button color=\"primary\" (click)=\"openWebserviceInformation(element.name)\" >\n                    <mat-icon aria-hidden=\"false\" aria-label=\"See details\">preview</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n    transform(wholeText: string, searchQuery: string): string {\n        if (!searchQuery) {\n            return wholeText;\n        }\n        const re = new RegExp(searchQuery, 'gi');\n        return wholeText.replace(re, '<mark>$&</mark>');\n    }\n\n}\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {ILocalDatabaseShortInfo, ILocalDatabasesOverview} from '../../../_interfaces';\nimport {JsonEditorComponent, JsonEditorOptions} from '@maaxgr/ang-jsoneditor';\nimport * as ace from 'ace-builds';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as webserviceTemplateFile from '../../../../assets/templates/webservice_template.json';\n\n@Component({\n    selector: 'app-webservice-create-form',\n    templateUrl: './webservice-create-form.component.html',\n    styleUrls: ['./webservice-create-form.component.scss']\n})\nexport class WebserviceCreateFormComponent implements OnInit, AfterViewInit {\n\n    webserviceConfiguration: any;\n    webserviceLabel: string;\n    webserviceTemplate: any;\n\n    @ViewChild('editor') private editor: ElementRef<HTMLElement>;\n    private aceEditor;\n\n    @ViewChild(JsonEditorComponent)\n    configEditor: JsonEditorComponent;\n    public editorOptionsConfig: JsonEditorOptions;\n    public editorOptionsReturnTemplate: JsonEditorOptions;\n    public returnTemplate = '';\n\n    viewAsString = false;\n\n    databases: Array<ILocalDatabaseShortInfo>;\n\n    constructor(private connection: BackendConnectionService, private _snackBar: MatSnackBar) {\n        this.connection.getDatabases().then((res: ILocalDatabasesOverview) => {\n            this.databases = res.databases;\n        });\n    }\n\n    ngOnInit(): void {\n        // Init jsonEdeitor for configuration file\n        this.editorOptionsConfig = new JsonEditorOptions();\n        this.editorOptionsConfig.mode = 'code';\n        this.editorOptionsConfig.modes = ['code'];\n\n        this.editorOptionsReturnTemplate = new JsonEditorOptions();\n        this.editorOptionsReturnTemplate.mode = 'text';\n\n        this.editorOptionsReturnTemplate.modes = ['text'];\n        this.webserviceTemplate = (webserviceTemplateFile as any).default;\n        this.webserviceLabel = '';\n    }\n\n    ngAfterViewInit(): void {\n        // Init ace editor for return template\n        ace.config.set('fontSize', '14px');\n        ace.config.set('basePath', 'https://unpkg.com/ace-builds@1.4.13/src-noconflict');\n\n        this.aceEditor = ace.edit(this.editor.nativeElement);\n        // aceEditor.setTheme('ace/theme/twilight');\n        this.aceEditor.session.setMode('ace/mode/ftl');\n        this.aceEditor.session.setValue('{}');\n        this.aceEditor.on('change', () => {\n            this.onReturnTemplateChange();\n        });\n    }\n\n    onReturnTemplateChange(): void {\n        this.returnTemplate = this.aceEditor.session.getValue();\n    }\n\n    onWebserviceNameChange(): void {\n        this.webserviceTemplate = this.configEditor.get() as any;\n        this.webserviceTemplate.webservice = '/' + this.webserviceLabel + '/{pathname}';\n        this.webserviceTemplate.returnTemplate = '/' + this.webserviceLabel + '/' + this.webserviceLabel + '.json.ftl';\n        this.configEditor.data = this.webserviceTemplate;\n        this.webserviceConfiguration = this.configEditor.get();\n    }\n\n    onJSONChange(): void {\n        this.webserviceTemplate = this.configEditor.get() as any;\n    }\n\n    onValueChange(): void {\n        this.configEditor.data = this.webserviceTemplate;\n        this.webserviceConfiguration = this.configEditor.get();\n    }\n\n    save(): void {\n        const config = this.configEditor.get();\n        const returnTemplate = this.aceEditor.session.getValue();\n        this.connection.addNewWebservice(this.webserviceLabel, config, returnTemplate).toPromise().then(\n            () => {\n                this.openSnackBar('Saved');\n            },\n            (error) => {\n                this.openSnackBar('Unable to add new service');\n            }\n        );\n    }\n\n    openSnackBar(message: string) {\n        this._snackBar.open(message, '', {duration: 2000});\n    }\n}\n","<script src=\"../../databases/db-create-form/db-create-form.component.ts\"></script><p>\n    <b>Create a new custom webservice</b>\n</p>\n<mat-tab-group class=\"group-container\" (selectedIndexChange)=\"onJSONChange()\">\n    <mat-tab label=\"Configuration Form\">\n        <div class=\"form-container\">\n            <mat-form-field>\n                <mat-label>webservice label</mat-label>\n                <!--                <mat-hint>short name without whitespace</mat-hint>-->\n                <input matInput [(ngModel)]=\"webserviceLabel\" (ngModelChange)=\"onWebserviceNameChange()\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>webservice-path</mat-label>\n                <input matInput [(ngModel)]=\"webserviceTemplate.webservice\" (ngModelChange)=\"onValueChange()\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>errorType</mat-label>\n                <!--                <mat-hint>Choose the error type</mat-hint>-->\n                <mat-select [(ngModel)]=\"webserviceTemplate.errorType\" (ngModelChange)=\"onValueChange()\">\n                    <mat-option value=\"jsonWithStatus\">jsonWithStatus</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>type</mat-label>\n                <mat-select [(ngModel)]=\"webserviceTemplate.type\" (ngModelChange)=\"onValueChange()\">\n                    <mat-option value=\"precise\">precise</mat-option>\n                    <mat-option value=\"fuzzy\">fuzzy</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>latency</mat-label>\n                <!--                <mat-hint>Time per request in s</mat-hint>-->\n                <input matInput  [(ngModel)]=\"webserviceTemplate.latency\"\n                       (ngModelChange)=\"onValueChange()\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>maxRequestsPerMinute</mat-label>\n                <input matInput  [(ngModel)]=\"webserviceTemplate.maxRequestsPerMinute\"\n                       (ngModelChange)=\"onValueChange()\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>maxRequests</mat-label>\n                <input matInput  [(ngModel)]=\"webserviceTemplate.maxRequests\"\n                       (ngModelChange)=\"onValueChange()\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>returnTemplate</mat-label>\n                <input matInput [(ngModel)]=\"webserviceTemplate.returnTemplate\" (ngModelChange)=\"onValueChange()\" disabled>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>database</mat-label>\n                <mat-select [(ngModel)]=\"webserviceTemplate.db\" (ngModelChange)=\"onValueChange()\">\n                    <mat-option value=\"None\">None</mat-option>\n                    <mat-option *ngFor=\"let entry of databases\"\n                                value=\"{{entry.label}}\">{{entry.label}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Configuration File\">\n        <json-editor [options]=\"editorOptionsConfig\" [data]=\"webserviceTemplate\"></json-editor>\n    </mat-tab>\n    <mat-tab label=\"Return Template\">\n        <div #editor style=\"width: 70vw; height: 70vh;\"></div>\n    </mat-tab>\n</mat-tab-group>\n\n\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"\" (click)=\"save()\"\n            [disabled]=\"!webserviceConfiguration\">Create\n    </button>\n</mat-dialog-actions>\n\n","import {MappingType} from '../../models';\nimport {ElementRef, Renderer2} from '@angular/core';\nimport {Utils} from '../Utils';\nimport {utils} from 'protractor';\nimport {GSBAlignment, GSBMapping} from '../../_interfaces/gsb/alignment';\n\ndeclare var LeaderLine: any; // used to access class of npm package leader-lines\n\nexport class LeaderLineMapping {\n    private _localElems: Map<string, HTMLElement>; // stores a map with id(md5 hash) and HTML element reference\n    private _webElems: Map<string, HTMLElement>; // stores a map with id(md5 hash) and HTML element reference\n    private _type: MappingType;\n    private _lines: Set<any>; // stores all LeaderLine instances\n    private renderer: Renderer2;\n\n    public constructor(type: MappingType,\n                       localElems: Map<string, HTMLElement> = new Map<string, HTMLElement>(),\n                       webElems: Map<string, HTMLElement> = new Map<string, HTMLElement>()) {\n        this._localElems = localElems;\n        this._webElems = webElems;\n        this._lines = new Set<any>();\n        this._type = type;\n    }\n\n    public static build(mapping: GSBMapping): LeaderLineMapping {\n        const localElems: Map<string, HTMLElement> = new Map<string, HTMLElement>();\n        const webElems: Map<string, HTMLElement> = new Map<string, HTMLElement>();\n\n        for (const localEntry of mapping.localEntries) {\n            const localElem: HTMLElement = document.getElementById(localEntry.hash);\n            localElems.set(localEntry.hash, localElem);\n        }\n\n        for (const webEntry of mapping.webEntries) {\n            const webElem: HTMLElement = document.getElementById(webEntry.hash);\n            webElems.set(webEntry.hash, webElem);\n        }\n\n        const newMapping: LeaderLineMapping = new LeaderLineMapping(mapping.type, localElems, webElems);\n\n        return newMapping;\n    }\n\n\n    /**\n     * Method sets the renderer.\n     * @param renderer - Renderer to use.\n     */\n    setRenderer(renderer: Renderer2): void {\n        this.renderer = renderer;\n    }\n\n    public addLocalElem(id: string, elem: HTMLElement) {\n        this._localElems.set(id, elem);\n    }\n\n    public addWebElem(id: string, elem: HTMLElement) {\n        this._webElems.set(id, elem);\n    }\n\n    public drawLines() {\n        this.deleteLines();\n        for (const localElem of this._localElems.values()) {\n            for (const webElem of this._webElems.values()) {\n                const line = new LeaderLine(\n                    localElem,\n                    webElem\n                );\n                line.setOptions({\n                    startSocket: 'right', endSocket: 'left', color: 'gray'\n                });\n\n                switch (this._type) {\n                    case MappingType.LocalToWeb:\n                        line.setOptions({\n                            startPlug: 'behind', endPlug: 'arrow1'\n                        });\n                        break;\n                    case MappingType.WebToLocal:\n                        line.setOptions({\n                            startPlug: 'arrow1', endPlug: 'behind'\n                        });\n                        break;\n                    case MappingType.Bidirectional:\n                        line.setOptions({\n                            startPlug: 'arrow1', endPlug: 'arrow1'\n                        });\n                        break;\n                }\n\n                this._lines.add(line);\n                localElem.classList.add('used');\n                webElem.classList.add('used');\n                line.position();\n            }\n        }\n    }\n\n    public deleteLines(): void {\n        for (const line of this._lines) {\n            line.remove();\n        }\n        this._lines.clear();\n    }\n\n    public async updateLines(): Promise<void> {\n        await Utils.delay(10);\n        for (const line of this._lines) {\n            if (line.start.classList.contains('hide') || line.end.classList.contains('hide')) {\n                line.hide('none');\n            } else {\n                line.show();\n            }\n            line.position();\n        }\n    }\n\n    /**\n     * Method sets the color of the line object's line.\n     * @param color - Color to set.\n     * @private\n     */\n    private setLineColor(color: string) {\n        for (const line of this._lines) {\n            line.setOptions({\n                color\n            });\n        }\n    }\n\n    /**\n     * Method sets the type of the mapping.\n     * @private\n     * @param type\n     */\n    private setMappingType(type: MappingType) {\n        this._type = type;\n        this.drawLines();\n    }\n\n    get localElems(): Map<string, HTMLElement> {\n        return this._localElems;\n    }\n\n    get webElems(): Map<string, HTMLElement> {\n        return this._webElems;\n    }\n\n    get type(): MappingType {\n        return this._type;\n    }\n\n    get lines(): Set<any> {\n        return this._lines;\n    }\n}\n\nexport class LeaderLineAlignment {\n\n    private readonly _mappings: Set<LeaderLineMapping>;\n    private renderer: Renderer2;\n\n    constructor(render: Renderer2) {\n        this._mappings = new Set<LeaderLineMapping>();\n        this.renderer = render;\n    }\n\n    get mappings(): Set<LeaderLineMapping> {\n        return this._mappings;\n    }\n\n    public static build(alignment: GSBAlignment, render: Renderer2): LeaderLineAlignment {\n        const leaderLine = new LeaderLineAlignment(render);\n        for (const mapping of alignment.mappings) {\n            const localElems: Map<string, HTMLElement> = new Map<string, HTMLElement>();\n            const webElems: Map<string, HTMLElement> = new Map<string, HTMLElement>();\n\n            for (const localEntry of mapping.localEntries) {\n                const localElem: HTMLElement = document.getElementById(localEntry.hash);\n\n                localElems.set(localEntry.hash, localElem);\n            }\n\n            for (const webEntry of mapping.webEntries) {\n                const webElem: HTMLElement = document.getElementById(webEntry.hash);\n                webElems.set(webEntry.hash, webElem);\n            }\n\n            const newMapping: LeaderLineMapping = new LeaderLineMapping(mapping.type, localElems, webElems);\n\n            leaderLine.addMapping(newMapping, false);\n        }\n\n        return leaderLine;\n    }\n\n    addMapping(mapping: LeaderLineMapping, draw: boolean = false): void {\n        this._mappings.add(mapping);\n        mapping.setRenderer(this.renderer);\n        if (draw) {\n            mapping.drawLines();\n        }\n    }\n\n    addGSBMapping(mapping: GSBMapping): void {\n        const newMapping: LeaderLineMapping = LeaderLineMapping.build(mapping);\n        this.addMapping(newMapping);\n    }\n\n    deleteMapping(): void {\n\n    }\n\n    drawLines(): void {\n        for (const mapping of this._mappings) {\n            mapping.drawLines();\n        }\n    }\n\n    updateLines(): void {\n        for (const mapping of this._mappings) {\n            mapping.updateLines();\n        }\n    }\n\n    hideLines(): void {\n        for (const mapping of this._mappings) {\n            for (const line of mapping.lines) {\n                line.hide('none');\n                line.position();\n            }\n        }\n    }\n\n    showLines(): void {\n        this.updateLines();\n    }\n\n    deleteLines(): void {\n        for (const mapping of this._mappings) {\n            mapping.deleteLines();\n        }\n    }\n\n    removeMapping(mapping: LeaderLineMapping): void {\n        this.mappings.delete(mapping);\n        this.deleteLines();\n        this.drawLines();\n        Utils.delay(50);\n        this.updateLines();\n    }\n}\n\n","export * from './AlignmentCube/IAlignment';\nexport * from './settings/IWebserviceOverview';\nexport * from './settings/IWebserviceConfiguration';\nexport * from './settings/IDatabase';\nexport * from './settings/IApis';\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AlignmentCubeService} from '../../engine/alignment-cube.service';\n\n@Component({\n    selector: 'app-ui-infobar-bottom',\n    templateUrl: './ui-infobar-bottom.component.html'\n})\nexport class UiInfobarBottomComponent implements OnInit {\n\n    public constructor(public engineService: AlignmentCubeService) {\n    }\n\n    public ngOnInit(): void {\n    }\n\n}\n","<p>\n  ui-infobar-bottom works!\n</p>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {\n    IApi,\n    ILocalDatabase,\n    ILocalDatabaseSchema,\n    ILocalDatabaseShortInfo,\n    IWebserviceConfiguration,\n    IWebserviceDetails\n} from '../_interfaces';\nimport {GSBMapping} from '../_interfaces/gsb/alignment';\nimport {IFinalAlignment} from '../_interfaces/gsb/suggestion';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BackendConnectionService {\n\n    constructor(private httpClient: HttpClient) {\n    }\n\n    async getApis() {\n        return await this.httpClient.get(environment.baseUrl + environment.apiManagerEndpoint).toPromise();\n    }\n\n    async getWebserviceConfiguration(name: string) {\n        const body = {\n            mode: 'webserviceInformation',\n            name\n        };\n        return this.httpClient.post<IWebserviceDetails>(environment.baseUrl + environment.webserviceManagerEndpoint, body).toPromise();\n    }\n\n    async getLocalDatabaseData(dbName: string) {\n        let queryParams = new HttpParams();\n        queryParams = queryParams.append('label', dbName);\n        return await this.httpClient.get<ILocalDatabase>(\n            environment.baseUrl + environment.dbManagerEndpoint,\n            {params: queryParams}\n        ).toPromise();\n    }\n\n    async getWebDatabaseData(apiName: string): Promise<IApi> {\n        let queryParams = new HttpParams();\n        queryParams = queryParams.append('label', apiName);\n        return await this.httpClient.get<IApi>(\n            environment.baseUrl + environment.apiManagerEndpoint,\n            {params: queryParams}\n        ).toPromise<IApi>();\n    }\n\n    getWebEntity(apiName: string, value: string, regex: any[]) {\n\n        const body = {\n            label: apiName,\n            value,\n            regex\n        };\n\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.apiCallEndpoint,\n            body\n        );\n    }\n\n    // Databases\n    async getDatabases() {\n        return await this.httpClient.get(environment.baseUrl + environment.dbManagerEndpoint).toPromise();\n    }\n\n    getLocalDatabaseSchema(dbName: string): Observable<ILocalDatabaseSchema> {\n        let queryParams = new HttpParams();\n        queryParams = queryParams.append('label', dbName);\n        return this.httpClient.get<ILocalDatabaseSchema>(\n            environment.baseUrl + environment.dbSchemaEndpoint,\n            {params: queryParams}\n        );\n    }\n\n    getLocalEntity(dbName: string, predicate: string, inputType: string, limit: number) {\n        const body = {\n            label: dbName,\n            predicate,\n            inputType,\n            // inputType: 'https://dblp.org/rdf/schema-2020-07-01#Publication',\n            // inputType: 'http://example/com/crossref/Publication',\n            limit\n        };\n\n        return this.httpClient.post(\n            environment.baseUrl + environment.dbKnowledgeBaseEndpoint,\n            body\n        );\n    }\n\n    updateDatabase(oldDb, newDb) {\n        const body = {\n            mode: 'update',\n            db: oldDb,\n            newDb\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.dbManagerEndpoint,\n            body\n        );\n    }\n\n    deleteDatabase(label: string) {\n        const body = {\n            mode: 'delete',\n            label\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.dbManagerEndpoint,\n            body\n        );\n    }\n\n    addNewDatabase(config){\n        const body = {\n            mode: 'new',\n            db: config\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.dbManagerEndpoint,\n            body\n        );\n    }\n\n    // Webservices\n    getWebservices() {\n        return this.httpClient.get(environment.baseUrl + environment.webserviceManagerEndpoint);\n    }\n\n    addNewWebservice(label: string, configuration, returnTemplate: string) {\n        const body = {\n            name: label,\n            mode: 'new',\n            configuration,\n            returnTemplate\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.webserviceManagerEndpoint,\n            body\n        );\n    }\n\n    updateWebservice(label: string, configuration, returnTemplate: string) {\n        const lastIndex = configuration.returnTemplate.lastIndexOf('\\\\');\n        const returnTemplateName = configuration.returnTemplate.substring(lastIndex + 1);\n\n        const body = {\n            name: label,\n            mode: 'update',\n            configuration,\n            returnTemplate,\n            returnTemplateName\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.webserviceManagerEndpoint,\n            body\n        );\n    }\n\n    deleteWebservice(webserviceName) {\n        const body = {\n            mode: 'delete',\n            name: webserviceName\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.webserviceManagerEndpoint,\n            body\n        );\n    }\n\n    // APIs\n    updateApi(oldApi, newApi) {\n        const body = {\n            mode: 'update',\n            api: oldApi,\n            newApi\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.apiManagerEndpoint,\n            body\n        );\n    }\n\n    deleteApi(label: string) {\n        const body = {\n            mode: 'delete',\n            label\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.apiManagerEndpoint,\n            body\n        );\n    }\n\n    addNewApi(config){\n        const body = {\n            mode: 'new',\n            api: config\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.apiManagerEndpoint,\n            body\n        );\n    }\n\n    // GSB\n    postToFlatJson(json: any) {\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.apiToFlatJson,\n            json\n        );\n    }\n\n    postJsonDiff(original: any, modified: any) {\n        const body = {\n            original,\n            modified\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.jsonDiffEndpoint,\n            body\n        );\n    }\n\n    postSuggestions(mappings: GSBMapping[]) {\n        const body = {\n            mappings\n        };\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.gsbSuggestions,\n            body\n        );\n    }\n\n    postFinalAlignment(finalAlignment: IFinalAlignment) {\n        return this.httpClient.post<any>(\n            environment.baseUrl + environment.gsbFinalAlignment,\n            {webLabel: finalAlignment.webLabel, localLabel: finalAlignment.localLabel, alignment: finalAlignment}\n        );\n    }\n}\n","import {Md5} from 'ts-md5';\nimport {settings} from '../../assets/settings';\n\nexport class Utils {\n\n    /**\n     * Methods sets thread to sleep for an amount of milliseconds.\n     * @param ms - Amount of milliseconds to sleep.\n     * @private\n     */\n    public static delay(ms: number) {\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n\n    /**\n     * Returns md5 hash of string.\n     * @param str - String to hash.\n     */\n    getMd5Hash(str: string): string {\n        return Md5.hashStr(str);\n    }\n\n    addHashToLocalEntity(entity: any): void{\n        for (const entry of entity.valueList[0].fullKnowledge){\n            entry.hash = Md5.hashStr(entry.path + entry.value).toString();\n        }\n    }\n\n    addHashToWebEntity(entity: any): void{\n        console.log(entity);\n        for (const entry of entity.dictionary){\n            entry.hash = Md5.hashStr(entry.path + entry.value).toString();\n        }\n    }\n\n    formatApiPath(path: string): string {\n        const context: string[] = path.match(settings.regexApiSearch);\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexApiReplace, '');\n        }\n        // remove wildcards\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexApiReplaceWildcard, '');\n        }\n        return context.join();\n    }\n\n    formatLocalPathShort(path: string): string {\n        const context: string[] = path.match(settings.regexRelSearch);\n        for (let i = 0; i < context.length; i++) {\n            context[i] = context[i].replace(settings.regexRelReplace, '');\n        }\n        return context.join();\n    }\n\n    formatLocalPath(path: string): string {\n        const paths: string[] = path.split(', ');\n        const formattedPaths = [];\n        for (const subpath of paths){\n            formattedPaths.push(this.formatLocalPathShort(subpath));\n        }\n        return formattedPaths.join(' 🡢 ');\n    }\n\n    joinRelPaths(paths: string[]): string {\n        return paths.join(settings.joinSymbol);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {StartPageComponent} from './pages/start-page/start-page.component';\nimport {DataCubePageComponent} from './pages/data-cube-page/data-cube-page.component';\nimport {SettingPageComponent} from './pages/setting-page/setting-page.component';\nimport {AlignmentSelectorComponent} from './_components/alignment-cube/alignment-selector';\nimport {SchemaComponent} from './pages/schema-page/schema.component';\nimport {WebservicesOverviewComponent} from './_components/webservices/webservices-overview/webservices-overview.component';\nimport {GoldStandardBuilderComponent} from './_components/gold-standard-builder/gold-standard-builder.component';\nimport {BuilderComponent} from './_components/gold-standard-builder/builder/builder.component';\nimport {TestComponent} from './pages/test/test.component';\nimport {GsbPageComponent} from './pages/gsb-page/gsb-page.component';\nimport {AlignmentViewerPageComponent} from './pages/alignment-viewer-page/alignment-viewer-page.component';\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'start', pathMatch: 'full'},\n    {path: 'start', component: StartPageComponent},\n    {path: 'dataCube', component: DataCubePageComponent},\n    {path: 'settings', component: SettingPageComponent},\n    {path: 'currentTest', component: AlignmentSelectorComponent},\n    {path: 'schema', component: SchemaComponent},\n    {path: 'goldStandardBuilder', component: GoldStandardBuilderComponent},\n    {path: 'gsbPage', component: GsbPageComponent},\n    {path: 'webservicesOverview', component: WebservicesOverviewComponent},\n    {path: 'test', component: BuilderComponent},\n    {path: 'testPage', component: TestComponent},\n    {path: 'viewer', component: AlignmentViewerPageComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import * as THREE from 'three';\nimport {LineSegments, OrthographicCamera, PerspectiveCamera, Scene} from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {ElementRef, Injectable, NgZone, OnDestroy} from '@angular/core';\nimport {CSS2DRenderer} from 'three/examples/jsm/renderers/CSS2DRenderer';\n\nimport {ViewMode} from '../../../models';\nimport {PickHelper, ResourceTracker, SceneLoader} from '../../../_classes/threeJsHelper';\nimport {AlignmentContainer} from '../../../_classes/alignment';\nimport {PathFormatterService} from '../../../_services';\n\n@Injectable({providedIn: 'root'})\nexport class AlignmentCubeService implements OnDestroy {\n\n    public constructor(private ngZone: NgZone, public labelFormatter: PathFormatterService) {\n        this.pickPosition = {x: 0, y: 0};\n        this.cubeTracker = new ResourceTracker();\n        this.resTracker = new ResourceTracker();\n        this.labelTracker = new ResourceTracker();\n    }\n\n    // states\n    private _viewMode: ViewMode;\n    private _selectedMetric: string;\n    showFullApiPath = true;\n    showFullRelationPath = true;\n\n    // variables\n    private rayCasterWorkingLayer = 1;\n    private cameraWidth = 10;\n    private frameId: number = null;\n\n    private _selectedAlignmentIndex = 0;\n    private _selectedApiPathIndex = 0;\n    private _selectedRelationPathLabelIndex = 0;\n\n    // Data\n    private _alignmentContainer: AlignmentContainer;\n    private sceneLoader: SceneLoader;\n\n    // THREE basic components\n    private canvas: HTMLCanvasElement;\n    private renderer: THREE.WebGLRenderer;\n    private labelRenderer: CSS2DRenderer;\n    private _scene: THREE.Scene;\n    private light: THREE.Light;\n\n    // Helpers\n    private _orbitControls: OrbitControls;\n    private gridHelper: THREE.GridHelper;\n    private cameraHelper: THREE.CameraHelper;\n    private axisHelper: THREE.AxesHelper;\n\n    // Cameras\n    private cameraPersp: THREE.PerspectiveCamera;\n    private cameraOrtho: THREE.OrthographicCamera;\n    private _currentCamera: THREE.PerspectiveCamera | THREE.OrthographicCamera;\n\n    // 3D Objects\n    private _outlineBox: THREE.LineSegments;\n\n    // Picking Helper\n    private pickHelper: PickHelper;\n    private pickPosition: { x, y };\n\n    // Ressource Tracker\n    private cubeTracker: ResourceTracker;\n    private resTracker: ResourceTracker;\n    private labelTracker: ResourceTracker;\n\n    public ngOnDestroy(): void {\n        if (this.frameId != null) {\n            cancelAnimationFrame(this.frameId);\n        }\n    }\n\n    public initialize(canvas: ElementRef<HTMLCanvasElement>): void {\n        // The first step is to get the reference of the canvas element from our HTML document\n        this._viewMode = ViewMode.View3D;\n\n        this.canvas = canvas.nativeElement;\n\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const aspect = width / height;\n\n        // renderer\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: this.canvas,\n            alpha: true,    // transparent background\n            antialias: true // smooth edges\n        });\n        this.renderer.setSize(width, height);\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n\n        // labelrender\n        this.labelRenderer = new CSS2DRenderer();\n        this.labelRenderer.setSize(width, height);\n\n        document.getElementById('engine-wrapper-label').appendChild(this.labelRenderer.domElement);\n\n        // create the scene\n        this._scene = new THREE.Scene();\n\n        // cameras\n        this.cameraPersp = new THREE.PerspectiveCamera(75, aspect, 0.01, 100);\n        this.cameraOrtho = new THREE.OrthographicCamera(\n            -this.cameraWidth * aspect, this.cameraWidth * aspect, this.cameraWidth, -this.cameraWidth, 0.01, 100\n        );\n        this._currentCamera = this.cameraPersp;\n        this._currentCamera.position.set(3, 5, 15);\n        this._scene.add(this._currentCamera);\n\n        // soft white light\n        this.light = new THREE.AmbientLight(0xFFFFFF, 1);\n        this.light.position.set(-10, 0, 10);\n        const light2 = new THREE.DirectionalLight(0xFFFFFF, 0.8);\n        light2.position.set(0, 100, 10);\n        this._scene.add(this.light);\n        this._scene.add(light2);\n\n        // controls\n        this._orbitControls = new OrbitControls(this._currentCamera, this.labelRenderer.domElement);\n        this._orbitControls.minDistance = 5;\n        this._orbitControls.maxDistance = 50;\n\n        this.pickHelper = new PickHelper(this.rayCasterWorkingLayer);\n        this.clearPickPosition();\n    }\n\n    /**\n     * Loads the scene for the specified alignment data\n     *\n     * @param alignmentContainer - Alignment data to visualize\n     */\n    public loadSceneForAlignmentContainer(alignmentContainer: AlignmentContainer) {\n        this._alignmentContainer = alignmentContainer;\n\n        if (this.sceneLoader === undefined) {\n            this.sceneLoader = new SceneLoader(this, this.labelFormatter);\n        }\n\n        if (this._selectedMetric === undefined) {\n            this._selectedMetric = alignmentContainer.metricsNames.values().next().value;\n        }\n\n        switch (this._viewMode) {\n            case ViewMode.View2DAlignment:\n                this.sceneLoader.load2DSceneAlignment();\n                break;\n            case ViewMode.View3D:\n                this.sceneLoader.load3DScene();\n                break;\n            case ViewMode.View2DApi:\n                this.sceneLoader.load2DSceneApi();\n                break;\n            case ViewMode.View2DRelation:\n                this.sceneLoader.load2DSceneRelation();\n                break;\n        }\n    }\n\n    /**\n     * Contains all functions for ongoing changes.\n     */\n    public animate(): void {\n        // We have to run this outside angular zones,\n        // because it could trigger heavy changeDetection cycles.\n        this.ngZone.runOutsideAngular(() => {\n            if (document.readyState !== 'loading') {\n                this.render();\n            } else {\n                window.addEventListener('DOMContentLoaded', () => {\n                    this.render();\n                });\n            }\n\n            // Desktop\n            window.addEventListener('mousemove', (event) => {\n                this.setPickPosition(event);\n            });\n            window.addEventListener('mouseout', () => {\n                this.clearPickPosition();\n            });\n            window.addEventListener('mouseleave', () => {\n                this.clearPickPosition();\n            });\n            // Mobile\n            window.addEventListener('touchstart', (event) => {\n                this.setPickPosition(event);\n            });\n            window.addEventListener('touchmove', (event) => {\n                this.setPickPosition(event);\n            });\n            window.addEventListener('touchcancel', () => {\n                this.clearPickPosition();\n            });\n            window.addEventListener('touchend', () => {\n                this.clearPickPosition();\n            });\n\n            window.addEventListener('resize', () => {\n                this.resize();\n            });\n        });\n    }\n\n    /**\n     * Contains all function for correct rendering the scene.\n     * @private\n     */\n    private render(): void {\n        this.frameId = requestAnimationFrame(() => {\n            this.render();\n        });\n\n        this.pickHelper.pick(this.pickPosition, this._scene, this._currentCamera);\n\n        this.renderer.clear();\n        this._currentCamera.lookAt(this._outlineBox.position);\n        this.renderer.render(this._scene, this._currentCamera);\n        this.labelRenderer.render(this._scene, this._currentCamera);\n    }\n\n    /**\n     * Methode to resize the canvas\n     * @private\n     */\n    private resize(): void {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const aspect = width / height;\n\n        this.cameraPersp.aspect = aspect;\n        this.cameraPersp.updateProjectionMatrix();\n\n        this.cameraOrtho.left = -this.cameraWidth * aspect;\n        this.cameraOrtho.right = this.cameraWidth * aspect;\n        this.cameraOrtho.updateProjectionMatrix();\n\n        this.renderer.setSize(width, height);\n        this.labelRenderer.setSize(width, height);\n    }\n\n    public resetOrbitControls() {\n        this._orbitControls.reset();\n        this._orbitControls.target.copy(this._outlineBox.position.clone());\n    }\n\n    public setOrbitControlPosition(): void {\n        this._currentCamera.lookAt(this._outlineBox.position);\n        this._orbitControls.update();\n    }\n\n    /**\n     * Swap camera between perspective and orthographic.\n     */\n    public changeCamera(): void {\n        const position = this._currentCamera.position.clone();\n\n        this._currentCamera = (this._currentCamera instanceof THREE.PerspectiveCamera) ? this.cameraOrtho : this.cameraPersp;\n        this._currentCamera.position.copy(position);\n\n        this._orbitControls.object = this._currentCamera;\n\n        this._currentCamera.lookAt(this._orbitControls.target.x, this._orbitControls.target.y, this._orbitControls.target.z);\n\n        this.resize();\n    }\n\n    public toggleGridHelper(size: number = 10, divisions: number = 10) {\n        if (this.gridHelper === null || this.gridHelper === undefined) {\n            this.gridHelper = new THREE.GridHelper(size, divisions);\n            this._scene.add(this.gridHelper);\n        } else {\n            this._scene.remove(this.gridHelper);\n            this.gridHelper = null;\n        }\n    }\n\n    public toggleAxisHelper(size: number = 10) {\n        if (this.axisHelper === null || this.axisHelper === undefined) {\n            this.axisHelper = new THREE.AxesHelper(size);\n            this._scene.add(this.axisHelper);\n        } else {\n            this._scene.remove(this.axisHelper);\n            this.axisHelper = null;\n        }\n    }\n\n    public toggleCameraHelper() {\n        if (this.cameraHelper === null || this.cameraHelper === undefined) {\n            if (this._currentCamera instanceof THREE.PerspectiveCamera) {\n                this.cameraHelper = new THREE.CameraHelper(this.cameraOrtho);\n            } else {\n                this.cameraHelper = new THREE.CameraHelper(this.cameraPersp);\n            }\n            this._scene.add(this.cameraHelper);\n        } else {\n            this._scene.remove(this.cameraHelper);\n            this.cameraHelper = null;\n        }\n    }\n\n    /**\n     * Picker Functions\n     */\n    public getCanvasRelativePosition(event) {\n        const rect = this.canvas.getBoundingClientRect();\n        return {\n            x: (event.clientX - rect.left) * this.canvas.width / rect.width,\n            y: (event.clientY - rect.top) * this.canvas.height / rect.height,\n        };\n    }\n\n    public setPickPosition(event): void {\n        const pos = this.getCanvasRelativePosition(event);\n        this.pickPosition.x = (pos.x / this.canvas.width) * 2 - 1;\n        this.pickPosition.y = (pos.y / this.canvas.height) * -2 + 1;  // note we flip Y\n    }\n\n    public clearPickPosition(): void {\n        // unlike the mouse which always has a position\n        // if the user stops touching the screen we want\n        // to stop picking. For now we just pick a value\n        // unlikely to pick something\n        this.pickPosition.x = -100000;\n        this.pickPosition.y = -100000;\n    }\n\n    public clearScene() {\n        this.labelTracker.dispose();\n        this.cubeTracker.dispose();\n        this.resTracker.dispose();\n\n        this.sceneLoader.clearScene();\n    }\n\n    public reloadScene() {\n        this.clearScene();\n        this.loadSceneForAlignmentContainer(this.alignmentContainer);\n    }\n\n    public setMetric(metric: string) {\n        this._selectedMetric = metric;\n        this.reloadScene();\n    }\n\n    public removeAxisLabels(): void {\n        this.labelTracker.dispose();\n    }\n\n    public setShowApiFullPath(value: boolean) {\n        this.showFullApiPath = value;\n        this.reloadScene();\n    }\n\n    public setShowRelationFullPath(value: boolean) {\n        this.showFullRelationPath = value;\n        this.reloadScene();\n    }\n\n    public setSelectedDataSet(index: number) {\n        if (index >= 0 && index < this.alignmentContainer.alignments.length) {\n            this._selectedAlignmentIndex = index;\n            this.reloadScene();\n        }\n    }\n\n    public setSelectedApiLabel(index: number) {\n        if (index >= 0 && index < this.alignmentContainer.apiLabels.length) {\n            this._selectedApiPathIndex = index;\n            this.reloadScene();\n        }\n    }\n\n    public setSelectedRelationPathLabel(index: number) {\n        console.log(`${index} -> ${this.alignmentContainer.relationPathLabels[index].join()}`);\n\n        if (index >= 0 && index < this.alignmentContainer.relationPathLabels.length) {\n            console.log('Changed index to ' + index);\n            this._selectedRelationPathLabelIndex = index;\n            this.reloadScene();\n        }\n    }\n\n    public changeViewMode(mode: ViewMode) {\n        this._viewMode = mode;\n        this.reloadScene();\n    }\n\n    set alignmentContainer(model: AlignmentContainer) {\n        this._alignmentContainer = model;\n    }\n\n    get alignmentContainer(): AlignmentContainer {\n        return this._alignmentContainer;\n    }\n\n    get viewMode(): ViewMode {\n        return this._viewMode;\n    }\n\n    get currentCamera(): PerspectiveCamera | OrthographicCamera {\n        return this._currentCamera;\n    }\n\n    get orbitControls(): OrbitControls {\n        return this._orbitControls;\n    }\n\n    get outlineBox(): LineSegments {\n        return this._outlineBox;\n    }\n\n    set outlineBox(value: LineSegments) {\n        this._outlineBox = value;\n    }\n\n    get selectedAlignmentIndex(): number {\n        return this._selectedAlignmentIndex;\n    }\n\n    get selectedApiPathIndex(): number {\n        return this._selectedApiPathIndex;\n    }\n\n    get selectedRelationPathLabelIndex(): number {\n        return this._selectedRelationPathLabelIndex;\n    }\n\n    get selectedMetric(): string {\n        return this._selectedMetric;\n    }\n\n    get scene(): Scene {\n        return this._scene;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {BackendConnectionService} from '../../../_services/backend-connection.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {ILocalDatabaseShortInfo, ILocalDatabasesOverview} from '../../../_interfaces';\nimport {DbInformationComponent} from '../db-information/db-information.component';\nimport {ApiCreateFormComponent} from '../../apis/api-create-form/api-create-form.component';\nimport {DbCreateFormComponent} from '../db-create-form/db-create-form.component';\n\n@Component({\n    selector: 'app-databases-overview',\n    templateUrl: './databases-overview.component.html',\n    styleUrls: ['./databases-overview.component.scss']\n})\nexport class DatabasesOverviewComponent implements OnInit {\n    displayedColumns: string[] = ['index', 'label', 'path', 'identifierMap', 'actions'];\n    databases: Array<ILocalDatabaseShortInfo>;\n\n    constructor(private connection: BackendConnectionService, private _dialog: MatDialog) {\n        this.loadDBs();\n    }\n\n    ngOnInit(): void {\n    }\n\n    loadDBs() {\n        this.connection.getDatabases().then((res: ILocalDatabasesOverview) => {\n            this.databases = res.databases;\n        });\n    }\n\n    openDbInformation(db: ILocalDatabaseShortInfo): void {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data = db;\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n\n        const dialogRef = this._dialog.open(DbInformationComponent, dialogConfig).afterClosed().toPromise().then(\n            () => this.loadDBs()\n        );\n    }\n\n    openCreateDB(): void {\n        const dialogConfig = new MatDialogConfig();\n        // disable closing by clicking outside of dialog window\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.maxHeight = '100vh';\n        dialogConfig.maxWidth = '90vw';\n        const dialogRef = this._dialog.open(DbCreateFormComponent, dialogConfig);\n        dialogRef.afterClosed().toPromise().then(() => this.loadDBs());\n\n    }\n\n}\n","<div class=\"main\">\n    <button mat-raised-button color=\"primary\" (click)=\"openCreateDB()\">Add Database</button>\n    <table mat-table [dataSource]=\"databases\" class=\"mat-elevation-z8\">\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"index\">\n                <th mat-header-cell *matHeaderCellDef> No.</th>\n                <td mat-cell *matCellDef=\"let element\">{{databases.indexOf(element)}}</td>\n            </ng-container>\n\n            <!-- label Column -->\n            <ng-container matColumnDef=\"label\">\n                <th mat-header-cell *matHeaderCellDef>Label</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.label}} </td>\n            </ng-container>\n\n            <!-- path Column -->\n            <ng-container matColumnDef=\"path\">\n                <th mat-header-cell *matHeaderCellDef>Path</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.path}} </td>\n            </ng-container>\n\n            <!-- identifierMap Column -->\n            <ng-container matColumnDef=\"identifierMap\">\n                <th mat-header-cell *matHeaderCellDef>Identifier Map</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.identifierMap}} </td>\n            </ng-container>\n\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef>Actions</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-raised-button color=\"primary\" (click)=\"openDbInformation(element)\">\n                        <mat-icon aria-hidden=\"false\" aria-label=\"See details\">preview</mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr [id]=\"i\" mat-row *matRowDef=\"let row; let i = index; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n","export * from './ui-infobar-bottom.component';\n","export * from './ui-infobar-top.component';\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {AlignmentCubeService} from './engine/alignment-cube.service';\nimport * as scigraph_v1 from '../../../assets/data/alignments/example/scigraph_v1.json';\nimport * as scigraph_v2 from '../../../assets/data/alignments/example/scigraph_v2.json';\nimport * as scigraph_v3 from '../../../assets/data/alignments/example/scigraph_v3.json';\nimport * as scigraph_v4 from '../../../assets/data/alignments/example/scigraph_v4.json';\nimport * as doris from '../../../assets/data/alignments/filipo/sample_dblp_sample_arxiv.json';\nimport * as filipo from '../../../assets/data/alignments/doris/sample_dblp_sample_arxiv_overlap.json';\nimport {IAlignment} from '../../_interfaces';\nimport {AlignmentContainer} from '../../_classes/alignment';\n\n// import alignmentArxiv from ''\n\n@Component({\n    selector: 'app-alignment-cube',\n    templateUrl: './alignment-cube.component.html',\n    styleUrls: ['./alignment-cube.component.scss']\n})\nexport class AlignmentCubeComponent implements OnInit {\n\n    @ViewChild('rendererCanvas', {static: true})\n    public rendererCanvas: ElementRef<HTMLCanvasElement>;\n\n    @ViewChild('labelRendererCanvas', {static: true})\n    public labelRendererCanvas: ElementRef<HTMLCanvasElement>;\n\n    selectedAlignments: IAlignment[];\n\n    alignmentModel: AlignmentContainer = new AlignmentContainer();\n\n    showAddAlignmentComponent: boolean;\n    animationStarted: boolean;\n\n\n    public constructor(public engServ: AlignmentCubeService) {\n    }\n\n    public ngOnInit(): void {\n        this.showAddAlignmentComponent = true;\n        this.animationStarted = false;\n        this.selectedAlignments = [];\n        this.engServ.initialize(this.rendererCanvas);\n    }\n\n    onAlignmentAdded(alignment: IAlignment): void {\n        this.alignmentModel.addAlignment(alignment);\n    }\n\n    public startAnimation() {\n        this.showAddAlignmentComponent = false;\n        this.animationStarted = true;\n\n        this.engServ.loadSceneForAlignmentContainer(this.alignmentModel);\n\n        this.engServ.animate();\n    }\n\n    public startAnimationExample() {\n        this.showAddAlignmentComponent = false;\n        this.animationStarted = true;\n\n        const sciV1: IAlignment = (scigraph_v1 as any).default;\n        const sciV2: IAlignment = (scigraph_v2 as any).default;\n        const sciV3: IAlignment = (scigraph_v3 as any).default;\n        const sciV4: IAlignment = (scigraph_v4 as any).default;\n\n        this.alignmentModel.addAlignment(sciV1);\n        this.alignmentModel.addAlignment(sciV2);\n        this.alignmentModel.addAlignment(sciV3);\n        this.alignmentModel.addAlignment(sciV4);\n\n        this.alignmentModel.sortApiLabels();\n        this.alignmentModel.sortRelationLabels();\n\n        this.engServ.loadSceneForAlignmentContainer(this.alignmentModel);\n\n        this.engServ.animate();\n    }\n\n    public startAnimationExample2Systems() {\n        this.showAddAlignmentComponent = false;\n        this.animationStarted = true;\n\n        const dorisAlignment: IAlignment = (doris as any).default;\n        const filipoAlignment: IAlignment = (filipo as any).default;\n\n        this.alignmentModel.addAlignment(filipoAlignment);\n        this.alignmentModel.addAlignment(dorisAlignment);\n\n        this.alignmentModel.sortApiLabels();\n        this.alignmentModel.sortRelationLabels();\n\n        this.engServ.loadSceneForAlignmentContainer(this.alignmentModel);\n\n        this.engServ.animate();\n    }\n}\n","<div class=\"h-100 d-flex flex-column align-items-center justify-content-center\" style=\"height: 100%\" *ngIf=\"showAddAlignmentComponent\">\n  <app-data-selector (newAlignmentAdded)=\"onAlignmentAdded($event)\"></app-data-selector>\n  <button mat-raised-button color=\"primary\" class=\"m-1\" (click)=\"startAnimation()\" [disabled]=\"alignmentModel.alignments.length < 1\">Generate AlignmentCube</button>\n  <button mat-raised-button color=\"primary\" class=\" m-1\" (click)=\"startAnimationExample()\">Generate Example 1 System</button>\n  <button mat-raised-button color=\"primary\" class=\" m-1\" (click)=\"startAnimationExample2Systems()\">Generate Example 2 Systems</button>\n<!--  <button mat-raised-button color=\"primary\" class=\" m-1\" (click)=\"startAnimationExample2Systems()\" disabled>Generate Example n:m Mapping</button>-->\n</div>\n\n<div [style.display]=\"animationStarted ? 'block' : 'none' \">\n  <app-ui [engineService]=\"engServ\" *ngIf=\"animationStarted\"></app-ui>\n\n  <div id=\"graph-frame\" class=\"graph-frame\">\n    <div id=\"engine-wrapper\" class=\"engine-wrapper\">\n      <canvas #rendererCanvas id=\"renderCanvas\"></canvas>\n    </div>\n    <div id=\"engine-wrapper-label\" class=\"engine-wrapper-label\">\n    </div>\n  </div>\n</div>\n\n\n\n\n","import {enableProdMode, ViewEncapsulation} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, [{\n  defaultEncapsulation: ViewEncapsulation.None\n}]).catch(err => console.log(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}